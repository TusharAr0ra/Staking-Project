{
	"id": "4c59979b775d192b9b8669afc0817a51",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n/**\r\n * @author Tushar Arora\r\n * @title A contract to allow people to stake coins and get rewards.\r\n * @dev uses SafeERC20\r\n */ \r\ncontract StakingTokens\r\n{\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public immutable token;\r\n\r\n    event Staked(address indexed user, uint amount);\r\n    event Reward(address indexed user, uint amount);\r\n    event Withdraw(address indexed user, uint amount);\r\n    \r\n    error InsufficientBalance(string message);\r\n    error TimeNotCompleted(string message);\r\n    error NotOwner(string message);\r\n    error MultiStake(string message);\r\n\r\n    //to Store data\r\n    struct stakeData\r\n    {\r\n        uint256 amount;\r\n        uint256 timestamp; //I'll store withdraw time\r\n        uint256 tokensHeGetting;\r\n    }\r\n    mapping(address => stakeData) public stakers;\r\n\r\n    address owner;\r\n    uint256 rebasingIndex = 1; //higher the rebasing index, lesser will be the tokens of user.\r\n    uint256 toGiveReward;\r\n    uint256 totalStakedTokens = 0;\r\n    uint256 totalTokensReceivedToUser = 0;\r\n\r\n    \r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    constructor(IERC20 _token) \r\n    {\r\n        token = _token;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake.\r\n     * @dev Sets the value for {_amount}\r\n     * @param _amount Value a user want to stake.\r\n    */\r\n    function stake(uint256 _amount) public\r\n    {\r\n        if(stakers[msg.sender].amount > 0)\r\n            revert MultiStake(\"You can't stake again without withdrawing your previous money first\");\r\n\r\n        if(_amount <= 0 || token.balanceOf(msg.sender) < _amount)\r\n            revert InsufficientBalance(\"Insufficient Balance\");\r\n    \r\n       \r\n        // stakers[msg.sender].rebasingIndex = rebasingIndex; //assigning the percentage a user will get when he will stake the coin.\r\n\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n\r\n        stakers[msg.sender].amount += _amount;\r\n        stakers[msg.sender].timestamp = block.timestamp + 1 hours;\r\n\r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account.\r\n     * It will take out all the amount from their account.\r\n     */\r\n    function withdraw() public \r\n    {\r\n        stakeData memory user = stakers[msg.sender];\r\n        if(user.amount <= 0)\r\n        {\r\n            revert InsufficientBalance(\"No Tokens Staked\");\r\n        }\r\n        if(block.timestamp < user.timestamp)\r\n            revert TimeNotCompleted(\"You can't withdraw before 1 hour\");\r\n\r\n        uint stakeTime = block.timestamp - user.timestamp + 1 hours;\r\n        uint totalHours = stakeTime / 1 hours;\r\n        uint reward = rebasingIndex * (user.amount * totalHours) / 100; //giving reward based on his rebasingIndex\r\n\r\n        //this is how we will know that our contract have enough tokens to give rewards(1%)\r\n        if(token.balanceOf(address(this)) < (user.amount + reward))\r\n            revert InsufficientBalance(\"Not Enough Money to give reward\");\r\n\r\n        // Transfer the staked tokens back to the user\r\n        token.safeTransfer(msg.sender, user.amount + reward);\r\n\r\n        emit Withdraw(msg.sender, reward + user.amount);\r\n        //withdrawn\r\n        stakers[msg.sender].amount = 0;\r\n        stakers[msg.sender].timestamp = 0;\r\n\r\n        emit Reward(msg.sender, reward);\r\n    }\r\n\r\n    /**\r\n     * @param index is the percantage of rewards you want to give to the stakers\r\n     * \r\n     * changes the percentage of rewards the staker will get\r\n     */\r\n    function changeRebasingIndex(uint8 index) public    \r\n    {\r\n        if(msg.sender != owner)\r\n            revert NotOwner(\"you're not the owner\");\r\n\r\n        rebasingIndex = index;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"StakingTokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "MultiStake",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "TimeNotCompleted",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Reward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "index",
									"type": "uint8"
								}
							],
							"name": "changeRebasingIndex",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensHeGetting",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Tushar Arora",
						"details": "uses SafeERC20",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"changeRebasingIndex(uint8)": {
								"params": {
									"index": "is the percantage of rewards you want to give to the stakers  changes the percentage of rewards the staker will get"
								}
							},
							"stake(uint256)": {
								"details": "Sets the value for {_amount}",
								"params": {
									"_amount": "Value a user want to stake."
								}
							}
						},
						"title": "A contract to allow people to stake coins and get rewards.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":265:4059  contract StakingTokens... */\n  mstore(0x40, 0xa0)\n    /* \"staking.sol\":976:977  1 */\n  0x01\n    /* \"staking.sol\":952:977  uint256 rebasingIndex = 1 */\n  0x02\n  sstore\n    /* \"staking.sol\":1103:1104  0 */\n  0x00\n    /* \"staking.sol\":1075:1104  uint256 totalStakedTokens = 0 */\n  0x04\n  sstore\n    /* \"staking.sol\":1147:1148  0 */\n  0x00\n    /* \"staking.sol\":1111:1148  uint256 totalTokensReceivedToUser = 0 */\n  0x05\n  sstore\n    /* \"staking.sol\":1302:1397  constructor(IERC20 _token) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"staking.sol\":1354:1360  _token */\n  dup1\n    /* \"staking.sol\":1346:1360  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"staking.sol\":1379:1389  msg.sender */\n  caller\n    /* \"staking.sol\":1371:1376  owner */\n  0x01\n  0x00\n    /* \"staking.sol\":1371:1389  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":1302:1397  constructor(IERC20 _token) ... */\n  pop\n    /* \"staking.sol\":265:4059  contract StakingTokens... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_12:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_23\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_13:\n    /* \"#utility.yul\":769:806   */\n  tag_25\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_26:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_14:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_28\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1389   */\ntag_3:\n    /* \"#utility.yul\":1095:1101   */\n  0x00\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1132:1141   */\n  dup3\n    /* \"#utility.yul\":1123:1130   */\n  dup5\n    /* \"#utility.yul\":1119:1142   */\n  sub\n    /* \"#utility.yul\":1115:1147   */\n  slt\n    /* \"#utility.yul\":1112:1231   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1150:1229   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1112:1231   */\ntag_30:\n    /* \"#utility.yul\":1270:1271   */\n  0x00\n    /* \"#utility.yul\":1295:1372   */\n  tag_32\n    /* \"#utility.yul\":1364:1371   */\n  dup5\n    /* \"#utility.yul\":1355:1361   */\n  dup3\n    /* \"#utility.yul\":1344:1353   */\n  dup6\n    /* \"#utility.yul\":1340:1362   */\n  add\n    /* \"#utility.yul\":1295:1372   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1285:1372   */\n  swap2\n  pop\n    /* \"#utility.yul\":1241:1382   */\n  pop\n    /* \"#utility.yul\":1012:1389   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"staking.sol\":265:4059  contract StakingTokens... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":265:4059  contract StakingTokens... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x337b8b96\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":3869:4056  function changeRebasingIndex(uint8 index) public    ... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"staking.sol\":2555:3690  function withdraw() public ... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"staking.sol\":879:923  mapping(address => stakeData) public stakers */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1635:2352  function stake(uint256 _amount) public... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"staking.sol\":329:358  IERC20 public immutable token */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":3869:4056  function changeRebasingIndex(uint8 index) public    ... */\n    tag_11:\n        /* \"staking.sol\":3955:3960  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":3941:3960  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":3941:3951  msg.sender */\n      caller\n        /* \"staking.sol\":3941:3960  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"staking.sol\":3938:4014  if(msg.sender != owner)... */\n      tag_29\n      jumpi\n        /* \"staking.sol\":3982:4014  NotOwner(\"you're not the owner\") */\n      mload(0x40)\n      0xf7251ccf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking.sol\":3938:4014  if(msg.sender != owner)... */\n    tag_29:\n        /* \"staking.sol\":4043:4048  index */\n      dup1\n        /* \"staking.sol\":4027:4048  rebasingIndex = index */\n      0xff\n      and\n        /* \"staking.sol\":4027:4040  rebasingIndex */\n      0x02\n        /* \"staking.sol\":4027:4048  rebasingIndex = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":3869:4056  function changeRebasingIndex(uint8 index) public    ... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":2555:3690  function withdraw() public ... */\n    tag_13:\n        /* \"staking.sol\":2599:2620  stakeData memory user */\n      0x00\n        /* \"staking.sol\":2623:2630  stakers */\n      dup1\n        /* \"staking.sol\":2623:2642  stakers[msg.sender] */\n      0x00\n        /* \"staking.sol\":2631:2641  msg.sender */\n      caller\n        /* \"staking.sol\":2623:2642  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2599:2642  stakeData memory user = stakers[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"staking.sol\":2671:2672  0 */\n      0x00\n        /* \"staking.sol\":2656:2660  user */\n      dup2\n        /* \"staking.sol\":2656:2667  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking.sol\":2656:2672  user.amount <= 0 */\n      gt\n        /* \"staking.sol\":2653:2756  if(user.amount <= 0)... */\n      tag_33\n      jumpi\n        /* \"staking.sol\":2705:2744  InsufficientBalance(\"No Tokens Staked\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking.sol\":2653:2756  if(user.amount <= 0)... */\n    tag_33:\n        /* \"staking.sol\":2787:2791  user */\n      dup1\n        /* \"staking.sol\":2787:2801  user.timestamp */\n      0x20\n      add\n      mload\n        /* \"staking.sol\":2769:2784  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2769:2801  block.timestamp < user.timestamp */\n      lt\n        /* \"staking.sol\":2766:2875  if(block.timestamp < user.timestamp)... */\n      iszero\n      tag_36\n      jumpi\n        /* \"staking.sol\":2823:2875  TimeNotCompleted(\"You can't withdraw before 1 hour\") */\n      mload(0x40)\n      0x30f1c21600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking.sol\":2766:2875  if(block.timestamp < user.timestamp)... */\n    tag_36:\n        /* \"staking.sol\":2888:2902  uint stakeTime */\n      0x00\n        /* \"staking.sol\":2940:2947  1 hours */\n      0x0e10\n        /* \"staking.sol\":2923:2927  user */\n      dup3\n        /* \"staking.sol\":2923:2937  user.timestamp */\n      0x20\n      add\n      mload\n        /* \"staking.sol\":2905:2920  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2905:2937  block.timestamp - user.timestamp */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"staking.sol\":2905:2947  block.timestamp - user.timestamp + 1 hours */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"staking.sol\":2888:2947  uint stakeTime = block.timestamp - user.timestamp + 1 hours */\n      swap1\n      pop\n        /* \"staking.sol\":2958:2973  uint totalHours */\n      0x00\n        /* \"staking.sol\":2988:2995  1 hours */\n      0x0e10\n        /* \"staking.sol\":2976:2985  stakeTime */\n      dup3\n        /* \"staking.sol\":2976:2995  stakeTime / 1 hours */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"staking.sol\":2958:2995  uint totalHours = stakeTime / 1 hours */\n      swap1\n      pop\n        /* \"staking.sol\":3006:3017  uint reward */\n      0x00\n        /* \"staking.sol\":3065:3068  100 */\n      0x64\n        /* \"staking.sol\":3051:3061  totalHours */\n      dup3\n        /* \"staking.sol\":3037:3041  user */\n      dup6\n        /* \"staking.sol\":3037:3048  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking.sol\":3037:3061  user.amount * totalHours */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"staking.sol\":3020:3033  rebasingIndex */\n      sload(0x02)\n        /* \"staking.sol\":3020:3062  rebasingIndex * (user.amount * totalHours) */\n      tag_47\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_47:\n        /* \"staking.sol\":3020:3068  rebasingIndex * (user.amount * totalHours) / 100 */\n      tag_48\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_48:\n        /* \"staking.sol\":3006:3068  uint reward = rebasingIndex * (user.amount * totalHours) / 100 */\n      swap1\n      pop\n        /* \"staking.sol\":3268:3274  reward */\n      dup1\n        /* \"staking.sol\":3254:3258  user */\n      dup5\n        /* \"staking.sol\":3254:3265  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking.sol\":3254:3274  user.amount + reward */\n      tag_49\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"staking.sol\":3220:3225  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking.sol\":3220:3235  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"staking.sol\":3244:3248  this */\n      address\n        /* \"staking.sol\":3220:3250  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"staking.sol\":3220:3275  token.balanceOf(address(this)) < (user.amount + reward) */\n      lt\n        /* \"staking.sol\":3217:3351  if(token.balanceOf(address(this)) < (user.amount + reward))... */\n      iszero\n      tag_56\n      jumpi\n        /* \"staking.sol\":3297:3351  InsufficientBalance(\"Not Enough Money to give reward\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking.sol\":3217:3351  if(token.balanceOf(address(this)) < (user.amount + reward))... */\n    tag_56:\n        /* \"staking.sol\":3420:3472  token.safeTransfer(msg.sender, user.amount + reward) */\n      tag_59\n        /* \"staking.sol\":3439:3449  msg.sender */\n      caller\n        /* \"staking.sol\":3465:3471  reward */\n      dup3\n        /* \"staking.sol\":3451:3455  user */\n      dup7\n        /* \"staking.sol\":3451:3462  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking.sol\":3451:3471  user.amount + reward */\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n        /* \"staking.sol\":3420:3425  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking.sol\":3420:3438  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_61\n      swap1\n        /* \"staking.sol\":3420:3472  token.safeTransfer(msg.sender, user.amount + reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"staking.sol\":3499:3509  msg.sender */\n      caller\n        /* \"staking.sol\":3490:3532  Withdraw(msg.sender, reward + user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"staking.sol\":3520:3524  user */\n      dup6\n        /* \"staking.sol\":3520:3531  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking.sol\":3511:3517  reward */\n      dup4\n        /* \"staking.sol\":3511:3531  reward + user.amount */\n      tag_62\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_62:\n        /* \"staking.sol\":3490:3532  Withdraw(msg.sender, reward + user.amount) */\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking.sol\":3593:3594  0 */\n      0x00\n        /* \"staking.sol\":3564:3571  stakers */\n      dup1\n        /* \"staking.sol\":3564:3583  stakers[msg.sender] */\n      0x00\n        /* \"staking.sol\":3572:3582  msg.sender */\n      caller\n        /* \"staking.sol\":3564:3583  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3564:3590  stakers[msg.sender].amount */\n      0x00\n      add\n        /* \"staking.sol\":3564:3594  stakers[msg.sender].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":3637:3638  0 */\n      0x00\n        /* \"staking.sol\":3605:3612  stakers */\n      dup1\n        /* \"staking.sol\":3605:3624  stakers[msg.sender] */\n      0x00\n        /* \"staking.sol\":3613:3623  msg.sender */\n      caller\n        /* \"staking.sol\":3605:3624  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3605:3634  stakers[msg.sender].timestamp */\n      0x01\n      add\n        /* \"staking.sol\":3605:3638  stakers[msg.sender].timestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":3663:3673  msg.sender */\n      caller\n        /* \"staking.sol\":3656:3682  Reward(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9\n        /* \"staking.sol\":3675:3681  reward */\n      dup3\n        /* \"staking.sol\":3656:3682  Reward(msg.sender, reward) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking.sol\":2588:3690  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":2555:3690  function withdraw() public ... */\n      jump\t// out\n        /* \"staking.sol\":879:923  mapping(address => stakeData) public stakers */\n    tag_17:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"staking.sol\":1635:2352  function stake(uint256 _amount) public... */\n    tag_23:\n        /* \"staking.sol\":1722:1723  0 */\n      0x00\n        /* \"staking.sol\":1693:1700  stakers */\n      dup1\n        /* \"staking.sol\":1693:1712  stakers[msg.sender] */\n      0x00\n        /* \"staking.sol\":1701:1711  msg.sender */\n      caller\n        /* \"staking.sol\":1693:1712  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1693:1719  stakers[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":1693:1723  stakers[msg.sender].amount > 0 */\n      gt\n        /* \"staking.sol\":1690:1826  if(stakers[msg.sender].amount > 0)... */\n      iszero\n      tag_67\n      jumpi\n        /* \"staking.sol\":1745:1826  MultiStake(\"You can't stake again without withdrawing your previous money first\") */\n      mload(0x40)\n      0x0dd028d800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking.sol\":1690:1826  if(stakers[msg.sender].amount > 0)... */\n    tag_67:\n        /* \"staking.sol\":1853:1854  0 */\n      0x00\n        /* \"staking.sol\":1842:1849  _amount */\n      dup2\n        /* \"staking.sol\":1842:1854  _amount <= 0 */\n      gt\n      iszero\n        /* \"staking.sol\":1842:1895  _amount <= 0 || token.balanceOf(msg.sender) < _amount */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"staking.sol\":1888:1895  _amount */\n      dup1\n        /* \"staking.sol\":1858:1863  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking.sol\":1858:1873  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"staking.sol\":1874:1884  msg.sender */\n      caller\n        /* \"staking.sol\":1858:1885  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_74:\n        /* \"staking.sol\":1858:1895  token.balanceOf(msg.sender) < _amount */\n      lt\n        /* \"staking.sol\":1842:1895  _amount <= 0 || token.balanceOf(msg.sender) < _amount */\n    tag_70:\n        /* \"staking.sol\":1839:1960  if(_amount <= 0 || token.balanceOf(msg.sender) < _amount)... */\n      iszero\n      tag_75\n      jumpi\n        /* \"staking.sol\":1917:1960  InsufficientBalance(\"Insufficient Balance\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking.sol\":1839:1960  if(_amount <= 0 || token.balanceOf(msg.sender) < _amount)... */\n    tag_75:\n        /* \"staking.sol\":2123:2181  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_78\n        /* \"staking.sol\":2146:2156  msg.sender */\n      caller\n        /* \"staking.sol\":2166:2170  this */\n      address\n        /* \"staking.sol\":2173:2180  _amount */\n      dup4\n        /* \"staking.sol\":2123:2128  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking.sol\":2123:2145  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_79\n      swap1\n        /* \"staking.sol\":2123:2181  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"staking.sol\":2224:2231  _amount */\n      dup1\n        /* \"staking.sol\":2194:2201  stakers */\n      0x00\n        /* \"staking.sol\":2194:2213  stakers[msg.sender] */\n      dup1\n        /* \"staking.sol\":2202:2212  msg.sender */\n      caller\n        /* \"staking.sol\":2194:2213  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2194:2220  stakers[msg.sender].amount */\n      0x00\n      add\n      0x00\n        /* \"staking.sol\":2194:2231  stakers[msg.sender].amount += _amount */\n      dup3\n      dup3\n      sload\n      tag_80\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_80:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2292:2299  1 hours */\n      0x0e10\n        /* \"staking.sol\":2274:2289  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2274:2299  block.timestamp + 1 hours */\n      tag_81\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_81:\n        /* \"staking.sol\":2242:2249  stakers */\n      0x00\n        /* \"staking.sol\":2242:2261  stakers[msg.sender] */\n      dup1\n        /* \"staking.sol\":2250:2260  msg.sender */\n      caller\n        /* \"staking.sol\":2242:2261  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2242:2271  stakers[msg.sender].timestamp */\n      0x01\n      add\n        /* \"staking.sol\":2242:2299  stakers[msg.sender].timestamp = block.timestamp + 1 hours */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2324:2334  msg.sender */\n      caller\n        /* \"staking.sol\":2317:2344  Staked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"staking.sol\":2336:2343  _amount */\n      dup3\n        /* \"staking.sol\":2317:2344  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking.sol\":1635:2352  function stake(uint256 _amount) public... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":329:358  IERC20 public immutable token */\n    tag_25:\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_85\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_90\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_94\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_110\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_109)\n    tag_110:\n      0x60\n      swap2\n      pop\n    tag_109:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_115\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_117)\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_113)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_113:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_125:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:420   */\n    tag_127:\n        /* \"#utility.yul\":369:376   */\n      0x00\n        /* \"#utility.yul\":409:413   */\n      0xff\n        /* \"#utility.yul\":402:407   */\n      dup3\n        /* \"#utility.yul\":398:414   */\n      and\n        /* \"#utility.yul\":387:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":426:544   */\n    tag_128:\n        /* \"#utility.yul\":497:519   */\n      tag_173\n        /* \"#utility.yul\":513:518   */\n      dup2\n        /* \"#utility.yul\":497:519   */\n      tag_127\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":490:495   */\n      dup2\n        /* \"#utility.yul\":487:520   */\n      eq\n        /* \"#utility.yul\":477:538   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":477:538   */\n    tag_174:\n        /* \"#utility.yul\":426:544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":550:685   */\n    tag_129:\n        /* \"#utility.yul\":594:599   */\n      0x00\n        /* \"#utility.yul\":632:638   */\n      dup2\n        /* \"#utility.yul\":619:639   */\n      calldataload\n        /* \"#utility.yul\":610:639   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:679   */\n      tag_176\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":648:679   */\n      tag_128\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":550:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1016   */\n    tag_10:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":797:799   */\n      0x20\n        /* \"#utility.yul\":785:794   */\n      dup3\n        /* \"#utility.yul\":776:783   */\n      dup5\n        /* \"#utility.yul\":772:795   */\n      sub\n        /* \"#utility.yul\":768:800   */\n      slt\n        /* \"#utility.yul\":765:884   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":803:882   */\n      tag_179\n      tag_125\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":765:884   */\n    tag_178:\n        /* \"#utility.yul\":923:924   */\n      0x00\n        /* \"#utility.yul\":948:999   */\n      tag_180\n        /* \"#utility.yul\":991:998   */\n      dup5\n        /* \"#utility.yul\":982:988   */\n      dup3\n        /* \"#utility.yul\":971:980   */\n      dup6\n        /* \"#utility.yul\":967:989   */\n      add\n        /* \"#utility.yul\":948:999   */\n      tag_129\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":938:999   */\n      swap2\n      pop\n        /* \"#utility.yul\":894:1009   */\n      pop\n        /* \"#utility.yul\":691:1016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1148   */\n    tag_130:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1141   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1097   */\n      dup3\n        /* \"#utility.yul\":1088:1142   */\n      and\n        /* \"#utility.yul\":1077:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1154:1250   */\n    tag_131:\n        /* \"#utility.yul\":1191:1198   */\n      0x00\n        /* \"#utility.yul\":1220:1244   */\n      tag_183\n        /* \"#utility.yul\":1238:1243   */\n      dup3\n        /* \"#utility.yul\":1220:1244   */\n      tag_130\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1209:1244   */\n      swap1\n      pop\n        /* \"#utility.yul\":1154:1250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1256:1378   */\n    tag_132:\n        /* \"#utility.yul\":1329:1353   */\n      tag_185\n        /* \"#utility.yul\":1347:1352   */\n      dup2\n        /* \"#utility.yul\":1329:1353   */\n      tag_131\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1322:1327   */\n      dup2\n        /* \"#utility.yul\":1319:1354   */\n      eq\n        /* \"#utility.yul\":1309:1372   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1309:1372   */\n    tag_186:\n        /* \"#utility.yul\":1256:1378   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1523   */\n    tag_133:\n        /* \"#utility.yul\":1430:1435   */\n      0x00\n        /* \"#utility.yul\":1468:1474   */\n      dup2\n        /* \"#utility.yul\":1455:1475   */\n      calldataload\n        /* \"#utility.yul\":1446:1475   */\n      swap1\n      pop\n        /* \"#utility.yul\":1484:1517   */\n      tag_188\n        /* \"#utility.yul\":1511:1516   */\n      dup2\n        /* \"#utility.yul\":1484:1517   */\n      tag_132\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1384:1523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1529:1858   */\n    tag_16:\n        /* \"#utility.yul\":1588:1594   */\n      0x00\n        /* \"#utility.yul\":1637:1639   */\n      0x20\n        /* \"#utility.yul\":1625:1634   */\n      dup3\n        /* \"#utility.yul\":1616:1623   */\n      dup5\n        /* \"#utility.yul\":1612:1635   */\n      sub\n        /* \"#utility.yul\":1608:1640   */\n      slt\n        /* \"#utility.yul\":1605:1724   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":1643:1722   */\n      tag_191\n      tag_125\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1605:1724   */\n    tag_190:\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1788:1841   */\n      tag_192\n        /* \"#utility.yul\":1833:1840   */\n      dup5\n        /* \"#utility.yul\":1824:1830   */\n      dup3\n        /* \"#utility.yul\":1813:1822   */\n      dup6\n        /* \"#utility.yul\":1809:1831   */\n      add\n        /* \"#utility.yul\":1788:1841   */\n      tag_133\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1778:1841   */\n      swap2\n      pop\n        /* \"#utility.yul\":1734:1851   */\n      pop\n        /* \"#utility.yul\":1529:1858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1864:1941   */\n    tag_134:\n        /* \"#utility.yul\":1901:1908   */\n      0x00\n        /* \"#utility.yul\":1930:1935   */\n      dup2\n        /* \"#utility.yul\":1919:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1864:1941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1947:2065   */\n    tag_135:\n        /* \"#utility.yul\":2034:2058   */\n      tag_195\n        /* \"#utility.yul\":2052:2057   */\n      dup2\n        /* \"#utility.yul\":2034:2058   */\n      tag_134\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2029:2032   */\n      dup3\n        /* \"#utility.yul\":2022:2059   */\n      mstore\n        /* \"#utility.yul\":1947:2065   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2071:2513   */\n    tag_19:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2258:2260   */\n      0x60\n        /* \"#utility.yul\":2247:2256   */\n      dup3\n        /* \"#utility.yul\":2243:2261   */\n      add\n        /* \"#utility.yul\":2235:2261   */\n      swap1\n      pop\n        /* \"#utility.yul\":2271:2342   */\n      tag_197\n        /* \"#utility.yul\":2339:2340   */\n      0x00\n        /* \"#utility.yul\":2328:2337   */\n      dup4\n        /* \"#utility.yul\":2324:2341   */\n      add\n        /* \"#utility.yul\":2315:2321   */\n      dup7\n        /* \"#utility.yul\":2271:2342   */\n      tag_135\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2352:2424   */\n      tag_198\n        /* \"#utility.yul\":2420:2422   */\n      0x20\n        /* \"#utility.yul\":2409:2418   */\n      dup4\n        /* \"#utility.yul\":2405:2423   */\n      add\n        /* \"#utility.yul\":2396:2402   */\n      dup6\n        /* \"#utility.yul\":2352:2424   */\n      tag_135\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2434:2506   */\n      tag_199\n        /* \"#utility.yul\":2502:2504   */\n      0x40\n        /* \"#utility.yul\":2491:2500   */\n      dup4\n        /* \"#utility.yul\":2487:2505   */\n      add\n        /* \"#utility.yul\":2478:2484   */\n      dup5\n        /* \"#utility.yul\":2434:2506   */\n      tag_135\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2071:2513   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2641   */\n    tag_136:\n        /* \"#utility.yul\":2592:2616   */\n      tag_201\n        /* \"#utility.yul\":2610:2615   */\n      dup2\n        /* \"#utility.yul\":2592:2616   */\n      tag_134\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2585:2590   */\n      dup2\n        /* \"#utility.yul\":2582:2617   */\n      eq\n        /* \"#utility.yul\":2572:2635   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2631:2632   */\n      0x00\n        /* \"#utility.yul\":2628:2629   */\n      dup1\n        /* \"#utility.yul\":2621:2633   */\n      revert\n        /* \"#utility.yul\":2572:2635   */\n    tag_202:\n        /* \"#utility.yul\":2519:2641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2647:2786   */\n    tag_137:\n        /* \"#utility.yul\":2693:2698   */\n      0x00\n        /* \"#utility.yul\":2731:2737   */\n      dup2\n        /* \"#utility.yul\":2718:2738   */\n      calldataload\n        /* \"#utility.yul\":2709:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2747:2780   */\n      tag_204\n        /* \"#utility.yul\":2774:2779   */\n      dup2\n        /* \"#utility.yul\":2747:2780   */\n      tag_136\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2647:2786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2792:3121   */\n    tag_22:\n        /* \"#utility.yul\":2851:2857   */\n      0x00\n        /* \"#utility.yul\":2900:2902   */\n      0x20\n        /* \"#utility.yul\":2888:2897   */\n      dup3\n        /* \"#utility.yul\":2879:2886   */\n      dup5\n        /* \"#utility.yul\":2875:2898   */\n      sub\n        /* \"#utility.yul\":2871:2903   */\n      slt\n        /* \"#utility.yul\":2868:2987   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2906:2985   */\n      tag_207\n      tag_125\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2868:2987   */\n    tag_206:\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3051:3104   */\n      tag_208\n        /* \"#utility.yul\":3096:3103   */\n      dup5\n        /* \"#utility.yul\":3087:3093   */\n      dup3\n        /* \"#utility.yul\":3076:3085   */\n      dup6\n        /* \"#utility.yul\":3072:3094   */\n      add\n        /* \"#utility.yul\":3051:3104   */\n      tag_137\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3041:3104   */\n      swap2\n      pop\n        /* \"#utility.yul\":2997:3114   */\n      pop\n        /* \"#utility.yul\":2792:3121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3127:3187   */\n    tag_138:\n        /* \"#utility.yul\":3155:3158   */\n      0x00\n        /* \"#utility.yul\":3176:3181   */\n      dup2\n        /* \"#utility.yul\":3169:3181   */\n      swap1\n      pop\n        /* \"#utility.yul\":3127:3187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3193:3335   */\n    tag_139:\n        /* \"#utility.yul\":3243:3252   */\n      0x00\n        /* \"#utility.yul\":3276:3329   */\n      tag_211\n        /* \"#utility.yul\":3294:3328   */\n      tag_212\n        /* \"#utility.yul\":3303:3327   */\n      tag_213\n        /* \"#utility.yul\":3321:3326   */\n      dup5\n        /* \"#utility.yul\":3303:3327   */\n      tag_130\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3294:3328   */\n      tag_138\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3276:3329   */\n      tag_130\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3263:3329   */\n      swap1\n      pop\n        /* \"#utility.yul\":3193:3335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3341:3467   */\n    tag_140:\n        /* \"#utility.yul\":3391:3400   */\n      0x00\n        /* \"#utility.yul\":3424:3461   */\n      tag_215\n        /* \"#utility.yul\":3455:3460   */\n      dup3\n        /* \"#utility.yul\":3424:3461   */\n      tag_139\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3411:3461   */\n      swap1\n      pop\n        /* \"#utility.yul\":3341:3467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3612   */\n    tag_141:\n        /* \"#utility.yul\":3536:3545   */\n      0x00\n        /* \"#utility.yul\":3569:3606   */\n      tag_217\n        /* \"#utility.yul\":3600:3605   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      tag_140\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3556:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3473:3612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3775   */\n    tag_142:\n        /* \"#utility.yul\":3718:3768   */\n      tag_219\n        /* \"#utility.yul\":3762:3767   */\n      dup2\n        /* \"#utility.yul\":3718:3768   */\n      tag_141\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3713:3716   */\n      dup3\n        /* \"#utility.yul\":3706:3769   */\n      mstore\n        /* \"#utility.yul\":3618:3775   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:4029   */\n    tag_27:\n        /* \"#utility.yul\":3887:3891   */\n      0x00\n        /* \"#utility.yul\":3925:3927   */\n      0x20\n        /* \"#utility.yul\":3914:3923   */\n      dup3\n        /* \"#utility.yul\":3910:3928   */\n      add\n        /* \"#utility.yul\":3902:3928   */\n      swap1\n      pop\n        /* \"#utility.yul\":3938:4022   */\n      tag_221\n        /* \"#utility.yul\":4019:4020   */\n      0x00\n        /* \"#utility.yul\":4008:4017   */\n      dup4\n        /* \"#utility.yul\":4004:4021   */\n      add\n        /* \"#utility.yul\":3995:4001   */\n      dup5\n        /* \"#utility.yul\":3938:4022   */\n      tag_142\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3781:4029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4035:4204   */\n    tag_143:\n        /* \"#utility.yul\":4119:4130   */\n      0x00\n        /* \"#utility.yul\":4153:4159   */\n      dup3\n        /* \"#utility.yul\":4148:4151   */\n      dup3\n        /* \"#utility.yul\":4141:4160   */\n      mstore\n        /* \"#utility.yul\":4193:4197   */\n      0x20\n        /* \"#utility.yul\":4188:4191   */\n      dup3\n        /* \"#utility.yul\":4184:4198   */\n      add\n        /* \"#utility.yul\":4169:4198   */\n      swap1\n      pop\n        /* \"#utility.yul\":4035:4204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4210:4380   */\n    tag_144:\n        /* \"#utility.yul\":4350:4372   */\n      0x796f75277265206e6f7420746865206f776e6572000000000000000000000000\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4338:4344   */\n      dup3\n        /* \"#utility.yul\":4334:4348   */\n      add\n        /* \"#utility.yul\":4327:4373   */\n      mstore\n        /* \"#utility.yul\":4210:4380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4752   */\n    tag_145:\n        /* \"#utility.yul\":4528:4531   */\n      0x00\n        /* \"#utility.yul\":4549:4616   */\n      tag_225\n        /* \"#utility.yul\":4613:4615   */\n      0x14\n        /* \"#utility.yul\":4608:4611   */\n      dup4\n        /* \"#utility.yul\":4549:4616   */\n      tag_143\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4542:4616   */\n      swap2\n      pop\n        /* \"#utility.yul\":4625:4718   */\n      tag_226\n        /* \"#utility.yul\":4714:4717   */\n      dup3\n        /* \"#utility.yul\":4625:4718   */\n      tag_144\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"#utility.yul\":4738:4741   */\n      dup3\n        /* \"#utility.yul\":4734:4746   */\n      add\n        /* \"#utility.yul\":4727:4746   */\n      swap1\n      pop\n        /* \"#utility.yul\":4386:4752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4758:5177   */\n    tag_31:\n        /* \"#utility.yul\":4924:4928   */\n      0x00\n        /* \"#utility.yul\":4962:4964   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4947:4965   */\n      add\n        /* \"#utility.yul\":4939:4965   */\n      swap1\n      pop\n        /* \"#utility.yul\":5011:5020   */\n      dup2\n        /* \"#utility.yul\":5005:5009   */\n      dup2\n        /* \"#utility.yul\":5001:5021   */\n      sub\n        /* \"#utility.yul\":4997:4998   */\n      0x00\n        /* \"#utility.yul\":4986:4995   */\n      dup4\n        /* \"#utility.yul\":4982:4999   */\n      add\n        /* \"#utility.yul\":4975:5022   */\n      mstore\n        /* \"#utility.yul\":5039:5170   */\n      tag_228\n        /* \"#utility.yul\":5165:5169   */\n      dup2\n        /* \"#utility.yul\":5039:5170   */\n      tag_145\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5031:5170   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:5177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5183:5349   */\n    tag_146:\n        /* \"#utility.yul\":5323:5341   */\n      0x4e6f20546f6b656e73205374616b656400000000000000000000000000000000\n        /* \"#utility.yul\":5319:5320   */\n      0x00\n        /* \"#utility.yul\":5311:5317   */\n      dup3\n        /* \"#utility.yul\":5307:5321   */\n      add\n        /* \"#utility.yul\":5300:5342   */\n      mstore\n        /* \"#utility.yul\":5183:5349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5355:5721   */\n    tag_147:\n        /* \"#utility.yul\":5497:5500   */\n      0x00\n        /* \"#utility.yul\":5518:5585   */\n      tag_231\n        /* \"#utility.yul\":5582:5584   */\n      0x10\n        /* \"#utility.yul\":5577:5580   */\n      dup4\n        /* \"#utility.yul\":5518:5585   */\n      tag_143\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5511:5585   */\n      swap2\n      pop\n        /* \"#utility.yul\":5594:5687   */\n      tag_232\n        /* \"#utility.yul\":5683:5686   */\n      dup3\n        /* \"#utility.yul\":5594:5687   */\n      tag_146\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5712:5714   */\n      0x20\n        /* \"#utility.yul\":5707:5710   */\n      dup3\n        /* \"#utility.yul\":5703:5715   */\n      add\n        /* \"#utility.yul\":5696:5715   */\n      swap1\n      pop\n        /* \"#utility.yul\":5355:5721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5727:6146   */\n    tag_35:\n        /* \"#utility.yul\":5893:5897   */\n      0x00\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5920:5929   */\n      dup3\n        /* \"#utility.yul\":5916:5934   */\n      add\n        /* \"#utility.yul\":5908:5934   */\n      swap1\n      pop\n        /* \"#utility.yul\":5980:5989   */\n      dup2\n        /* \"#utility.yul\":5974:5978   */\n      dup2\n        /* \"#utility.yul\":5970:5990   */\n      sub\n        /* \"#utility.yul\":5966:5967   */\n      0x00\n        /* \"#utility.yul\":5955:5964   */\n      dup4\n        /* \"#utility.yul\":5951:5968   */\n      add\n        /* \"#utility.yul\":5944:5991   */\n      mstore\n        /* \"#utility.yul\":6008:6139   */\n      tag_234\n        /* \"#utility.yul\":6134:6138   */\n      dup2\n        /* \"#utility.yul\":6008:6139   */\n      tag_147\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6000:6139   */\n      swap1\n      pop\n        /* \"#utility.yul\":5727:6146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6152:6334   */\n    tag_148:\n        /* \"#utility.yul\":6292:6326   */\n      0x596f752063616e2774207769746864726177206265666f7265203120686f7572\n        /* \"#utility.yul\":6288:6289   */\n      0x00\n        /* \"#utility.yul\":6280:6286   */\n      dup3\n        /* \"#utility.yul\":6276:6290   */\n      add\n        /* \"#utility.yul\":6269:6327   */\n      mstore\n        /* \"#utility.yul\":6152:6334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6340:6706   */\n    tag_149:\n        /* \"#utility.yul\":6482:6485   */\n      0x00\n        /* \"#utility.yul\":6503:6570   */\n      tag_237\n        /* \"#utility.yul\":6567:6569   */\n      0x20\n        /* \"#utility.yul\":6562:6565   */\n      dup4\n        /* \"#utility.yul\":6503:6570   */\n      tag_143\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6496:6570   */\n      swap2\n      pop\n        /* \"#utility.yul\":6579:6672   */\n      tag_238\n        /* \"#utility.yul\":6668:6671   */\n      dup3\n        /* \"#utility.yul\":6579:6672   */\n      tag_148\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6697:6699   */\n      0x20\n        /* \"#utility.yul\":6692:6695   */\n      dup3\n        /* \"#utility.yul\":6688:6700   */\n      add\n        /* \"#utility.yul\":6681:6700   */\n      swap1\n      pop\n        /* \"#utility.yul\":6340:6706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6712:7131   */\n    tag_38:\n        /* \"#utility.yul\":6878:6882   */\n      0x00\n        /* \"#utility.yul\":6916:6918   */\n      0x20\n        /* \"#utility.yul\":6905:6914   */\n      dup3\n        /* \"#utility.yul\":6901:6919   */\n      add\n        /* \"#utility.yul\":6893:6919   */\n      swap1\n      pop\n        /* \"#utility.yul\":6965:6974   */\n      dup2\n        /* \"#utility.yul\":6959:6963   */\n      dup2\n        /* \"#utility.yul\":6955:6975   */\n      sub\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6929:6976   */\n      mstore\n        /* \"#utility.yul\":6993:7124   */\n      tag_240\n        /* \"#utility.yul\":7119:7123   */\n      dup2\n        /* \"#utility.yul\":6993:7124   */\n      tag_149\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6985:7124   */\n      swap1\n      pop\n        /* \"#utility.yul\":6712:7131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7137:7317   */\n    tag_150:\n        /* \"#utility.yul\":7185:7262   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7182:7183   */\n      0x00\n        /* \"#utility.yul\":7175:7263   */\n      mstore\n        /* \"#utility.yul\":7282:7286   */\n      0x11\n        /* \"#utility.yul\":7279:7280   */\n      0x04\n        /* \"#utility.yul\":7272:7287   */\n      mstore\n        /* \"#utility.yul\":7306:7310   */\n      0x24\n        /* \"#utility.yul\":7303:7304   */\n      0x00\n        /* \"#utility.yul\":7296:7311   */\n      revert\n        /* \"#utility.yul\":7323:7517   */\n    tag_40:\n        /* \"#utility.yul\":7363:7367   */\n      0x00\n        /* \"#utility.yul\":7383:7403   */\n      tag_243\n        /* \"#utility.yul\":7401:7402   */\n      dup3\n        /* \"#utility.yul\":7383:7403   */\n      tag_134\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7378:7403   */\n      swap2\n      pop\n        /* \"#utility.yul\":7417:7437   */\n      tag_244\n        /* \"#utility.yul\":7435:7436   */\n      dup4\n        /* \"#utility.yul\":7417:7437   */\n      tag_134\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7412:7437   */\n      swap3\n      pop\n        /* \"#utility.yul\":7461:7462   */\n      dup3\n        /* \"#utility.yul\":7458:7459   */\n      dup3\n        /* \"#utility.yul\":7454:7463   */\n      sub\n        /* \"#utility.yul\":7446:7463   */\n      swap1\n      pop\n        /* \"#utility.yul\":7485:7486   */\n      dup2\n        /* \"#utility.yul\":7479:7483   */\n      dup2\n        /* \"#utility.yul\":7476:7487   */\n      gt\n        /* \"#utility.yul\":7473:7510   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":7490:7508   */\n      tag_246\n      tag_150\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7473:7510   */\n    tag_245:\n        /* \"#utility.yul\":7323:7517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7523:7714   */\n    tag_42:\n        /* \"#utility.yul\":7563:7566   */\n      0x00\n        /* \"#utility.yul\":7582:7602   */\n      tag_248\n        /* \"#utility.yul\":7600:7601   */\n      dup3\n        /* \"#utility.yul\":7582:7602   */\n      tag_134\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7577:7602   */\n      swap2\n      pop\n        /* \"#utility.yul\":7616:7636   */\n      tag_249\n        /* \"#utility.yul\":7634:7635   */\n      dup4\n        /* \"#utility.yul\":7616:7636   */\n      tag_134\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7611:7636   */\n      swap3\n      pop\n        /* \"#utility.yul\":7659:7660   */\n      dup3\n        /* \"#utility.yul\":7656:7657   */\n      dup3\n        /* \"#utility.yul\":7652:7661   */\n      add\n        /* \"#utility.yul\":7645:7661   */\n      swap1\n      pop\n        /* \"#utility.yul\":7680:7683   */\n      dup1\n        /* \"#utility.yul\":7677:7678   */\n      dup3\n        /* \"#utility.yul\":7674:7684   */\n      gt\n        /* \"#utility.yul\":7671:7707   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":7687:7705   */\n      tag_251\n      tag_150\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7671:7707   */\n    tag_250:\n        /* \"#utility.yul\":7523:7714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7720:7900   */\n    tag_151:\n        /* \"#utility.yul\":7768:7845   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7765:7766   */\n      0x00\n        /* \"#utility.yul\":7758:7846   */\n      mstore\n        /* \"#utility.yul\":7865:7869   */\n      0x12\n        /* \"#utility.yul\":7862:7863   */\n      0x04\n        /* \"#utility.yul\":7855:7870   */\n      mstore\n        /* \"#utility.yul\":7889:7893   */\n      0x24\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7894   */\n      revert\n        /* \"#utility.yul\":7906:8091   */\n    tag_44:\n        /* \"#utility.yul\":7946:7947   */\n      0x00\n        /* \"#utility.yul\":7963:7983   */\n      tag_254\n        /* \"#utility.yul\":7981:7982   */\n      dup3\n        /* \"#utility.yul\":7963:7983   */\n      tag_134\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7958:7983   */\n      swap2\n      pop\n        /* \"#utility.yul\":7997:8017   */\n      tag_255\n        /* \"#utility.yul\":8015:8016   */\n      dup4\n        /* \"#utility.yul\":7997:8017   */\n      tag_134\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7992:8017   */\n      swap3\n      pop\n        /* \"#utility.yul\":8036:8037   */\n      dup3\n        /* \"#utility.yul\":8026:8061   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":8041:8059   */\n      tag_257\n      tag_151\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8026:8061   */\n    tag_256:\n        /* \"#utility.yul\":8083:8084   */\n      dup3\n        /* \"#utility.yul\":8080:8081   */\n      dup3\n        /* \"#utility.yul\":8076:8085   */\n      div\n        /* \"#utility.yul\":8071:8085   */\n      swap1\n      pop\n        /* \"#utility.yul\":7906:8091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8097:8507   */\n    tag_46:\n        /* \"#utility.yul\":8137:8144   */\n      0x00\n        /* \"#utility.yul\":8160:8180   */\n      tag_259\n        /* \"#utility.yul\":8178:8179   */\n      dup3\n        /* \"#utility.yul\":8160:8180   */\n      tag_134\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8155:8180   */\n      swap2\n      pop\n        /* \"#utility.yul\":8194:8214   */\n      tag_260\n        /* \"#utility.yul\":8212:8213   */\n      dup4\n        /* \"#utility.yul\":8194:8214   */\n      tag_134\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8189:8214   */\n      swap3\n      pop\n        /* \"#utility.yul\":8249:8250   */\n      dup3\n        /* \"#utility.yul\":8246:8247   */\n      dup3\n        /* \"#utility.yul\":8242:8251   */\n      mul\n        /* \"#utility.yul\":8271:8301   */\n      tag_261\n        /* \"#utility.yul\":8289:8300   */\n      dup2\n        /* \"#utility.yul\":8271:8301   */\n      tag_134\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8260:8301   */\n      swap2\n      pop\n        /* \"#utility.yul\":8450:8451   */\n      dup3\n        /* \"#utility.yul\":8441:8448   */\n      dup3\n        /* \"#utility.yul\":8437:8452   */\n      div\n        /* \"#utility.yul\":8434:8435   */\n      dup5\n        /* \"#utility.yul\":8431:8453   */\n      eq\n        /* \"#utility.yul\":8411:8412   */\n      dup4\n        /* \"#utility.yul\":8404:8413   */\n      iszero\n        /* \"#utility.yul\":8384:8467   */\n      or\n        /* \"#utility.yul\":8361:8500   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":8480:8498   */\n      tag_263\n      tag_150\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8361:8500   */\n    tag_262:\n        /* \"#utility.yul\":8145:8507   */\n      pop\n        /* \"#utility.yul\":8097:8507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8513:8631   */\n    tag_152:\n        /* \"#utility.yul\":8600:8624   */\n      tag_265\n        /* \"#utility.yul\":8618:8623   */\n      dup2\n        /* \"#utility.yul\":8600:8624   */\n      tag_131\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8595:8598   */\n      dup3\n        /* \"#utility.yul\":8588:8625   */\n      mstore\n        /* \"#utility.yul\":8513:8631   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8637:8859   */\n    tag_51:\n        /* \"#utility.yul\":8730:8734   */\n      0x00\n        /* \"#utility.yul\":8768:8770   */\n      0x20\n        /* \"#utility.yul\":8757:8766   */\n      dup3\n        /* \"#utility.yul\":8753:8771   */\n      add\n        /* \"#utility.yul\":8745:8771   */\n      swap1\n      pop\n        /* \"#utility.yul\":8781:8852   */\n      tag_267\n        /* \"#utility.yul\":8849:8850   */\n      0x00\n        /* \"#utility.yul\":8838:8847   */\n      dup4\n        /* \"#utility.yul\":8834:8851   */\n      add\n        /* \"#utility.yul\":8825:8831   */\n      dup5\n        /* \"#utility.yul\":8781:8852   */\n      tag_152\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8637:8859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8865:9008   */\n    tag_153:\n        /* \"#utility.yul\":8922:8927   */\n      0x00\n        /* \"#utility.yul\":8953:8959   */\n      dup2\n        /* \"#utility.yul\":8947:8960   */\n      mload\n        /* \"#utility.yul\":8938:8960   */\n      swap1\n      pop\n        /* \"#utility.yul\":8969:9002   */\n      tag_269\n        /* \"#utility.yul\":8996:9001   */\n      dup2\n        /* \"#utility.yul\":8969:9002   */\n      tag_136\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8865:9008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9014:9365   */\n    tag_55:\n        /* \"#utility.yul\":9084:9090   */\n      0x00\n        /* \"#utility.yul\":9133:9135   */\n      0x20\n        /* \"#utility.yul\":9121:9130   */\n      dup3\n        /* \"#utility.yul\":9112:9119   */\n      dup5\n        /* \"#utility.yul\":9108:9131   */\n      sub\n        /* \"#utility.yul\":9104:9136   */\n      slt\n        /* \"#utility.yul\":9101:9220   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":9139:9218   */\n      tag_272\n      tag_125\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9101:9220   */\n    tag_271:\n        /* \"#utility.yul\":9259:9260   */\n      0x00\n        /* \"#utility.yul\":9284:9348   */\n      tag_273\n        /* \"#utility.yul\":9340:9347   */\n      dup5\n        /* \"#utility.yul\":9331:9337   */\n      dup3\n        /* \"#utility.yul\":9320:9329   */\n      dup6\n        /* \"#utility.yul\":9316:9338   */\n      add\n        /* \"#utility.yul\":9284:9348   */\n      tag_153\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9274:9348   */\n      swap2\n      pop\n        /* \"#utility.yul\":9230:9358   */\n      pop\n        /* \"#utility.yul\":9014:9365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9552   */\n    tag_154:\n        /* \"#utility.yul\":9511:9544   */\n      0x4e6f7420456e6f756768204d6f6e657920746f20676976652072657761726400\n        /* \"#utility.yul\":9507:9508   */\n      0x00\n        /* \"#utility.yul\":9499:9505   */\n      dup3\n        /* \"#utility.yul\":9495:9509   */\n      add\n        /* \"#utility.yul\":9488:9545   */\n      mstore\n        /* \"#utility.yul\":9371:9552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9558:9924   */\n    tag_155:\n        /* \"#utility.yul\":9700:9703   */\n      0x00\n        /* \"#utility.yul\":9721:9788   */\n      tag_276\n        /* \"#utility.yul\":9785:9787   */\n      0x1f\n        /* \"#utility.yul\":9780:9783   */\n      dup4\n        /* \"#utility.yul\":9721:9788   */\n      tag_143\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9714:9788   */\n      swap2\n      pop\n        /* \"#utility.yul\":9797:9890   */\n      tag_277\n        /* \"#utility.yul\":9886:9889   */\n      dup3\n        /* \"#utility.yul\":9797:9890   */\n      tag_154\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9915:9917   */\n      0x20\n        /* \"#utility.yul\":9910:9913   */\n      dup3\n        /* \"#utility.yul\":9906:9918   */\n      add\n        /* \"#utility.yul\":9899:9918   */\n      swap1\n      pop\n        /* \"#utility.yul\":9558:9924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9930:10349   */\n    tag_58:\n        /* \"#utility.yul\":10096:10100   */\n      0x00\n        /* \"#utility.yul\":10134:10136   */\n      0x20\n        /* \"#utility.yul\":10123:10132   */\n      dup3\n        /* \"#utility.yul\":10119:10137   */\n      add\n        /* \"#utility.yul\":10111:10137   */\n      swap1\n      pop\n        /* \"#utility.yul\":10183:10192   */\n      dup2\n        /* \"#utility.yul\":10177:10181   */\n      dup2\n        /* \"#utility.yul\":10173:10193   */\n      sub\n        /* \"#utility.yul\":10169:10170   */\n      0x00\n        /* \"#utility.yul\":10158:10167   */\n      dup4\n        /* \"#utility.yul\":10154:10171   */\n      add\n        /* \"#utility.yul\":10147:10194   */\n      mstore\n        /* \"#utility.yul\":10211:10342   */\n      tag_279\n        /* \"#utility.yul\":10337:10341   */\n      dup2\n        /* \"#utility.yul\":10211:10342   */\n      tag_155\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10203:10342   */\n      swap1\n      pop\n        /* \"#utility.yul\":9930:10349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10355:10577   */\n    tag_64:\n        /* \"#utility.yul\":10448:10452   */\n      0x00\n        /* \"#utility.yul\":10486:10488   */\n      0x20\n        /* \"#utility.yul\":10475:10484   */\n      dup3\n        /* \"#utility.yul\":10471:10489   */\n      add\n        /* \"#utility.yul\":10463:10489   */\n      swap1\n      pop\n        /* \"#utility.yul\":10499:10570   */\n      tag_281\n        /* \"#utility.yul\":10567:10568   */\n      0x00\n        /* \"#utility.yul\":10556:10565   */\n      dup4\n        /* \"#utility.yul\":10552:10569   */\n      add\n        /* \"#utility.yul\":10543:10549   */\n      dup5\n        /* \"#utility.yul\":10499:10570   */\n      tag_135\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10355:10577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10583:10874   */\n    tag_156:\n        /* \"#utility.yul\":10723:10757   */\n      0x596f752063616e2774207374616b6520616761696e20776974686f7574207769\n        /* \"#utility.yul\":10719:10720   */\n      0x00\n        /* \"#utility.yul\":10711:10717   */\n      dup3\n        /* \"#utility.yul\":10707:10721   */\n      add\n        /* \"#utility.yul\":10700:10758   */\n      mstore\n        /* \"#utility.yul\":10792:10826   */\n      0x746864726177696e6720796f75722070726576696f7573206d6f6e6579206669\n        /* \"#utility.yul\":10787:10789   */\n      0x20\n        /* \"#utility.yul\":10779:10785   */\n      dup3\n        /* \"#utility.yul\":10775:10790   */\n      add\n        /* \"#utility.yul\":10768:10827   */\n      mstore\n        /* \"#utility.yul\":10861:10866   */\n      0x7273740000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10856:10858   */\n      0x40\n        /* \"#utility.yul\":10848:10854   */\n      dup3\n        /* \"#utility.yul\":10844:10859   */\n      add\n        /* \"#utility.yul\":10837:10867   */\n      mstore\n        /* \"#utility.yul\":10583:10874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10880:11246   */\n    tag_157:\n        /* \"#utility.yul\":11022:11025   */\n      0x00\n        /* \"#utility.yul\":11043:11110   */\n      tag_284\n        /* \"#utility.yul\":11107:11109   */\n      0x43\n        /* \"#utility.yul\":11102:11105   */\n      dup4\n        /* \"#utility.yul\":11043:11110   */\n      tag_143\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11036:11110   */\n      swap2\n      pop\n        /* \"#utility.yul\":11119:11212   */\n      tag_285\n        /* \"#utility.yul\":11208:11211   */\n      dup3\n        /* \"#utility.yul\":11119:11212   */\n      tag_156\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11237:11239   */\n      0x60\n        /* \"#utility.yul\":11232:11235   */\n      dup3\n        /* \"#utility.yul\":11228:11240   */\n      add\n        /* \"#utility.yul\":11221:11240   */\n      swap1\n      pop\n        /* \"#utility.yul\":10880:11246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11252:11671   */\n    tag_69:\n        /* \"#utility.yul\":11418:11422   */\n      0x00\n        /* \"#utility.yul\":11456:11458   */\n      0x20\n        /* \"#utility.yul\":11445:11454   */\n      dup3\n        /* \"#utility.yul\":11441:11459   */\n      add\n        /* \"#utility.yul\":11433:11459   */\n      swap1\n      pop\n        /* \"#utility.yul\":11505:11514   */\n      dup2\n        /* \"#utility.yul\":11499:11503   */\n      dup2\n        /* \"#utility.yul\":11495:11515   */\n      sub\n        /* \"#utility.yul\":11491:11492   */\n      0x00\n        /* \"#utility.yul\":11480:11489   */\n      dup4\n        /* \"#utility.yul\":11476:11493   */\n      add\n        /* \"#utility.yul\":11469:11516   */\n      mstore\n        /* \"#utility.yul\":11533:11664   */\n      tag_287\n        /* \"#utility.yul\":11659:11663   */\n      dup2\n        /* \"#utility.yul\":11533:11664   */\n      tag_157\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11525:11664   */\n      swap1\n      pop\n        /* \"#utility.yul\":11252:11671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11677:11847   */\n    tag_158:\n        /* \"#utility.yul\":11817:11839   */\n      0x496e73756666696369656e742042616c616e6365000000000000000000000000\n        /* \"#utility.yul\":11813:11814   */\n      0x00\n        /* \"#utility.yul\":11805:11811   */\n      dup3\n        /* \"#utility.yul\":11801:11815   */\n      add\n        /* \"#utility.yul\":11794:11840   */\n      mstore\n        /* \"#utility.yul\":11677:11847   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11853:12219   */\n    tag_159:\n        /* \"#utility.yul\":11995:11998   */\n      0x00\n        /* \"#utility.yul\":12016:12083   */\n      tag_290\n        /* \"#utility.yul\":12080:12082   */\n      0x14\n        /* \"#utility.yul\":12075:12078   */\n      dup4\n        /* \"#utility.yul\":12016:12083   */\n      tag_143\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12009:12083   */\n      swap2\n      pop\n        /* \"#utility.yul\":12092:12185   */\n      tag_291\n        /* \"#utility.yul\":12181:12184   */\n      dup3\n        /* \"#utility.yul\":12092:12185   */\n      tag_158\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12205:12208   */\n      dup3\n        /* \"#utility.yul\":12201:12213   */\n      add\n        /* \"#utility.yul\":12194:12213   */\n      swap1\n      pop\n        /* \"#utility.yul\":11853:12219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12225:12644   */\n    tag_77:\n        /* \"#utility.yul\":12391:12395   */\n      0x00\n        /* \"#utility.yul\":12429:12431   */\n      0x20\n        /* \"#utility.yul\":12418:12427   */\n      dup3\n        /* \"#utility.yul\":12414:12432   */\n      add\n        /* \"#utility.yul\":12406:12432   */\n      swap1\n      pop\n        /* \"#utility.yul\":12478:12487   */\n      dup2\n        /* \"#utility.yul\":12472:12476   */\n      dup2\n        /* \"#utility.yul\":12468:12488   */\n      sub\n        /* \"#utility.yul\":12464:12465   */\n      0x00\n        /* \"#utility.yul\":12453:12462   */\n      dup4\n        /* \"#utility.yul\":12449:12466   */\n      add\n        /* \"#utility.yul\":12442:12489   */\n      mstore\n        /* \"#utility.yul\":12506:12637   */\n      tag_293\n        /* \"#utility.yul\":12632:12636   */\n      dup2\n        /* \"#utility.yul\":12506:12637   */\n      tag_159\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":12498:12637   */\n      swap1\n      pop\n        /* \"#utility.yul\":12225:12644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12650:12982   */\n    tag_86:\n        /* \"#utility.yul\":12771:12775   */\n      0x00\n        /* \"#utility.yul\":12809:12811   */\n      0x40\n        /* \"#utility.yul\":12798:12807   */\n      dup3\n        /* \"#utility.yul\":12794:12812   */\n      add\n        /* \"#utility.yul\":12786:12812   */\n      swap1\n      pop\n        /* \"#utility.yul\":12822:12893   */\n      tag_295\n        /* \"#utility.yul\":12890:12891   */\n      0x00\n        /* \"#utility.yul\":12879:12888   */\n      dup4\n        /* \"#utility.yul\":12875:12892   */\n      add\n        /* \"#utility.yul\":12866:12872   */\n      dup6\n        /* \"#utility.yul\":12822:12893   */\n      tag_152\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":12903:12975   */\n      tag_296\n        /* \"#utility.yul\":12971:12973   */\n      0x20\n        /* \"#utility.yul\":12960:12969   */\n      dup4\n        /* \"#utility.yul\":12956:12974   */\n      add\n        /* \"#utility.yul\":12947:12953   */\n      dup5\n        /* \"#utility.yul\":12903:12975   */\n      tag_135\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":12650:12982   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13430   */\n    tag_91:\n        /* \"#utility.yul\":13137:13141   */\n      0x00\n        /* \"#utility.yul\":13175:13177   */\n      0x60\n        /* \"#utility.yul\":13164:13173   */\n      dup3\n        /* \"#utility.yul\":13160:13178   */\n      add\n        /* \"#utility.yul\":13152:13178   */\n      swap1\n      pop\n        /* \"#utility.yul\":13188:13259   */\n      tag_298\n        /* \"#utility.yul\":13256:13257   */\n      0x00\n        /* \"#utility.yul\":13245:13254   */\n      dup4\n        /* \"#utility.yul\":13241:13258   */\n      add\n        /* \"#utility.yul\":13232:13238   */\n      dup7\n        /* \"#utility.yul\":13188:13259   */\n      tag_152\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":13269:13341   */\n      tag_299\n        /* \"#utility.yul\":13337:13339   */\n      0x20\n        /* \"#utility.yul\":13326:13335   */\n      dup4\n        /* \"#utility.yul\":13322:13340   */\n      add\n        /* \"#utility.yul\":13313:13319   */\n      dup6\n        /* \"#utility.yul\":13269:13341   */\n      tag_152\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":13351:13423   */\n      tag_300\n        /* \"#utility.yul\":13419:13421   */\n      0x40\n        /* \"#utility.yul\":13408:13417   */\n      dup4\n        /* \"#utility.yul\":13404:13422   */\n      add\n        /* \"#utility.yul\":13395:13401   */\n      dup5\n        /* \"#utility.yul\":13351:13423   */\n      tag_135\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12988:13430   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13436:13526   */\n    tag_160:\n        /* \"#utility.yul\":13470:13477   */\n      0x00\n        /* \"#utility.yul\":13513:13518   */\n      dup2\n        /* \"#utility.yul\":13506:13519   */\n      iszero\n        /* \"#utility.yul\":13499:13520   */\n      iszero\n        /* \"#utility.yul\":13488:13520   */\n      swap1\n      pop\n        /* \"#utility.yul\":13436:13526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13532:13648   */\n    tag_161:\n        /* \"#utility.yul\":13602:13623   */\n      tag_303\n        /* \"#utility.yul\":13617:13622   */\n      dup2\n        /* \"#utility.yul\":13602:13623   */\n      tag_160\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13595:13600   */\n      dup2\n        /* \"#utility.yul\":13592:13624   */\n      eq\n        /* \"#utility.yul\":13582:13642   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":13638:13639   */\n      0x00\n        /* \"#utility.yul\":13635:13636   */\n      dup1\n        /* \"#utility.yul\":13628:13640   */\n      revert\n        /* \"#utility.yul\":13582:13642   */\n    tag_304:\n        /* \"#utility.yul\":13532:13648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13654:13791   */\n    tag_162:\n        /* \"#utility.yul\":13708:13713   */\n      0x00\n        /* \"#utility.yul\":13739:13745   */\n      dup2\n        /* \"#utility.yul\":13733:13746   */\n      mload\n        /* \"#utility.yul\":13724:13746   */\n      swap1\n      pop\n        /* \"#utility.yul\":13755:13785   */\n      tag_306\n        /* \"#utility.yul\":13779:13784   */\n      dup2\n        /* \"#utility.yul\":13755:13785   */\n      tag_161\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13654:13791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13797:14142   */\n    tag_97:\n        /* \"#utility.yul\":13864:13870   */\n      0x00\n        /* \"#utility.yul\":13913:13915   */\n      0x20\n        /* \"#utility.yul\":13901:13910   */\n      dup3\n        /* \"#utility.yul\":13892:13899   */\n      dup5\n        /* \"#utility.yul\":13888:13911   */\n      sub\n        /* \"#utility.yul\":13884:13916   */\n      slt\n        /* \"#utility.yul\":13881:14000   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":13919:13998   */\n      tag_309\n      tag_125\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13881:14000   */\n    tag_308:\n        /* \"#utility.yul\":14039:14040   */\n      0x00\n        /* \"#utility.yul\":14064:14125   */\n      tag_310\n        /* \"#utility.yul\":14117:14124   */\n      dup5\n        /* \"#utility.yul\":14108:14114   */\n      dup3\n        /* \"#utility.yul\":14097:14106   */\n      dup6\n        /* \"#utility.yul\":14093:14115   */\n      add\n        /* \"#utility.yul\":14064:14125   */\n      tag_162\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":14054:14125   */\n      swap2\n      pop\n        /* \"#utility.yul\":14010:14135   */\n      pop\n        /* \"#utility.yul\":13797:14142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14148:14246   */\n    tag_163:\n        /* \"#utility.yul\":14199:14205   */\n      0x00\n        /* \"#utility.yul\":14233:14238   */\n      dup2\n        /* \"#utility.yul\":14227:14239   */\n      mload\n        /* \"#utility.yul\":14217:14239   */\n      swap1\n      pop\n        /* \"#utility.yul\":14148:14246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14252:14399   */\n    tag_164:\n        /* \"#utility.yul\":14353:14364   */\n      0x00\n        /* \"#utility.yul\":14390:14393   */\n      dup2\n        /* \"#utility.yul\":14375:14393   */\n      swap1\n      pop\n        /* \"#utility.yul\":14252:14399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14405:14651   */\n    tag_165:\n        /* \"#utility.yul\":14486:14487   */\n      0x00\n        /* \"#utility.yul\":14496:14609   */\n    tag_314:\n        /* \"#utility.yul\":14510:14516   */\n      dup4\n        /* \"#utility.yul\":14507:14508   */\n      dup2\n        /* \"#utility.yul\":14504:14517   */\n      lt\n        /* \"#utility.yul\":14496:14609   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":14595:14596   */\n      dup1\n        /* \"#utility.yul\":14590:14593   */\n      dup3\n        /* \"#utility.yul\":14586:14597   */\n      add\n        /* \"#utility.yul\":14580:14598   */\n      mload\n        /* \"#utility.yul\":14576:14577   */\n      dup2\n        /* \"#utility.yul\":14571:14574   */\n      dup5\n        /* \"#utility.yul\":14567:14578   */\n      add\n        /* \"#utility.yul\":14560:14599   */\n      mstore\n        /* \"#utility.yul\":14532:14534   */\n      0x20\n        /* \"#utility.yul\":14529:14530   */\n      dup2\n        /* \"#utility.yul\":14525:14535   */\n      add\n        /* \"#utility.yul\":14520:14535   */\n      swap1\n      pop\n        /* \"#utility.yul\":14496:14609   */\n      jump(tag_314)\n    tag_316:\n        /* \"#utility.yul\":14643:14644   */\n      0x00\n        /* \"#utility.yul\":14634:14640   */\n      dup5\n        /* \"#utility.yul\":14629:14632   */\n      dup5\n        /* \"#utility.yul\":14625:14641   */\n      add\n        /* \"#utility.yul\":14618:14645   */\n      mstore\n        /* \"#utility.yul\":14467:14651   */\n      pop\n        /* \"#utility.yul\":14405:14651   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14657:15043   */\n    tag_166:\n        /* \"#utility.yul\":14761:14764   */\n      0x00\n        /* \"#utility.yul\":14789:14827   */\n      tag_318\n        /* \"#utility.yul\":14821:14826   */\n      dup3\n        /* \"#utility.yul\":14789:14827   */\n      tag_163\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14843:14931   */\n      tag_319\n        /* \"#utility.yul\":14924:14930   */\n      dup2\n        /* \"#utility.yul\":14919:14922   */\n      dup6\n        /* \"#utility.yul\":14843:14931   */\n      tag_164\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14836:14931   */\n      swap4\n      pop\n        /* \"#utility.yul\":14940:15005   */\n      tag_320\n        /* \"#utility.yul\":14998:15004   */\n      dup2\n        /* \"#utility.yul\":14993:14996   */\n      dup6\n        /* \"#utility.yul\":14986:14990   */\n      0x20\n        /* \"#utility.yul\":14979:14984   */\n      dup7\n        /* \"#utility.yul\":14975:14991   */\n      add\n        /* \"#utility.yul\":14940:15005   */\n      tag_165\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":15030:15036   */\n      dup1\n        /* \"#utility.yul\":15025:15028   */\n      dup5\n        /* \"#utility.yul\":15021:15037   */\n      add\n        /* \"#utility.yul\":15014:15037   */\n      swap2\n      pop\n        /* \"#utility.yul\":14765:15043   */\n      pop\n        /* \"#utility.yul\":14657:15043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15049:15320   */\n    tag_107:\n        /* \"#utility.yul\":15179:15182   */\n      0x00\n        /* \"#utility.yul\":15201:15294   */\n      tag_322\n        /* \"#utility.yul\":15290:15293   */\n      dup3\n        /* \"#utility.yul\":15281:15287   */\n      dup5\n        /* \"#utility.yul\":15201:15294   */\n      tag_166\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":15194:15294   */\n      swap2\n      pop\n        /* \"#utility.yul\":15311:15314   */\n      dup2\n        /* \"#utility.yul\":15304:15314   */\n      swap1\n      pop\n        /* \"#utility.yul\":15049:15320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cb55e4bc70dcc5ff5c8d9e8f45c826f3bb1fef74cc7990e583cf53c0aac3bf0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_742": {
									"entryPoint": null,
									"id": 742,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1392:5",
										"nodeType": "YulBlock",
										"src": "0:1392:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "626:51:5",
													"nodeType": "YulBlock",
													"src": "626:51:5",
													"statements": [
														{
															"nativeSrc": "636:35:5",
															"nodeType": "YulAssignment",
															"src": "636:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:5"
																},
																"nativeSrc": "647:24:5",
																"nodeType": "YulFunctionCall",
																"src": "647:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nativeSrc": "568:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:5",
														"nodeType": "YulTypedName",
														"src": "608:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:5",
														"nodeType": "YulTypedName",
														"src": "618:7:5",
														"type": ""
													}
												],
												"src": "568:109:5"
											},
											{
												"body": {
													"nativeSrc": "739:92:5",
													"nodeType": "YulBlock",
													"src": "739:92:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:5",
																"nodeType": "YulBlock",
																"src": "809:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:5",
																					"nodeType": "YulLiteral",
																					"src": "818:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:5"
																			},
																			"nativeSrc": "811:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:5"
																		},
																		"nativeSrc": "811:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nativeSrc": "769:30:5",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:5"
																				},
																				"nativeSrc": "769:37:5",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:5"
																		},
																		"nativeSrc": "759:48:5",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:56:5",
																"nodeType": "YulFunctionCall",
																"src": "752:56:5"
															},
															"nativeSrc": "749:76:5",
															"nodeType": "YulIf",
															"src": "749:76:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nativeSrc": "683:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:5",
														"nodeType": "YulTypedName",
														"src": "732:5:5",
														"type": ""
													}
												],
												"src": "683:148:5"
											},
											{
												"body": {
													"nativeSrc": "913:93:5",
													"nodeType": "YulBlock",
													"src": "913:93:5",
													"statements": [
														{
															"nativeSrc": "923:22:5",
															"nodeType": "YulAssignment",
															"src": "923:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:5"
																},
																"nativeSrc": "932:13:5",
																"nodeType": "YulFunctionCall",
																"src": "932:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nativeSrc": "954:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:5"
																},
																"nativeSrc": "954:46:5",
																"nodeType": "YulFunctionCall",
																"src": "954:46:5"
															},
															"nativeSrc": "954:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "837:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:5",
														"nodeType": "YulTypedName",
														"src": "891:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:5",
														"nodeType": "YulTypedName",
														"src": "899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:5",
														"nodeType": "YulTypedName",
														"src": "907:5:5",
														"type": ""
													}
												],
												"src": "837:169:5"
											},
											{
												"body": {
													"nativeSrc": "1102:287:5",
													"nodeType": "YulBlock",
													"src": "1102:287:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1148:83:5",
																"nodeType": "YulBlock",
																"src": "1148:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1150:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1150:77:5"
																			},
																			"nativeSrc": "1150:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:79:5"
																		},
																		"nativeSrc": "1150:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1123:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1119:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:5"
																		},
																		"nativeSrc": "1119:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1115:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:5"
																},
																"nativeSrc": "1115:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:5"
															},
															"nativeSrc": "1112:119:5",
															"nodeType": "YulIf",
															"src": "1112:119:5"
														},
														{
															"nativeSrc": "1241:141:5",
															"nodeType": "YulBlock",
															"src": "1241:141:5",
															"statements": [
																{
																	"nativeSrc": "1256:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1256:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1270:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1260:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1260:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1285:87:5",
																	"nodeType": "YulAssignment",
																	"src": "1285:87:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1344:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1344:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1355:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1340:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:5"
																				},
																				"nativeSrc": "1340:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1340:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1364:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																			"nativeSrc": "1295:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "1295:44:5"
																		},
																		"nativeSrc": "1295:77:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:77:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1285:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "1012:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:5",
														"nodeType": "YulTypedName",
														"src": "1072:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1083:7:5",
														"nodeType": "YulTypedName",
														"src": "1083:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1095:6:5",
														"nodeType": "YulTypedName",
														"src": "1095:6:5",
														"type": ""
													}
												],
												"src": "1012:377:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405260016002555f6004555f6005553480156200001d575f80fd5b506040516200151138038062001511833981810160405281019062000043919062000136565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000166565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000ed82620000c2565b9050919050565b5f6200010082620000e1565b9050919050565b6200011281620000f4565b81146200011d575f80fd5b50565b5f81519050620001308162000107565b92915050565b5f602082840312156200014e576200014d620000be565b5b5f6200015d8482850162000120565b91505092915050565b6080516113766200019b5f395f81816102e7015281816103d301528181610601015281816106e1015261081e01526113765ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063337b8b96146100595780633ccfd60b146100755780639168ae721461007f578063a694fc3a146100b1578063fc0c546a146100cd575b5f80fd5b610073600480360381019061006e9190610bbf565b6100eb565b005b61007d610187565b005b61009960048036038101906100949190610c44565b61054e565b6040516100a893929190610c87565b60405180910390f35b6100cb60048036038101906100c69190610ce6565b610573565b005b6100d561081c565b6040516100e29190610d6c565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017a576040517ff7251ccf00000000000000000000000000000000000000000000000000000000815260040161017190610ddf565b60405180910390fd5b8060ff1660028190555050565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f015111610233576040517f7979dc8700000000000000000000000000000000000000000000000000000000815260040161022a90610e47565b60405180910390fd5b806020015142101561027a576040517f30f1c21600000000000000000000000000000000000000000000000000000000815260040161027190610eaf565b60405180910390fd5b5f610e1082602001514261028e9190610efa565b6102989190610f2d565b90505f610e10826102a99190610f8d565b90505f606482855f01516102bd9190610fbd565b6002546102ca9190610fbd565b6102d49190610f8d565b905080845f01516102e59190610f2d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033e919061100d565b602060405180830381865afa158015610359573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037d919061103a565b10156103be576040517f7979dc870000000000000000000000000000000000000000000000000000000081526004016103b5906110af565b60405180910390fd5b6104173382865f01516103d19190610f2d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108409092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364855f01518361045e9190610f2d565b60405161046b91906110cd565b60405180910390a25f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc98260405161054091906110cd565b60405180910390a250505050565b5f602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411156105f4576040517f0dd028d80000000000000000000000000000000000000000000000000000000081526004016105eb9061117c565b60405180910390fd5b5f811115806106995750807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610658919061100d565b602060405180830381865afa158015610673573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610697919061103a565b105b156106d9576040517f7979dc870000000000000000000000000000000000000000000000000000000081526004016106d0906111e4565b60405180910390fd5b6107263330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108bf909392919063ffffffff16565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107739190610f2d565b92505081905550610e10426107889190610f2d565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161081191906110cd565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108ba838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610873929190611202565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610941565b505050565b61093b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016108f493929190611229565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610941565b50505050565b5f61096b828473ffffffffffffffffffffffffffffffffffffffff166109d690919063ffffffff16565b90505f81511415801561098f57508080602001905181019061098d9190611293565b155b156109d157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016109c8919061100d565b60405180910390fd5b505050565b60606109e383835f6109eb565b905092915050565b606081471015610a3257306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610a29919061100d565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610a5a919061132a565b5f6040518083038185875af1925050503d805f8114610a94576040519150601f19603f3d011682016040523d82523d5f602084013e610a99565b606091505b5091509150610aa9868383610ab4565b925050509392505050565b606082610ac957610ac482610b41565b610b39565b5f8251148015610aef57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b3157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610b28919061100d565b60405180910390fd5b819050610b3a565b5b9392505050565b5f81511115610b535780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f60ff82169050919050565b610b9e81610b89565b8114610ba8575f80fd5b50565b5f81359050610bb981610b95565b92915050565b5f60208284031215610bd457610bd3610b85565b5b5f610be184828501610bab565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1382610bea565b9050919050565b610c2381610c09565b8114610c2d575f80fd5b50565b5f81359050610c3e81610c1a565b92915050565b5f60208284031215610c5957610c58610b85565b5b5f610c6684828501610c30565b91505092915050565b5f819050919050565b610c8181610c6f565b82525050565b5f606082019050610c9a5f830186610c78565b610ca76020830185610c78565b610cb46040830184610c78565b949350505050565b610cc581610c6f565b8114610ccf575f80fd5b50565b5f81359050610ce081610cbc565b92915050565b5f60208284031215610cfb57610cfa610b85565b5b5f610d0884828501610cd2565b91505092915050565b5f819050919050565b5f610d34610d2f610d2a84610bea565b610d11565b610bea565b9050919050565b5f610d4582610d1a565b9050919050565b5f610d5682610d3b565b9050919050565b610d6681610d4c565b82525050565b5f602082019050610d7f5f830184610d5d565b92915050565b5f82825260208201905092915050565b7f796f75277265206e6f7420746865206f776e65720000000000000000000000005f82015250565b5f610dc9601483610d85565b9150610dd482610d95565b602082019050919050565b5f6020820190508181035f830152610df681610dbd565b9050919050565b7f4e6f20546f6b656e73205374616b6564000000000000000000000000000000005f82015250565b5f610e31601083610d85565b9150610e3c82610dfd565b602082019050919050565b5f6020820190508181035f830152610e5e81610e25565b9050919050565b7f596f752063616e2774207769746864726177206265666f7265203120686f75725f82015250565b5f610e99602083610d85565b9150610ea482610e65565b602082019050919050565b5f6020820190508181035f830152610ec681610e8d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f0482610c6f565b9150610f0f83610c6f565b9250828203905081811115610f2757610f26610ecd565b5b92915050565b5f610f3782610c6f565b9150610f4283610c6f565b9250828201905080821115610f5a57610f59610ecd565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f9782610c6f565b9150610fa283610c6f565b925082610fb257610fb1610f60565b5b828204905092915050565b5f610fc782610c6f565b9150610fd283610c6f565b9250828202610fe081610c6f565b91508282048414831517610ff757610ff6610ecd565b5b5092915050565b61100781610c09565b82525050565b5f6020820190506110205f830184610ffe565b92915050565b5f8151905061103481610cbc565b92915050565b5f6020828403121561104f5761104e610b85565b5b5f61105c84828501611026565b91505092915050565b7f4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264005f82015250565b5f611099601f83610d85565b91506110a482611065565b602082019050919050565b5f6020820190508181035f8301526110c68161108d565b9050919050565b5f6020820190506110e05f830184610c78565b92915050565b7f596f752063616e2774207374616b6520616761696e20776974686f75742077695f8201527f746864726177696e6720796f75722070726576696f7573206d6f6e657920666960208201527f7273740000000000000000000000000000000000000000000000000000000000604082015250565b5f611166604383610d85565b9150611171826110e6565b606082019050919050565b5f6020820190508181035f8301526111938161115a565b9050919050565b7f496e73756666696369656e742042616c616e63650000000000000000000000005f82015250565b5f6111ce601483610d85565b91506111d98261119a565b602082019050919050565b5f6020820190508181035f8301526111fb816111c2565b9050919050565b5f6040820190506112155f830185610ffe565b6112226020830184610c78565b9392505050565b5f60608201905061123c5f830186610ffe565b6112496020830185610ffe565b6112566040830184610c78565b949350505050565b5f8115159050919050565b6112728161125e565b811461127c575f80fd5b50565b5f8151905061128d81611269565b92915050565b5f602082840312156112a8576112a7610b85565b5b5f6112b58482850161127f565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b838110156112ef5780820151818401526020810190506112d4565b5f8484015250505050565b5f611304826112be565b61130e81856112c8565b935061131e8185602086016112d2565b80840191505092915050565b5f61133582846112fa565b91508190509291505056fea2646970667358221220cb55e4bc70dcc5ff5c8d9e8f45c826f3bb1fef74cc7990e583cf53c0aac3bf0264736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1511 CODESIZE SUB DUP1 PUSH3 0x1511 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x43 SWAP2 SWAP1 PUSH3 0x136 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x166 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xED DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x100 DUP3 PUSH3 0xE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x112 DUP2 PUSH3 0xF4 JUMP JUMPDEST DUP2 EQ PUSH3 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x130 DUP2 PUSH3 0x107 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14E JUMPI PUSH3 0x14D PUSH3 0xBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x15D DUP5 DUP3 DUP6 ADD PUSH3 0x120 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1376 PUSH3 0x19B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2E7 ADD MSTORE DUP2 DUP2 PUSH2 0x3D3 ADD MSTORE DUP2 DUP2 PUSH2 0x601 ADD MSTORE DUP2 DUP2 PUSH2 0x6E1 ADD MSTORE PUSH2 0x81E ADD MSTORE PUSH2 0x1376 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x337B8B96 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF7251CCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD GT PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH32 0x30F1C21600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP1 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE10 DUP3 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x28E SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE10 DUP3 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 DUP6 PUSH0 ADD MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x359 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x417 CALLER DUP3 DUP7 PUSH0 ADD MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x840 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP6 PUSH0 ADD MLOAD DUP4 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD028D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EB SWAP1 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO DUP1 PUSH2 0x699 JUMPI POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D0 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x726 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8BF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE10 TIMESTAMP PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8BA DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x873 SWAP3 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x93B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x941 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9D1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9E3 DUP4 DUP4 PUSH0 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xA32 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xAA9 DUP7 DUP4 DUP4 PUSH2 0xAB4 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xAC9 JUMPI PUSH2 0xAC4 DUP3 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xAEF JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB31 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xB3A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xB53 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB89 JUMP JUMPDEST DUP2 EQ PUSH2 0xBA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB9 DUP2 PUSH2 0xB95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE1 DUP5 DUP3 DUP6 ADD PUSH2 0xBAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC13 DUP3 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP2 EQ PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC3E DUP2 PUSH2 0xC1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC58 PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC66 DUP5 DUP3 DUP6 ADD PUSH2 0xC30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC81 DUP2 PUSH2 0xC6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC9A PUSH0 DUP4 ADD DUP7 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xCA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xCB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0xC6F JUMP JUMPDEST DUP2 EQ PUSH2 0xCCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE0 DUP2 PUSH2 0xCBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD08 DUP5 DUP3 DUP6 ADD PUSH2 0xCD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD34 PUSH2 0xD2F PUSH2 0xD2A DUP5 PUSH2 0xBEA JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD45 DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD56 DUP3 PUSH2 0xD3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xD4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH0 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F75277265206E6F7420746865206F776E6572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDC9 PUSH1 0x14 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD4 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF6 DUP2 PUSH2 0xDBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20546F6B656E73205374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE31 PUSH1 0x10 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3C DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5E DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E2774207769746864726177206265666F7265203120686F7572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE99 PUSH1 0x20 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA4 DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEC6 DUP2 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF04 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xF0F DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF27 JUMPI PUSH2 0xF26 PUSH2 0xECD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF37 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xF42 DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF5A JUMPI PUSH2 0xF59 PUSH2 0xECD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF97 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xFA2 DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xF60 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFC7 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xFD2 DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFE0 DUP2 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xECD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1020 PUSH0 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0xCBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105C DUP5 DUP3 DUP6 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F756768204D6F6E657920746F20676976652072657761726400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1099 PUSH1 0x1F DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A4 DUP3 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C6 DUP2 PUSH2 0x108D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH0 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E2774207374616B6520616761696E20776974686F7574207769 PUSH0 DUP3 ADD MSTORE PUSH32 0x746864726177696E6720796F75722070726576696F7573206D6F6E6579206669 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7273740000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1166 PUSH1 0x43 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1171 DUP3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1193 DUP2 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CE PUSH1 0x14 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D9 DUP3 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1215 PUSH0 DUP4 ADD DUP6 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x1222 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x123C PUSH0 DUP4 ADD DUP7 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x1249 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x1256 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1272 DUP2 PUSH2 0x125E JUMP JUMPDEST DUP2 EQ PUSH2 0x127C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x128D DUP2 PUSH2 0x1269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12B5 DUP5 DUP3 DUP6 ADD PUSH2 0x127F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12EF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12D4 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1304 DUP3 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x130E DUP2 DUP6 PUSH2 0x12C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x131E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12D2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1335 DUP3 DUP5 PUSH2 0x12FA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SSTORE 0xE4 0xBC PUSH17 0xDCC5FF5C8D9E8F45C826F3BB1FEF74CC79 SWAP1 0xE5 DUP4 0xCF MSTORE8 0xC0 0xAA 0xC3 0xBF MUL PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "265:3794:4:-:0;;;976:1;952:25;;1103:1;1075:29;;1147:1;1111:37;;1302:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1354:6;1346:14;;;;;;;;;;1379:10;1371:5;;:18;;;;;;;;;;;;;;;;;;1302:95;265:3794;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;265:3794:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 2369,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 2881,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeRebasingIndex_955": {
									"entryPoint": 235,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 2539,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 2518,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_190": {
									"entryPoint": 2239,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 2112,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_814": {
									"entryPoint": 1395,
									"id": 814,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakers_713": {
									"entryPoint": 1358,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_667": {
									"entryPoint": 2076,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 2740,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_935": {
									"entryPoint": 391,
									"id": 935,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15323:5",
										"nodeType": "YulBlock",
										"src": "0:15323:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "377:43:5",
													"nodeType": "YulBlock",
													"src": "377:43:5",
													"statements": [
														{
															"nativeSrc": "387:27:5",
															"nodeType": "YulAssignment",
															"src": "387:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "402:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "402:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "409:4:5",
																		"nodeType": "YulLiteral",
																		"src": "409:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "398:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:5"
																},
																"nativeSrc": "398:16:5",
																"nodeType": "YulFunctionCall",
																"src": "398:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "387:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "334:86:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "359:5:5",
														"nodeType": "YulTypedName",
														"src": "359:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "369:7:5",
														"nodeType": "YulTypedName",
														"src": "369:7:5",
														"type": ""
													}
												],
												"src": "334:86:5"
											},
											{
												"body": {
													"nativeSrc": "467:77:5",
													"nodeType": "YulBlock",
													"src": "467:77:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "522:16:5",
																"nodeType": "YulBlock",
																"src": "522:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "531:1:5",
																					"nodeType": "YulLiteral",
																					"src": "531:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "534:1:5",
																					"nodeType": "YulLiteral",
																					"src": "534:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "524:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:5"
																			},
																			"nativeSrc": "524:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:5"
																		},
																		"nativeSrc": "524:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "490:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "513:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "513:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "497:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "497:15:5"
																				},
																				"nativeSrc": "497:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "497:22:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "487:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:5"
																		},
																		"nativeSrc": "487:33:5",
																		"nodeType": "YulFunctionCall",
																		"src": "487:33:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "480:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:5"
																},
																"nativeSrc": "480:41:5",
																"nodeType": "YulFunctionCall",
																"src": "480:41:5"
															},
															"nativeSrc": "477:61:5",
															"nodeType": "YulIf",
															"src": "477:61:5"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "426:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "460:5:5",
														"nodeType": "YulTypedName",
														"src": "460:5:5",
														"type": ""
													}
												],
												"src": "426:118:5"
											},
											{
												"body": {
													"nativeSrc": "600:85:5",
													"nodeType": "YulBlock",
													"src": "600:85:5",
													"statements": [
														{
															"nativeSrc": "610:29:5",
															"nodeType": "YulAssignment",
															"src": "610:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "632:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "632:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "619:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "619:12:5"
																},
																"nativeSrc": "619:20:5",
																"nodeType": "YulFunctionCall",
																"src": "619:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "610:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "610:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "648:24:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:24:5"
																},
																"nativeSrc": "648:31:5",
																"nodeType": "YulFunctionCall",
																"src": "648:31:5"
															},
															"nativeSrc": "648:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "648:31:5"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "550:135:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "578:6:5",
														"nodeType": "YulTypedName",
														"src": "578:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "586:3:5",
														"nodeType": "YulTypedName",
														"src": "586:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "594:5:5",
														"nodeType": "YulTypedName",
														"src": "594:5:5",
														"type": ""
													}
												],
												"src": "550:135:5"
											},
											{
												"body": {
													"nativeSrc": "755:261:5",
													"nodeType": "YulBlock",
													"src": "755:261:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "801:83:5",
																"nodeType": "YulBlock",
																"src": "801:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "803:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "803:77:5"
																			},
																			"nativeSrc": "803:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "803:79:5"
																		},
																		"nativeSrc": "803:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "803:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "776:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "776:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "785:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "772:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:5"
																		},
																		"nativeSrc": "772:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "772:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "797:2:5",
																		"nodeType": "YulLiteral",
																		"src": "797:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "768:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "768:3:5"
																},
																"nativeSrc": "768:32:5",
																"nodeType": "YulFunctionCall",
																"src": "768:32:5"
															},
															"nativeSrc": "765:119:5",
															"nodeType": "YulIf",
															"src": "765:119:5"
														},
														{
															"nativeSrc": "894:115:5",
															"nodeType": "YulBlock",
															"src": "894:115:5",
															"statements": [
																{
																	"nativeSrc": "909:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "909:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "923:1:5",
																		"nodeType": "YulLiteral",
																		"src": "923:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "913:6:5",
																			"nodeType": "YulTypedName",
																			"src": "913:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "938:61:5",
																	"nodeType": "YulAssignment",
																	"src": "938:61:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "971:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "971:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "982:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "982:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:5"
																				},
																				"nativeSrc": "967:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "967:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "948:18:5",
																			"nodeType": "YulIdentifier",
																			"src": "948:18:5"
																		},
																		"nativeSrc": "948:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "948:51:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "938:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "938:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "691:325:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "725:9:5",
														"nodeType": "YulTypedName",
														"src": "725:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "736:7:5",
														"nodeType": "YulTypedName",
														"src": "736:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "748:6:5",
														"nodeType": "YulTypedName",
														"src": "748:6:5",
														"type": ""
													}
												],
												"src": "691:325:5"
											},
											{
												"body": {
													"nativeSrc": "1067:81:5",
													"nodeType": "YulBlock",
													"src": "1067:81:5",
													"statements": [
														{
															"nativeSrc": "1077:65:5",
															"nodeType": "YulAssignment",
															"src": "1077:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1092:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1099:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1099:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1088:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:5"
																},
																"nativeSrc": "1088:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1088:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1022:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:5",
														"nodeType": "YulTypedName",
														"src": "1049:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:5",
														"nodeType": "YulTypedName",
														"src": "1059:7:5",
														"type": ""
													}
												],
												"src": "1022:126:5"
											},
											{
												"body": {
													"nativeSrc": "1199:51:5",
													"nodeType": "YulBlock",
													"src": "1199:51:5",
													"statements": [
														{
															"nativeSrc": "1209:35:5",
															"nodeType": "YulAssignment",
															"src": "1209:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1238:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1238:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1220:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1220:17:5"
																},
																"nativeSrc": "1220:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1220:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1209:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1209:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1154:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1181:5:5",
														"nodeType": "YulTypedName",
														"src": "1181:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1191:7:5",
														"nodeType": "YulTypedName",
														"src": "1191:7:5",
														"type": ""
													}
												],
												"src": "1154:96:5"
											},
											{
												"body": {
													"nativeSrc": "1299:79:5",
													"nodeType": "YulBlock",
													"src": "1299:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1356:16:5",
																"nodeType": "YulBlock",
																"src": "1356:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1365:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:5"
																			},
																			"nativeSrc": "1358:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1358:12:5"
																		},
																		"nativeSrc": "1358:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1322:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1322:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1347:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1347:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1329:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1329:17:5"
																				},
																				"nativeSrc": "1329:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1329:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1319:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1319:2:5"
																		},
																		"nativeSrc": "1319:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1319:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1312:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1312:6:5"
																},
																"nativeSrc": "1312:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1312:43:5"
															},
															"nativeSrc": "1309:63:5",
															"nodeType": "YulIf",
															"src": "1309:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1256:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1292:5:5",
														"nodeType": "YulTypedName",
														"src": "1292:5:5",
														"type": ""
													}
												],
												"src": "1256:122:5"
											},
											{
												"body": {
													"nativeSrc": "1436:87:5",
													"nodeType": "YulBlock",
													"src": "1436:87:5",
													"statements": [
														{
															"nativeSrc": "1446:29:5",
															"nodeType": "YulAssignment",
															"src": "1446:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1468:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1468:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1455:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1455:12:5"
																},
																"nativeSrc": "1455:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1455:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1446:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1446:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1511:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1511:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1484:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1484:26:5"
																},
																"nativeSrc": "1484:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1484:33:5"
															},
															"nativeSrc": "1484:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1484:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1384:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1414:6:5",
														"nodeType": "YulTypedName",
														"src": "1414:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1422:3:5",
														"nodeType": "YulTypedName",
														"src": "1422:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1430:5:5",
														"nodeType": "YulTypedName",
														"src": "1430:5:5",
														"type": ""
													}
												],
												"src": "1384:139:5"
											},
											{
												"body": {
													"nativeSrc": "1595:263:5",
													"nodeType": "YulBlock",
													"src": "1595:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1641:83:5",
																"nodeType": "YulBlock",
																"src": "1641:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1643:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1643:77:5"
																			},
																			"nativeSrc": "1643:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1643:79:5"
																		},
																		"nativeSrc": "1643:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1643:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1616:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1616:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1625:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1625:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1612:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1612:3:5"
																		},
																		"nativeSrc": "1612:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1612:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1637:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1637:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1608:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:5"
																},
																"nativeSrc": "1608:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1608:32:5"
															},
															"nativeSrc": "1605:119:5",
															"nodeType": "YulIf",
															"src": "1605:119:5"
														},
														{
															"nativeSrc": "1734:117:5",
															"nodeType": "YulBlock",
															"src": "1734:117:5",
															"statements": [
																{
																	"nativeSrc": "1749:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1749:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1763:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1763:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1753:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1753:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1778:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1778:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1813:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1813:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1824:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1824:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1809:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1809:3:5"
																				},
																				"nativeSrc": "1809:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1809:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1833:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1833:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1788:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1788:20:5"
																		},
																		"nativeSrc": "1788:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1778:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1778:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1529:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1565:9:5",
														"nodeType": "YulTypedName",
														"src": "1565:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1576:7:5",
														"nodeType": "YulTypedName",
														"src": "1576:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1588:6:5",
														"nodeType": "YulTypedName",
														"src": "1588:6:5",
														"type": ""
													}
												],
												"src": "1529:329:5"
											},
											{
												"body": {
													"nativeSrc": "1909:32:5",
													"nodeType": "YulBlock",
													"src": "1909:32:5",
													"statements": [
														{
															"nativeSrc": "1919:16:5",
															"nodeType": "YulAssignment",
															"src": "1919:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1930:5:5",
																"nodeType": "YulIdentifier",
																"src": "1930:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1919:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1919:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1864:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1891:5:5",
														"nodeType": "YulTypedName",
														"src": "1891:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1901:7:5",
														"nodeType": "YulTypedName",
														"src": "1901:7:5",
														"type": ""
													}
												],
												"src": "1864:77:5"
											},
											{
												"body": {
													"nativeSrc": "2012:53:5",
													"nodeType": "YulBlock",
													"src": "2012:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2029:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2052:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2052:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2034:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2034:17:5"
																		},
																		"nativeSrc": "2034:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2034:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2022:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2022:6:5"
																},
																"nativeSrc": "2022:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2022:37:5"
															},
															"nativeSrc": "2022:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2022:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1947:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2000:5:5",
														"nodeType": "YulTypedName",
														"src": "2000:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2007:3:5",
														"nodeType": "YulTypedName",
														"src": "2007:3:5",
														"type": ""
													}
												],
												"src": "1947:118:5"
											},
											{
												"body": {
													"nativeSrc": "2225:288:5",
													"nodeType": "YulBlock",
													"src": "2225:288:5",
													"statements": [
														{
															"nativeSrc": "2235:26:5",
															"nodeType": "YulAssignment",
															"src": "2235:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2247:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2247:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2258:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2258:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2243:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2243:3:5"
																},
																"nativeSrc": "2243:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2243:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2235:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2235:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2315:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2315:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2328:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2328:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2339:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2339:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2324:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:5"
																		},
																		"nativeSrc": "2324:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2271:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2271:43:5"
																},
																"nativeSrc": "2271:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2271:71:5"
															},
															"nativeSrc": "2271:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2271:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2396:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2396:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2409:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2409:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2420:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2405:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2405:3:5"
																		},
																		"nativeSrc": "2405:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2405:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2352:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2352:43:5"
																},
																"nativeSrc": "2352:72:5",
																"nodeType": "YulFunctionCall",
																"src": "2352:72:5"
															},
															"nativeSrc": "2352:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "2352:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2491:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2502:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2502:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2487:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:5"
																		},
																		"nativeSrc": "2487:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2487:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2434:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2434:43:5"
																},
																"nativeSrc": "2434:72:5",
																"nodeType": "YulFunctionCall",
																"src": "2434:72:5"
															},
															"nativeSrc": "2434:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "2434:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2071:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2181:9:5",
														"nodeType": "YulTypedName",
														"src": "2181:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2193:6:5",
														"nodeType": "YulTypedName",
														"src": "2193:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2201:6:5",
														"nodeType": "YulTypedName",
														"src": "2201:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2209:6:5",
														"nodeType": "YulTypedName",
														"src": "2209:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2220:4:5",
														"nodeType": "YulTypedName",
														"src": "2220:4:5",
														"type": ""
													}
												],
												"src": "2071:442:5"
											},
											{
												"body": {
													"nativeSrc": "2562:79:5",
													"nodeType": "YulBlock",
													"src": "2562:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2619:16:5",
																"nodeType": "YulBlock",
																"src": "2619:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2628:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2628:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2631:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2621:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2621:6:5"
																			},
																			"nativeSrc": "2621:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2621:12:5"
																		},
																		"nativeSrc": "2621:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2621:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2585:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2585:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2610:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2610:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2592:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2592:17:5"
																				},
																				"nativeSrc": "2592:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2592:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2582:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2582:2:5"
																		},
																		"nativeSrc": "2582:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2575:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:5"
																},
																"nativeSrc": "2575:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2575:43:5"
															},
															"nativeSrc": "2572:63:5",
															"nodeType": "YulIf",
															"src": "2572:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2519:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2555:5:5",
														"nodeType": "YulTypedName",
														"src": "2555:5:5",
														"type": ""
													}
												],
												"src": "2519:122:5"
											},
											{
												"body": {
													"nativeSrc": "2699:87:5",
													"nodeType": "YulBlock",
													"src": "2699:87:5",
													"statements": [
														{
															"nativeSrc": "2709:29:5",
															"nodeType": "YulAssignment",
															"src": "2709:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2731:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2731:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2718:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2718:12:5"
																},
																"nativeSrc": "2718:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2718:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2709:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2709:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2774:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2774:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2747:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2747:26:5"
																},
																"nativeSrc": "2747:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2747:33:5"
															},
															"nativeSrc": "2747:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2747:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2647:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2677:6:5",
														"nodeType": "YulTypedName",
														"src": "2677:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2685:3:5",
														"nodeType": "YulTypedName",
														"src": "2685:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2693:5:5",
														"nodeType": "YulTypedName",
														"src": "2693:5:5",
														"type": ""
													}
												],
												"src": "2647:139:5"
											},
											{
												"body": {
													"nativeSrc": "2858:263:5",
													"nodeType": "YulBlock",
													"src": "2858:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:83:5",
																"nodeType": "YulBlock",
																"src": "2904:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2906:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2906:77:5"
																			},
																			"nativeSrc": "2906:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:79:5"
																		},
																		"nativeSrc": "2906:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2879:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2879:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2888:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2888:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2875:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:5"
																		},
																		"nativeSrc": "2875:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2875:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2900:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2900:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2871:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:5"
																},
																"nativeSrc": "2871:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2871:32:5"
															},
															"nativeSrc": "2868:119:5",
															"nodeType": "YulIf",
															"src": "2868:119:5"
														},
														{
															"nativeSrc": "2997:117:5",
															"nodeType": "YulBlock",
															"src": "2997:117:5",
															"statements": [
																{
																	"nativeSrc": "3012:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3012:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3026:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3016:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3016:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3041:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3041:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:5"
																				},
																				"nativeSrc": "3072:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3051:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3051:20:5"
																		},
																		"nativeSrc": "3051:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3051:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3041:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3041:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2792:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2828:9:5",
														"nodeType": "YulTypedName",
														"src": "2828:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2839:7:5",
														"nodeType": "YulTypedName",
														"src": "2839:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2851:6:5",
														"nodeType": "YulTypedName",
														"src": "2851:6:5",
														"type": ""
													}
												],
												"src": "2792:329:5"
											},
											{
												"body": {
													"nativeSrc": "3159:28:5",
													"nodeType": "YulBlock",
													"src": "3159:28:5",
													"statements": [
														{
															"nativeSrc": "3169:12:5",
															"nodeType": "YulAssignment",
															"src": "3169:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "3176:5:5",
																"nodeType": "YulIdentifier",
																"src": "3176:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3169:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3127:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3145:5:5",
														"nodeType": "YulTypedName",
														"src": "3145:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3155:3:5",
														"nodeType": "YulTypedName",
														"src": "3155:3:5",
														"type": ""
													}
												],
												"src": "3127:60:5"
											},
											{
												"body": {
													"nativeSrc": "3253:82:5",
													"nodeType": "YulBlock",
													"src": "3253:82:5",
													"statements": [
														{
															"nativeSrc": "3263:66:5",
															"nodeType": "YulAssignment",
															"src": "3263:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3321:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3303:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3303:17:5"
																				},
																				"nativeSrc": "3303:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3294:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3294:8:5"
																		},
																		"nativeSrc": "3294:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3294:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3276:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3276:17:5"
																},
																"nativeSrc": "3276:53:5",
																"nodeType": "YulFunctionCall",
																"src": "3276:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3263:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3263:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3193:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3233:5:5",
														"nodeType": "YulTypedName",
														"src": "3233:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3243:9:5",
														"nodeType": "YulTypedName",
														"src": "3243:9:5",
														"type": ""
													}
												],
												"src": "3193:142:5"
											},
											{
												"body": {
													"nativeSrc": "3401:66:5",
													"nodeType": "YulBlock",
													"src": "3401:66:5",
													"statements": [
														{
															"nativeSrc": "3411:50:5",
															"nodeType": "YulAssignment",
															"src": "3411:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3455:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3455:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3424:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3424:30:5"
																},
																"nativeSrc": "3424:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3424:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3411:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3411:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3341:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3381:5:5",
														"nodeType": "YulTypedName",
														"src": "3381:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3391:9:5",
														"nodeType": "YulTypedName",
														"src": "3391:9:5",
														"type": ""
													}
												],
												"src": "3341:126:5"
											},
											{
												"body": {
													"nativeSrc": "3546:66:5",
													"nodeType": "YulBlock",
													"src": "3546:66:5",
													"statements": [
														{
															"nativeSrc": "3556:50:5",
															"nodeType": "YulAssignment",
															"src": "3556:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3600:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3600:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3569:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3569:30:5"
																},
																"nativeSrc": "3569:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3569:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3556:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3556:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "3473:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:5",
														"nodeType": "YulTypedName",
														"src": "3526:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3536:9:5",
														"nodeType": "YulTypedName",
														"src": "3536:9:5",
														"type": ""
													}
												],
												"src": "3473:139:5"
											},
											{
												"body": {
													"nativeSrc": "3696:79:5",
													"nodeType": "YulBlock",
													"src": "3696:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3713:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3713:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3762:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3762:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "3718:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "3718:43:5"
																		},
																		"nativeSrc": "3718:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3718:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3706:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:5"
																},
																"nativeSrc": "3706:63:5",
																"nodeType": "YulFunctionCall",
																"src": "3706:63:5"
															},
															"nativeSrc": "3706:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "3706:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "3618:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3684:5:5",
														"nodeType": "YulTypedName",
														"src": "3684:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3691:3:5",
														"nodeType": "YulTypedName",
														"src": "3691:3:5",
														"type": ""
													}
												],
												"src": "3618:157:5"
											},
											{
												"body": {
													"nativeSrc": "3892:137:5",
													"nodeType": "YulBlock",
													"src": "3892:137:5",
													"statements": [
														{
															"nativeSrc": "3902:26:5",
															"nodeType": "YulAssignment",
															"src": "3902:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3914:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3914:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3925:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3925:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3910:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3910:3:5"
																},
																"nativeSrc": "3910:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3910:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3902:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3902:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3995:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4008:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4008:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4019:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4019:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4004:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:5"
																		},
																		"nativeSrc": "4004:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4004:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "3938:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "3938:56:5"
																},
																"nativeSrc": "3938:84:5",
																"nodeType": "YulFunctionCall",
																"src": "3938:84:5"
															},
															"nativeSrc": "3938:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "3938:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "3781:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3864:9:5",
														"nodeType": "YulTypedName",
														"src": "3864:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3876:6:5",
														"nodeType": "YulTypedName",
														"src": "3876:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3887:4:5",
														"nodeType": "YulTypedName",
														"src": "3887:4:5",
														"type": ""
													}
												],
												"src": "3781:248:5"
											},
											{
												"body": {
													"nativeSrc": "4131:73:5",
													"nodeType": "YulBlock",
													"src": "4131:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4148:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4148:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4153:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4153:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4141:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:5"
																},
																"nativeSrc": "4141:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4141:19:5"
															},
															"nativeSrc": "4141:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "4141:19:5"
														},
														{
															"nativeSrc": "4169:29:5",
															"nodeType": "YulAssignment",
															"src": "4169:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4188:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4188:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4193:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4193:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4184:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:5"
																},
																"nativeSrc": "4184:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4184:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4169:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "4169:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4035:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4103:3:5",
														"nodeType": "YulTypedName",
														"src": "4103:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4108:6:5",
														"nodeType": "YulTypedName",
														"src": "4108:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4119:11:5",
														"nodeType": "YulTypedName",
														"src": "4119:11:5",
														"type": ""
													}
												],
												"src": "4035:169:5"
											},
											{
												"body": {
													"nativeSrc": "4316:64:5",
													"nodeType": "YulBlock",
													"src": "4316:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4338:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4338:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4346:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:5"
																		},
																		"nativeSrc": "4334:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4334:14:5"
																	},
																	{
																		"hexValue": "796f75277265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4350:22:5",
																		"nodeType": "YulLiteral",
																		"src": "4350:22:5",
																		"type": "",
																		"value": "you're not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4327:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:5"
																},
																"nativeSrc": "4327:46:5",
																"nodeType": "YulFunctionCall",
																"src": "4327:46:5"
															},
															"nativeSrc": "4327:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "4327:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c",
												"nativeSrc": "4210:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4308:6:5",
														"nodeType": "YulTypedName",
														"src": "4308:6:5",
														"type": ""
													}
												],
												"src": "4210:170:5"
											},
											{
												"body": {
													"nativeSrc": "4532:220:5",
													"nodeType": "YulBlock",
													"src": "4532:220:5",
													"statements": [
														{
															"nativeSrc": "4542:74:5",
															"nodeType": "YulAssignment",
															"src": "4542:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4608:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4549:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4549:58:5"
																},
																"nativeSrc": "4549:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4549:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4542:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4542:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4714:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4714:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c",
																	"nativeSrc": "4625:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4625:88:5"
																},
																"nativeSrc": "4625:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4625:93:5"
															},
															"nativeSrc": "4625:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4625:93:5"
														},
														{
															"nativeSrc": "4727:19:5",
															"nodeType": "YulAssignment",
															"src": "4727:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4738:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4738:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4734:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:5"
																},
																"nativeSrc": "4734:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4734:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4727:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4386:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4520:3:5",
														"nodeType": "YulTypedName",
														"src": "4520:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4528:3:5",
														"nodeType": "YulTypedName",
														"src": "4528:3:5",
														"type": ""
													}
												],
												"src": "4386:366:5"
											},
											{
												"body": {
													"nativeSrc": "4929:248:5",
													"nodeType": "YulBlock",
													"src": "4929:248:5",
													"statements": [
														{
															"nativeSrc": "4939:26:5",
															"nodeType": "YulAssignment",
															"src": "4939:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4951:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4951:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4962:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4962:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4947:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:5"
																},
																"nativeSrc": "4947:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4947:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4939:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4939:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4986:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4997:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4997:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4982:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4982:3:5"
																		},
																		"nativeSrc": "4982:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4982:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5005:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5005:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5011:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5001:3:5"
																		},
																		"nativeSrc": "5001:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5001:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4975:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:5"
																},
																"nativeSrc": "4975:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4975:47:5"
															},
															"nativeSrc": "4975:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4975:47:5"
														},
														{
															"nativeSrc": "5031:139:5",
															"nodeType": "YulAssignment",
															"src": "5031:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5165:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5165:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5039:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5039:124:5"
																},
																"nativeSrc": "5039:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5039:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5031:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5031:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4758:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4909:9:5",
														"nodeType": "YulTypedName",
														"src": "4909:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4924:4:5",
														"nodeType": "YulTypedName",
														"src": "4924:4:5",
														"type": ""
													}
												],
												"src": "4758:419:5"
											},
											{
												"body": {
													"nativeSrc": "5289:60:5",
													"nodeType": "YulBlock",
													"src": "5289:60:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5311:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5311:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5319:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5319:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5307:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:5"
																		},
																		"nativeSrc": "5307:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:14:5"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e73205374616b6564",
																		"kind": "string",
																		"nativeSrc": "5323:18:5",
																		"nodeType": "YulLiteral",
																		"src": "5323:18:5",
																		"type": "",
																		"value": "No Tokens Staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5300:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:5"
																},
																"nativeSrc": "5300:42:5",
																"nodeType": "YulFunctionCall",
																"src": "5300:42:5"
															},
															"nativeSrc": "5300:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "5300:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
												"nativeSrc": "5183:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5281:6:5",
														"nodeType": "YulTypedName",
														"src": "5281:6:5",
														"type": ""
													}
												],
												"src": "5183:166:5"
											},
											{
												"body": {
													"nativeSrc": "5501:220:5",
													"nodeType": "YulBlock",
													"src": "5501:220:5",
													"statements": [
														{
															"nativeSrc": "5511:74:5",
															"nodeType": "YulAssignment",
															"src": "5511:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5577:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5577:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5582:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5518:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5518:58:5"
																},
																"nativeSrc": "5518:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5518:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5511:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5511:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5683:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5683:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
																	"nativeSrc": "5594:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5594:88:5"
																},
																"nativeSrc": "5594:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5594:93:5"
															},
															"nativeSrc": "5594:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5594:93:5"
														},
														{
															"nativeSrc": "5696:19:5",
															"nodeType": "YulAssignment",
															"src": "5696:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5707:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5707:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5712:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5703:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5703:3:5"
																},
																"nativeSrc": "5703:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5703:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5696:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5696:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5355:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5489:3:5",
														"nodeType": "YulTypedName",
														"src": "5489:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5497:3:5",
														"nodeType": "YulTypedName",
														"src": "5497:3:5",
														"type": ""
													}
												],
												"src": "5355:366:5"
											},
											{
												"body": {
													"nativeSrc": "5898:248:5",
													"nodeType": "YulBlock",
													"src": "5898:248:5",
													"statements": [
														{
															"nativeSrc": "5908:26:5",
															"nodeType": "YulAssignment",
															"src": "5908:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5920:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5920:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5931:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5916:3:5"
																},
																"nativeSrc": "5916:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5916:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5908:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5955:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5955:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5966:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5966:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5951:3:5"
																		},
																		"nativeSrc": "5951:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5951:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5974:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5974:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5980:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5980:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5970:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:5"
																		},
																		"nativeSrc": "5970:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5970:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5944:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:5"
																},
																"nativeSrc": "5944:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5944:47:5"
															},
															"nativeSrc": "5944:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5944:47:5"
														},
														{
															"nativeSrc": "6000:139:5",
															"nodeType": "YulAssignment",
															"src": "6000:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6134:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6134:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6008:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6008:124:5"
																},
																"nativeSrc": "6008:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6008:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6000:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6000:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5727:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5878:9:5",
														"nodeType": "YulTypedName",
														"src": "5878:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5893:4:5",
														"nodeType": "YulTypedName",
														"src": "5893:4:5",
														"type": ""
													}
												],
												"src": "5727:419:5"
											},
											{
												"body": {
													"nativeSrc": "6258:76:5",
													"nodeType": "YulBlock",
													"src": "6258:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6280:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6280:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6288:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6288:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6276:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6276:3:5"
																		},
																		"nativeSrc": "6276:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6276:14:5"
																	},
																	{
																		"hexValue": "596f752063616e2774207769746864726177206265666f7265203120686f7572",
																		"kind": "string",
																		"nativeSrc": "6292:34:5",
																		"nodeType": "YulLiteral",
																		"src": "6292:34:5",
																		"type": "",
																		"value": "You can't withdraw before 1 hour"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6269:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6269:6:5"
																},
																"nativeSrc": "6269:58:5",
																"nodeType": "YulFunctionCall",
																"src": "6269:58:5"
															},
															"nativeSrc": "6269:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "6269:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
												"nativeSrc": "6152:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6250:6:5",
														"nodeType": "YulTypedName",
														"src": "6250:6:5",
														"type": ""
													}
												],
												"src": "6152:182:5"
											},
											{
												"body": {
													"nativeSrc": "6486:220:5",
													"nodeType": "YulBlock",
													"src": "6486:220:5",
													"statements": [
														{
															"nativeSrc": "6496:74:5",
															"nodeType": "YulAssignment",
															"src": "6496:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6562:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6562:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6567:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6567:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6503:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6503:58:5"
																},
																"nativeSrc": "6503:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6503:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6496:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6496:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6668:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
																	"nativeSrc": "6579:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6579:88:5"
																},
																"nativeSrc": "6579:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6579:93:5"
															},
															"nativeSrc": "6579:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6579:93:5"
														},
														{
															"nativeSrc": "6681:19:5",
															"nodeType": "YulAssignment",
															"src": "6681:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6692:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6692:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6697:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6697:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6688:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:5"
																},
																"nativeSrc": "6688:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6688:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6681:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6340:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6474:3:5",
														"nodeType": "YulTypedName",
														"src": "6474:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6482:3:5",
														"nodeType": "YulTypedName",
														"src": "6482:3:5",
														"type": ""
													}
												],
												"src": "6340:366:5"
											},
											{
												"body": {
													"nativeSrc": "6883:248:5",
													"nodeType": "YulBlock",
													"src": "6883:248:5",
													"statements": [
														{
															"nativeSrc": "6893:26:5",
															"nodeType": "YulAssignment",
															"src": "6893:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6905:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6905:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6916:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6916:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6901:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:5"
																},
																"nativeSrc": "6901:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6901:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6893:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6893:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6940:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6951:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6936:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:5"
																		},
																		"nativeSrc": "6936:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6959:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6959:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6965:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6965:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6955:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:5"
																		},
																		"nativeSrc": "6955:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6929:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:5"
																},
																"nativeSrc": "6929:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6929:47:5"
															},
															"nativeSrc": "6929:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6929:47:5"
														},
														{
															"nativeSrc": "6985:139:5",
															"nodeType": "YulAssignment",
															"src": "6985:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7119:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7119:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6993:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6993:124:5"
																},
																"nativeSrc": "6993:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6993:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6985:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6985:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6712:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6863:9:5",
														"nodeType": "YulTypedName",
														"src": "6863:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6878:4:5",
														"nodeType": "YulTypedName",
														"src": "6878:4:5",
														"type": ""
													}
												],
												"src": "6712:419:5"
											},
											{
												"body": {
													"nativeSrc": "7165:152:5",
													"nodeType": "YulBlock",
													"src": "7165:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7182:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7182:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7185:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7185:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7175:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7175:6:5"
																},
																"nativeSrc": "7175:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7175:88:5"
															},
															"nativeSrc": "7175:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7175:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7279:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7279:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7282:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7282:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:5"
																},
																"nativeSrc": "7272:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7272:15:5"
															},
															"nativeSrc": "7272:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7272:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7303:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7303:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7306:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7306:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7296:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7296:6:5"
																},
																"nativeSrc": "7296:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7296:15:5"
															},
															"nativeSrc": "7296:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7296:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7137:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7137:180:5"
											},
											{
												"body": {
													"nativeSrc": "7368:149:5",
													"nodeType": "YulBlock",
													"src": "7368:149:5",
													"statements": [
														{
															"nativeSrc": "7378:25:5",
															"nodeType": "YulAssignment",
															"src": "7378:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7401:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7401:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7383:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7383:17:5"
																},
																"nativeSrc": "7383:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7383:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7378:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7378:1:5"
																}
															]
														},
														{
															"nativeSrc": "7412:25:5",
															"nodeType": "YulAssignment",
															"src": "7412:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7435:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7435:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7417:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7417:17:5"
																},
																"nativeSrc": "7417:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7417:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7412:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7412:1:5"
																}
															]
														},
														{
															"nativeSrc": "7446:17:5",
															"nodeType": "YulAssignment",
															"src": "7446:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7458:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7458:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7461:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7461:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7454:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7454:3:5"
																},
																"nativeSrc": "7454:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7454:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7446:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7446:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7488:22:5",
																"nodeType": "YulBlock",
																"src": "7488:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7490:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7490:16:5"
																			},
																			"nativeSrc": "7490:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7490:18:5"
																		},
																		"nativeSrc": "7490:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7490:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7479:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7479:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7485:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7485:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7476:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7476:2:5"
																},
																"nativeSrc": "7476:11:5",
																"nodeType": "YulFunctionCall",
																"src": "7476:11:5"
															},
															"nativeSrc": "7473:37:5",
															"nodeType": "YulIf",
															"src": "7473:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7323:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7354:1:5",
														"nodeType": "YulTypedName",
														"src": "7354:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7357:1:5",
														"nodeType": "YulTypedName",
														"src": "7357:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7363:4:5",
														"nodeType": "YulTypedName",
														"src": "7363:4:5",
														"type": ""
													}
												],
												"src": "7323:194:5"
											},
											{
												"body": {
													"nativeSrc": "7567:147:5",
													"nodeType": "YulBlock",
													"src": "7567:147:5",
													"statements": [
														{
															"nativeSrc": "7577:25:5",
															"nodeType": "YulAssignment",
															"src": "7577:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7600:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7600:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7582:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7582:17:5"
																},
																"nativeSrc": "7582:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7582:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7577:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7577:1:5"
																}
															]
														},
														{
															"nativeSrc": "7611:25:5",
															"nodeType": "YulAssignment",
															"src": "7611:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7634:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7616:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7616:17:5"
																},
																"nativeSrc": "7616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7616:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7611:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7611:1:5"
																}
															]
														},
														{
															"nativeSrc": "7645:16:5",
															"nodeType": "YulAssignment",
															"src": "7645:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7656:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7656:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7659:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7659:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7652:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7652:3:5"
																},
																"nativeSrc": "7652:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7652:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7645:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7685:22:5",
																"nodeType": "YulBlock",
																"src": "7685:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7687:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7687:16:5"
																			},
																			"nativeSrc": "7687:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7687:18:5"
																		},
																		"nativeSrc": "7687:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7687:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7677:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7677:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7680:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7680:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7674:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7674:2:5"
																},
																"nativeSrc": "7674:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7674:10:5"
															},
															"nativeSrc": "7671:36:5",
															"nodeType": "YulIf",
															"src": "7671:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7523:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7554:1:5",
														"nodeType": "YulTypedName",
														"src": "7554:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7557:1:5",
														"nodeType": "YulTypedName",
														"src": "7557:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7563:3:5",
														"nodeType": "YulTypedName",
														"src": "7563:3:5",
														"type": ""
													}
												],
												"src": "7523:191:5"
											},
											{
												"body": {
													"nativeSrc": "7748:152:5",
													"nodeType": "YulBlock",
													"src": "7748:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7765:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7765:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7768:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7768:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7758:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7758:6:5"
																},
																"nativeSrc": "7758:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7758:88:5"
															},
															"nativeSrc": "7758:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7758:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7862:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7862:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7865:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7865:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:5"
																},
																"nativeSrc": "7855:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7855:15:5"
															},
															"nativeSrc": "7855:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7855:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7889:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7879:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:5"
																},
																"nativeSrc": "7879:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7879:15:5"
															},
															"nativeSrc": "7879:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7879:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7720:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7720:180:5"
											},
											{
												"body": {
													"nativeSrc": "7948:143:5",
													"nodeType": "YulBlock",
													"src": "7948:143:5",
													"statements": [
														{
															"nativeSrc": "7958:25:5",
															"nodeType": "YulAssignment",
															"src": "7958:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7981:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7981:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7963:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7963:17:5"
																},
																"nativeSrc": "7963:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7963:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7958:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7958:1:5"
																}
															]
														},
														{
															"nativeSrc": "7992:25:5",
															"nodeType": "YulAssignment",
															"src": "7992:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8015:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8015:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7997:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7997:17:5"
																},
																"nativeSrc": "7997:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7997:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7992:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7992:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8039:22:5",
																"nodeType": "YulBlock",
																"src": "8039:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8041:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8041:16:5"
																			},
																			"nativeSrc": "8041:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8041:18:5"
																		},
																		"nativeSrc": "8041:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8041:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8036:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8036:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8029:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:5"
																},
																"nativeSrc": "8029:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8029:9:5"
															},
															"nativeSrc": "8026:35:5",
															"nodeType": "YulIf",
															"src": "8026:35:5"
														},
														{
															"nativeSrc": "8071:14:5",
															"nodeType": "YulAssignment",
															"src": "8071:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8080:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8080:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8083:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8083:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8076:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:5"
																},
																"nativeSrc": "8076:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8076:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8071:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8071:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7906:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7937:1:5",
														"nodeType": "YulTypedName",
														"src": "7937:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7940:1:5",
														"nodeType": "YulTypedName",
														"src": "7940:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7946:1:5",
														"nodeType": "YulTypedName",
														"src": "7946:1:5",
														"type": ""
													}
												],
												"src": "7906:185:5"
											},
											{
												"body": {
													"nativeSrc": "8145:362:5",
													"nodeType": "YulBlock",
													"src": "8145:362:5",
													"statements": [
														{
															"nativeSrc": "8155:25:5",
															"nodeType": "YulAssignment",
															"src": "8155:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8178:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8178:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8160:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8160:17:5"
																},
																"nativeSrc": "8160:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8160:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8155:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8155:1:5"
																}
															]
														},
														{
															"nativeSrc": "8189:25:5",
															"nodeType": "YulAssignment",
															"src": "8189:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8212:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8212:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8194:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8194:17:5"
																},
																"nativeSrc": "8194:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8194:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8189:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8189:1:5"
																}
															]
														},
														{
															"nativeSrc": "8223:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8223:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8246:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8246:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8249:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8249:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8242:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8242:3:5"
																},
																"nativeSrc": "8242:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8242:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8227:11:5",
																	"nodeType": "YulTypedName",
																	"src": "8227:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8260:41:5",
															"nodeType": "YulAssignment",
															"src": "8260:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8289:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "8289:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8271:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8271:17:5"
																},
																"nativeSrc": "8271:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8271:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8260:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8260:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8478:22:5",
																"nodeType": "YulBlock",
																"src": "8478:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8480:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8480:16:5"
																			},
																			"nativeSrc": "8480:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8480:18:5"
																		},
																		"nativeSrc": "8480:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8480:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8411:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "8411:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8404:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8404:6:5"
																				},
																				"nativeSrc": "8404:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8404:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8434:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "8434:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8441:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "8441:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8450:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "8450:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8437:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8437:3:5"
																						},
																						"nativeSrc": "8437:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8437:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8431:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8431:2:5"
																				},
																				"nativeSrc": "8431:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8431:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8384:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8384:2:5"
																		},
																		"nativeSrc": "8384:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8384:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8364:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:5"
																},
																"nativeSrc": "8364:113:5",
																"nodeType": "YulFunctionCall",
																"src": "8364:113:5"
															},
															"nativeSrc": "8361:139:5",
															"nodeType": "YulIf",
															"src": "8361:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8097:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8128:1:5",
														"nodeType": "YulTypedName",
														"src": "8128:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8131:1:5",
														"nodeType": "YulTypedName",
														"src": "8131:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8137:7:5",
														"nodeType": "YulTypedName",
														"src": "8137:7:5",
														"type": ""
													}
												],
												"src": "8097:410:5"
											},
											{
												"body": {
													"nativeSrc": "8578:53:5",
													"nodeType": "YulBlock",
													"src": "8578:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8595:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8595:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8618:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8618:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8600:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:17:5"
																		},
																		"nativeSrc": "8600:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8588:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8588:6:5"
																},
																"nativeSrc": "8588:37:5",
																"nodeType": "YulFunctionCall",
																"src": "8588:37:5"
															},
															"nativeSrc": "8588:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "8588:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8513:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8566:5:5",
														"nodeType": "YulTypedName",
														"src": "8566:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8573:3:5",
														"nodeType": "YulTypedName",
														"src": "8573:3:5",
														"type": ""
													}
												],
												"src": "8513:118:5"
											},
											{
												"body": {
													"nativeSrc": "8735:124:5",
													"nodeType": "YulBlock",
													"src": "8735:124:5",
													"statements": [
														{
															"nativeSrc": "8745:26:5",
															"nodeType": "YulAssignment",
															"src": "8745:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8757:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8757:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8768:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8768:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8753:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8753:3:5"
																},
																"nativeSrc": "8753:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8753:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8745:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8745:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8825:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8825:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8838:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8838:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8849:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8849:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8834:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8834:3:5"
																		},
																		"nativeSrc": "8834:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8834:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8781:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8781:43:5"
																},
																"nativeSrc": "8781:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8781:71:5"
															},
															"nativeSrc": "8781:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8781:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8637:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8707:9:5",
														"nodeType": "YulTypedName",
														"src": "8707:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8719:6:5",
														"nodeType": "YulTypedName",
														"src": "8719:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8730:4:5",
														"nodeType": "YulTypedName",
														"src": "8730:4:5",
														"type": ""
													}
												],
												"src": "8637:222:5"
											},
											{
												"body": {
													"nativeSrc": "8928:80:5",
													"nodeType": "YulBlock",
													"src": "8928:80:5",
													"statements": [
														{
															"nativeSrc": "8938:22:5",
															"nodeType": "YulAssignment",
															"src": "8938:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8953:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8953:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8947:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8947:5:5"
																},
																"nativeSrc": "8947:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8947:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8938:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8938:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8996:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8996:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8969:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "8969:26:5"
																},
																"nativeSrc": "8969:33:5",
																"nodeType": "YulFunctionCall",
																"src": "8969:33:5"
															},
															"nativeSrc": "8969:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "8969:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8865:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8906:6:5",
														"nodeType": "YulTypedName",
														"src": "8906:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8914:3:5",
														"nodeType": "YulTypedName",
														"src": "8914:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8922:5:5",
														"nodeType": "YulTypedName",
														"src": "8922:5:5",
														"type": ""
													}
												],
												"src": "8865:143:5"
											},
											{
												"body": {
													"nativeSrc": "9091:274:5",
													"nodeType": "YulBlock",
													"src": "9091:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9137:83:5",
																"nodeType": "YulBlock",
																"src": "9137:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9139:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "9139:77:5"
																			},
																			"nativeSrc": "9139:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9139:79:5"
																		},
																		"nativeSrc": "9139:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9139:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9112:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9112:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9121:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9121:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9108:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9108:3:5"
																		},
																		"nativeSrc": "9108:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9108:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9133:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9133:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9104:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9104:3:5"
																},
																"nativeSrc": "9104:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9104:32:5"
															},
															"nativeSrc": "9101:119:5",
															"nodeType": "YulIf",
															"src": "9101:119:5"
														},
														{
															"nativeSrc": "9230:128:5",
															"nodeType": "YulBlock",
															"src": "9230:128:5",
															"statements": [
																{
																	"nativeSrc": "9245:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9245:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9259:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9259:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9249:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9249:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9274:74:5",
																	"nodeType": "YulAssignment",
																	"src": "9274:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9320:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9320:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9331:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9331:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9316:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9316:3:5"
																				},
																				"nativeSrc": "9316:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9316:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9340:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9340:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9284:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "9284:31:5"
																		},
																		"nativeSrc": "9284:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9284:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9274:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9274:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9014:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9061:9:5",
														"nodeType": "YulTypedName",
														"src": "9061:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9072:7:5",
														"nodeType": "YulTypedName",
														"src": "9072:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9084:6:5",
														"nodeType": "YulTypedName",
														"src": "9084:6:5",
														"type": ""
													}
												],
												"src": "9014:351:5"
											},
											{
												"body": {
													"nativeSrc": "9477:75:5",
													"nodeType": "YulBlock",
													"src": "9477:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9499:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9499:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9507:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9507:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9495:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9495:3:5"
																		},
																		"nativeSrc": "9495:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9495:14:5"
																	},
																	{
																		"hexValue": "4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264",
																		"kind": "string",
																		"nativeSrc": "9511:33:5",
																		"nodeType": "YulLiteral",
																		"src": "9511:33:5",
																		"type": "",
																		"value": "Not Enough Money to give reward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9488:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:5"
																},
																"nativeSrc": "9488:57:5",
																"nodeType": "YulFunctionCall",
																"src": "9488:57:5"
															},
															"nativeSrc": "9488:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "9488:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
												"nativeSrc": "9371:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9469:6:5",
														"nodeType": "YulTypedName",
														"src": "9469:6:5",
														"type": ""
													}
												],
												"src": "9371:181:5"
											},
											{
												"body": {
													"nativeSrc": "9704:220:5",
													"nodeType": "YulBlock",
													"src": "9704:220:5",
													"statements": [
														{
															"nativeSrc": "9714:74:5",
															"nodeType": "YulAssignment",
															"src": "9714:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9780:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9780:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9785:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9785:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9721:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9721:58:5"
																},
																"nativeSrc": "9721:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9721:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9714:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9714:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9886:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9886:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
																	"nativeSrc": "9797:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9797:88:5"
																},
																"nativeSrc": "9797:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9797:93:5"
															},
															"nativeSrc": "9797:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9797:93:5"
														},
														{
															"nativeSrc": "9899:19:5",
															"nodeType": "YulAssignment",
															"src": "9899:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9910:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9910:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9915:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9915:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:5"
																},
																"nativeSrc": "9906:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9906:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9899:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9899:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9558:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9692:3:5",
														"nodeType": "YulTypedName",
														"src": "9692:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9700:3:5",
														"nodeType": "YulTypedName",
														"src": "9700:3:5",
														"type": ""
													}
												],
												"src": "9558:366:5"
											},
											{
												"body": {
													"nativeSrc": "10101:248:5",
													"nodeType": "YulBlock",
													"src": "10101:248:5",
													"statements": [
														{
															"nativeSrc": "10111:26:5",
															"nodeType": "YulAssignment",
															"src": "10111:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10123:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10123:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10134:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10134:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10119:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10119:3:5"
																},
																"nativeSrc": "10119:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10119:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10111:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10111:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10158:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10158:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10169:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10169:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10154:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:5"
																		},
																		"nativeSrc": "10154:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10154:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10177:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10177:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10183:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10183:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10173:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10173:3:5"
																		},
																		"nativeSrc": "10173:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10173:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10147:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10147:6:5"
																},
																"nativeSrc": "10147:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10147:47:5"
															},
															"nativeSrc": "10147:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10147:47:5"
														},
														{
															"nativeSrc": "10203:139:5",
															"nodeType": "YulAssignment",
															"src": "10203:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10337:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10337:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10211:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10211:124:5"
																},
																"nativeSrc": "10211:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10211:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10203:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10203:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9930:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10081:9:5",
														"nodeType": "YulTypedName",
														"src": "10081:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10096:4:5",
														"nodeType": "YulTypedName",
														"src": "10096:4:5",
														"type": ""
													}
												],
												"src": "9930:419:5"
											},
											{
												"body": {
													"nativeSrc": "10453:124:5",
													"nodeType": "YulBlock",
													"src": "10453:124:5",
													"statements": [
														{
															"nativeSrc": "10463:26:5",
															"nodeType": "YulAssignment",
															"src": "10463:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10475:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10475:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10486:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10486:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10471:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10471:3:5"
																},
																"nativeSrc": "10471:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10471:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10463:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10463:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10543:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10543:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10556:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10556:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10567:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10567:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10552:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:5"
																		},
																		"nativeSrc": "10552:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10552:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10499:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10499:43:5"
																},
																"nativeSrc": "10499:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10499:71:5"
															},
															"nativeSrc": "10499:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10499:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10355:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10425:9:5",
														"nodeType": "YulTypedName",
														"src": "10425:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10437:6:5",
														"nodeType": "YulTypedName",
														"src": "10437:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10448:4:5",
														"nodeType": "YulTypedName",
														"src": "10448:4:5",
														"type": ""
													}
												],
												"src": "10355:222:5"
											},
											{
												"body": {
													"nativeSrc": "10689:185:5",
													"nodeType": "YulBlock",
													"src": "10689:185:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10711:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10711:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10719:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10719:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10707:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10707:3:5"
																		},
																		"nativeSrc": "10707:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10707:14:5"
																	},
																	{
																		"hexValue": "596f752063616e2774207374616b6520616761696e20776974686f7574207769",
																		"kind": "string",
																		"nativeSrc": "10723:34:5",
																		"nodeType": "YulLiteral",
																		"src": "10723:34:5",
																		"type": "",
																		"value": "You can't stake again without wi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10700:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10700:6:5"
																},
																"nativeSrc": "10700:58:5",
																"nodeType": "YulFunctionCall",
																"src": "10700:58:5"
															},
															"nativeSrc": "10700:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "10700:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10779:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10779:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10787:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10787:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10775:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:5"
																		},
																		"nativeSrc": "10775:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10775:15:5"
																	},
																	{
																		"hexValue": "746864726177696e6720796f75722070726576696f7573206d6f6e6579206669",
																		"kind": "string",
																		"nativeSrc": "10792:34:5",
																		"nodeType": "YulLiteral",
																		"src": "10792:34:5",
																		"type": "",
																		"value": "thdrawing your previous money fi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10768:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10768:6:5"
																},
																"nativeSrc": "10768:59:5",
																"nodeType": "YulFunctionCall",
																"src": "10768:59:5"
															},
															"nativeSrc": "10768:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "10768:59:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10848:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10848:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10856:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10856:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10844:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10844:3:5"
																		},
																		"nativeSrc": "10844:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10844:15:5"
																	},
																	{
																		"hexValue": "727374",
																		"kind": "string",
																		"nativeSrc": "10861:5:5",
																		"nodeType": "YulLiteral",
																		"src": "10861:5:5",
																		"type": "",
																		"value": "rst"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10837:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10837:6:5"
																},
																"nativeSrc": "10837:30:5",
																"nodeType": "YulFunctionCall",
																"src": "10837:30:5"
															},
															"nativeSrc": "10837:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "10837:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211",
												"nativeSrc": "10583:291:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10681:6:5",
														"nodeType": "YulTypedName",
														"src": "10681:6:5",
														"type": ""
													}
												],
												"src": "10583:291:5"
											},
											{
												"body": {
													"nativeSrc": "11026:220:5",
													"nodeType": "YulBlock",
													"src": "11026:220:5",
													"statements": [
														{
															"nativeSrc": "11036:74:5",
															"nodeType": "YulAssignment",
															"src": "11036:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11102:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11102:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11107:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:5",
																		"type": "",
																		"value": "67"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11043:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11043:58:5"
																},
																"nativeSrc": "11043:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11043:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11036:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11036:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11208:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11208:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211",
																	"nativeSrc": "11119:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11119:88:5"
																},
																"nativeSrc": "11119:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11119:93:5"
															},
															"nativeSrc": "11119:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11119:93:5"
														},
														{
															"nativeSrc": "11221:19:5",
															"nodeType": "YulAssignment",
															"src": "11221:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11232:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11232:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11237:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11237:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11228:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11228:3:5"
																},
																"nativeSrc": "11228:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11228:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11221:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11221:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10880:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11014:3:5",
														"nodeType": "YulTypedName",
														"src": "11014:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11022:3:5",
														"nodeType": "YulTypedName",
														"src": "11022:3:5",
														"type": ""
													}
												],
												"src": "10880:366:5"
											},
											{
												"body": {
													"nativeSrc": "11423:248:5",
													"nodeType": "YulBlock",
													"src": "11423:248:5",
													"statements": [
														{
															"nativeSrc": "11433:26:5",
															"nodeType": "YulAssignment",
															"src": "11433:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11445:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11445:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11456:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11456:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11441:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11441:3:5"
																},
																"nativeSrc": "11441:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11441:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11433:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11433:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11480:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11491:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11491:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11476:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:5"
																		},
																		"nativeSrc": "11476:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11476:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11499:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11499:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11505:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11505:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11495:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11495:3:5"
																		},
																		"nativeSrc": "11495:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11495:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11469:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:5"
																},
																"nativeSrc": "11469:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11469:47:5"
															},
															"nativeSrc": "11469:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11469:47:5"
														},
														{
															"nativeSrc": "11525:139:5",
															"nodeType": "YulAssignment",
															"src": "11525:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11659:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11659:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11533:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11533:124:5"
																},
																"nativeSrc": "11533:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11533:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11525:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11525:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11252:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11403:9:5",
														"nodeType": "YulTypedName",
														"src": "11403:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11418:4:5",
														"nodeType": "YulTypedName",
														"src": "11418:4:5",
														"type": ""
													}
												],
												"src": "11252:419:5"
											},
											{
												"body": {
													"nativeSrc": "11783:64:5",
													"nodeType": "YulBlock",
													"src": "11783:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11805:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11805:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11813:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11813:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11801:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11801:3:5"
																		},
																		"nativeSrc": "11801:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11801:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11817:22:5",
																		"nodeType": "YulLiteral",
																		"src": "11817:22:5",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11794:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11794:6:5"
																},
																"nativeSrc": "11794:46:5",
																"nodeType": "YulFunctionCall",
																"src": "11794:46:5"
															},
															"nativeSrc": "11794:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "11794:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
												"nativeSrc": "11677:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11775:6:5",
														"nodeType": "YulTypedName",
														"src": "11775:6:5",
														"type": ""
													}
												],
												"src": "11677:170:5"
											},
											{
												"body": {
													"nativeSrc": "11999:220:5",
													"nodeType": "YulBlock",
													"src": "11999:220:5",
													"statements": [
														{
															"nativeSrc": "12009:74:5",
															"nodeType": "YulAssignment",
															"src": "12009:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12075:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12075:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12080:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12080:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12016:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "12016:58:5"
																},
																"nativeSrc": "12016:67:5",
																"nodeType": "YulFunctionCall",
																"src": "12016:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12009:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12009:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12181:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12181:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"nativeSrc": "12092:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "12092:88:5"
																},
																"nativeSrc": "12092:93:5",
																"nodeType": "YulFunctionCall",
																"src": "12092:93:5"
															},
															"nativeSrc": "12092:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "12092:93:5"
														},
														{
															"nativeSrc": "12194:19:5",
															"nodeType": "YulAssignment",
															"src": "12194:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12205:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12205:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12210:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12210:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12201:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12201:3:5"
																},
																"nativeSrc": "12201:12:5",
																"nodeType": "YulFunctionCall",
																"src": "12201:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12194:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12194:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11853:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11987:3:5",
														"nodeType": "YulTypedName",
														"src": "11987:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11995:3:5",
														"nodeType": "YulTypedName",
														"src": "11995:3:5",
														"type": ""
													}
												],
												"src": "11853:366:5"
											},
											{
												"body": {
													"nativeSrc": "12396:248:5",
													"nodeType": "YulBlock",
													"src": "12396:248:5",
													"statements": [
														{
															"nativeSrc": "12406:26:5",
															"nodeType": "YulAssignment",
															"src": "12406:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12418:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12418:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12429:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12429:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12414:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12414:3:5"
																},
																"nativeSrc": "12414:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12414:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12406:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12406:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12453:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12453:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12464:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12464:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12449:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12449:3:5"
																		},
																		"nativeSrc": "12449:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12449:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12472:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "12472:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12478:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12478:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12468:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12468:3:5"
																		},
																		"nativeSrc": "12468:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12468:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12442:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12442:6:5"
																},
																"nativeSrc": "12442:47:5",
																"nodeType": "YulFunctionCall",
																"src": "12442:47:5"
															},
															"nativeSrc": "12442:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "12442:47:5"
														},
														{
															"nativeSrc": "12498:139:5",
															"nodeType": "YulAssignment",
															"src": "12498:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12632:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "12632:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12506:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "12506:124:5"
																},
																"nativeSrc": "12506:131:5",
																"nodeType": "YulFunctionCall",
																"src": "12506:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12498:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12498:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12225:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12376:9:5",
														"nodeType": "YulTypedName",
														"src": "12376:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12391:4:5",
														"nodeType": "YulTypedName",
														"src": "12391:4:5",
														"type": ""
													}
												],
												"src": "12225:419:5"
											},
											{
												"body": {
													"nativeSrc": "12776:206:5",
													"nodeType": "YulBlock",
													"src": "12776:206:5",
													"statements": [
														{
															"nativeSrc": "12786:26:5",
															"nodeType": "YulAssignment",
															"src": "12786:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12798:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12798:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12809:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12809:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12794:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12794:3:5"
																},
																"nativeSrc": "12794:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12794:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12786:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12786:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12866:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12866:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12879:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12879:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12890:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12890:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12875:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:5"
																		},
																		"nativeSrc": "12875:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12875:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12822:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12822:43:5"
																},
																"nativeSrc": "12822:71:5",
																"nodeType": "YulFunctionCall",
																"src": "12822:71:5"
															},
															"nativeSrc": "12822:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "12822:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12947:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12947:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12960:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12960:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12971:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12971:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12956:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12956:3:5"
																		},
																		"nativeSrc": "12956:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12956:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12903:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12903:43:5"
																},
																"nativeSrc": "12903:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12903:72:5"
															},
															"nativeSrc": "12903:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12903:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12650:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12740:9:5",
														"nodeType": "YulTypedName",
														"src": "12740:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12752:6:5",
														"nodeType": "YulTypedName",
														"src": "12752:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12760:6:5",
														"nodeType": "YulTypedName",
														"src": "12760:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12771:4:5",
														"nodeType": "YulTypedName",
														"src": "12771:4:5",
														"type": ""
													}
												],
												"src": "12650:332:5"
											},
											{
												"body": {
													"nativeSrc": "13142:288:5",
													"nodeType": "YulBlock",
													"src": "13142:288:5",
													"statements": [
														{
															"nativeSrc": "13152:26:5",
															"nodeType": "YulAssignment",
															"src": "13152:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13164:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13164:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13175:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13175:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13160:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13160:3:5"
																},
																"nativeSrc": "13160:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13160:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13152:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13152:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13232:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13232:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13245:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13245:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13256:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13256:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13241:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13241:3:5"
																		},
																		"nativeSrc": "13241:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13241:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13188:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "13188:43:5"
																},
																"nativeSrc": "13188:71:5",
																"nodeType": "YulFunctionCall",
																"src": "13188:71:5"
															},
															"nativeSrc": "13188:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "13188:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13313:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13313:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13326:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13326:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13337:2:5",
																				"nodeType": "YulLiteral",
																				"src": "13337:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13322:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:5"
																		},
																		"nativeSrc": "13322:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13322:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13269:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "13269:43:5"
																},
																"nativeSrc": "13269:72:5",
																"nodeType": "YulFunctionCall",
																"src": "13269:72:5"
															},
															"nativeSrc": "13269:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "13269:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13395:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13395:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13408:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13408:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13419:2:5",
																				"nodeType": "YulLiteral",
																				"src": "13419:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13404:3:5"
																		},
																		"nativeSrc": "13404:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13404:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13351:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "13351:43:5"
																},
																"nativeSrc": "13351:72:5",
																"nodeType": "YulFunctionCall",
																"src": "13351:72:5"
															},
															"nativeSrc": "13351:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "13351:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12988:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13098:9:5",
														"nodeType": "YulTypedName",
														"src": "13098:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13110:6:5",
														"nodeType": "YulTypedName",
														"src": "13110:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13118:6:5",
														"nodeType": "YulTypedName",
														"src": "13118:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13126:6:5",
														"nodeType": "YulTypedName",
														"src": "13126:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13137:4:5",
														"nodeType": "YulTypedName",
														"src": "13137:4:5",
														"type": ""
													}
												],
												"src": "12988:442:5"
											},
											{
												"body": {
													"nativeSrc": "13478:48:5",
													"nodeType": "YulBlock",
													"src": "13478:48:5",
													"statements": [
														{
															"nativeSrc": "13488:32:5",
															"nodeType": "YulAssignment",
															"src": "13488:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13513:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "13513:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "13506:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "13506:6:5"
																		},
																		"nativeSrc": "13506:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13506:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13499:6:5"
																},
																"nativeSrc": "13499:21:5",
																"nodeType": "YulFunctionCall",
																"src": "13499:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13488:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "13488:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "13436:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13460:5:5",
														"nodeType": "YulTypedName",
														"src": "13460:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13470:7:5",
														"nodeType": "YulTypedName",
														"src": "13470:7:5",
														"type": ""
													}
												],
												"src": "13436:90:5"
											},
											{
												"body": {
													"nativeSrc": "13572:76:5",
													"nodeType": "YulBlock",
													"src": "13572:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "13626:16:5",
																"nodeType": "YulBlock",
																"src": "13626:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13635:1:5",
																					"nodeType": "YulLiteral",
																					"src": "13635:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13638:1:5",
																					"nodeType": "YulLiteral",
																					"src": "13638:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13628:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13628:6:5"
																			},
																			"nativeSrc": "13628:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13628:12:5"
																		},
																		"nativeSrc": "13628:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "13628:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13595:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "13595:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13617:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "13617:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13602:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "13602:14:5"
																				},
																				"nativeSrc": "13602:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13602:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13592:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "13592:2:5"
																		},
																		"nativeSrc": "13592:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13592:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13585:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:5"
																},
																"nativeSrc": "13585:40:5",
																"nodeType": "YulFunctionCall",
																"src": "13585:40:5"
															},
															"nativeSrc": "13582:60:5",
															"nodeType": "YulIf",
															"src": "13582:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13532:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13565:5:5",
														"nodeType": "YulTypedName",
														"src": "13565:5:5",
														"type": ""
													}
												],
												"src": "13532:116:5"
											},
											{
												"body": {
													"nativeSrc": "13714:77:5",
													"nodeType": "YulBlock",
													"src": "13714:77:5",
													"statements": [
														{
															"nativeSrc": "13724:22:5",
															"nodeType": "YulAssignment",
															"src": "13724:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13739:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13739:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13733:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13733:5:5"
																},
																"nativeSrc": "13733:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13733:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13724:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13724:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13779:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13779:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13755:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "13755:23:5"
																},
																"nativeSrc": "13755:30:5",
																"nodeType": "YulFunctionCall",
																"src": "13755:30:5"
															},
															"nativeSrc": "13755:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "13755:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13654:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13692:6:5",
														"nodeType": "YulTypedName",
														"src": "13692:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13700:3:5",
														"nodeType": "YulTypedName",
														"src": "13700:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13708:5:5",
														"nodeType": "YulTypedName",
														"src": "13708:5:5",
														"type": ""
													}
												],
												"src": "13654:137:5"
											},
											{
												"body": {
													"nativeSrc": "13871:271:5",
													"nodeType": "YulBlock",
													"src": "13871:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "13917:83:5",
																"nodeType": "YulBlock",
																"src": "13917:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13919:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "13919:77:5"
																			},
																			"nativeSrc": "13919:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13919:79:5"
																		},
																		"nativeSrc": "13919:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "13919:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13892:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "13892:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13901:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13901:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13888:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13888:3:5"
																		},
																		"nativeSrc": "13888:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13888:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13913:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13913:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13884:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13884:3:5"
																},
																"nativeSrc": "13884:32:5",
																"nodeType": "YulFunctionCall",
																"src": "13884:32:5"
															},
															"nativeSrc": "13881:119:5",
															"nodeType": "YulIf",
															"src": "13881:119:5"
														},
														{
															"nativeSrc": "14010:125:5",
															"nodeType": "YulBlock",
															"src": "14010:125:5",
															"statements": [
																{
																	"nativeSrc": "14025:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14025:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14039:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14029:6:5",
																			"nodeType": "YulTypedName",
																			"src": "14029:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14054:71:5",
																	"nodeType": "YulAssignment",
																	"src": "14054:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14097:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "14097:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14108:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "14108:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14093:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14093:3:5"
																				},
																				"nativeSrc": "14093:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14093:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14117:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "14117:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14064:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "14064:28:5"
																		},
																		"nativeSrc": "14064:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14064:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14054:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "14054:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13797:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13841:9:5",
														"nodeType": "YulTypedName",
														"src": "13841:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13852:7:5",
														"nodeType": "YulTypedName",
														"src": "13852:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13864:6:5",
														"nodeType": "YulTypedName",
														"src": "13864:6:5",
														"type": ""
													}
												],
												"src": "13797:345:5"
											},
											{
												"body": {
													"nativeSrc": "14206:40:5",
													"nodeType": "YulBlock",
													"src": "14206:40:5",
													"statements": [
														{
															"nativeSrc": "14217:22:5",
															"nodeType": "YulAssignment",
															"src": "14217:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14233:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "14233:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14227:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "14227:5:5"
																},
																"nativeSrc": "14227:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14227:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14217:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14217:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14148:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14189:5:5",
														"nodeType": "YulTypedName",
														"src": "14189:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14199:6:5",
														"nodeType": "YulTypedName",
														"src": "14199:6:5",
														"type": ""
													}
												],
												"src": "14148:98:5"
											},
											{
												"body": {
													"nativeSrc": "14365:34:5",
													"nodeType": "YulBlock",
													"src": "14365:34:5",
													"statements": [
														{
															"nativeSrc": "14375:18:5",
															"nodeType": "YulAssignment",
															"src": "14375:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "14390:3:5",
																"nodeType": "YulIdentifier",
																"src": "14390:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14375:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "14375:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14252:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14337:3:5",
														"nodeType": "YulTypedName",
														"src": "14337:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14342:6:5",
														"nodeType": "YulTypedName",
														"src": "14342:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14353:11:5",
														"nodeType": "YulTypedName",
														"src": "14353:11:5",
														"type": ""
													}
												],
												"src": "14252:147:5"
											},
											{
												"body": {
													"nativeSrc": "14467:184:5",
													"nodeType": "YulBlock",
													"src": "14467:184:5",
													"statements": [
														{
															"nativeSrc": "14477:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "14477:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "14486:1:5",
																"nodeType": "YulLiteral",
																"src": "14486:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "14481:1:5",
																	"nodeType": "YulTypedName",
																	"src": "14481:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14546:63:5",
																"nodeType": "YulBlock",
																"src": "14546:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "14571:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "14571:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "14576:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "14576:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "14567:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14567:3:5"
																					},
																					"nativeSrc": "14567:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "14567:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "14590:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "14590:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "14595:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "14595:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14586:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "14586:3:5"
																							},
																							"nativeSrc": "14586:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "14586:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "14580:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14580:5:5"
																					},
																					"nativeSrc": "14580:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "14580:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14560:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14560:6:5"
																			},
																			"nativeSrc": "14560:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14560:39:5"
																		},
																		"nativeSrc": "14560:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "14560:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14507:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "14507:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14510:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14510:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14504:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "14504:2:5"
																},
																"nativeSrc": "14504:13:5",
																"nodeType": "YulFunctionCall",
																"src": "14504:13:5"
															},
															"nativeSrc": "14496:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14518:19:5",
																"nodeType": "YulBlock",
																"src": "14518:19:5",
																"statements": [
																	{
																		"nativeSrc": "14520:15:5",
																		"nodeType": "YulAssignment",
																		"src": "14520:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14529:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "14529:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14532:2:5",
																					"nodeType": "YulLiteral",
																					"src": "14532:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14525:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14525:3:5"
																			},
																			"nativeSrc": "14525:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14525:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14520:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "14520:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14500:3:5",
																"nodeType": "YulBlock",
																"src": "14500:3:5",
																"statements": []
															},
															"src": "14496:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "14629:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14629:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14634:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14634:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14625:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14625:3:5"
																		},
																		"nativeSrc": "14625:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14625:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14643:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14643:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14618:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14618:6:5"
																},
																"nativeSrc": "14618:27:5",
																"nodeType": "YulFunctionCall",
																"src": "14618:27:5"
															},
															"nativeSrc": "14618:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "14618:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "14405:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "14449:3:5",
														"nodeType": "YulTypedName",
														"src": "14449:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "14454:3:5",
														"nodeType": "YulTypedName",
														"src": "14454:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14459:6:5",
														"nodeType": "YulTypedName",
														"src": "14459:6:5",
														"type": ""
													}
												],
												"src": "14405:246:5"
											},
											{
												"body": {
													"nativeSrc": "14765:278:5",
													"nodeType": "YulBlock",
													"src": "14765:278:5",
													"statements": [
														{
															"nativeSrc": "14775:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "14775:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14821:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "14821:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "14789:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "14789:31:5"
																},
																"nativeSrc": "14789:38:5",
																"nodeType": "YulFunctionCall",
																"src": "14789:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14779:6:5",
																	"nodeType": "YulTypedName",
																	"src": "14779:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14836:95:5",
															"nodeType": "YulAssignment",
															"src": "14836:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14919:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14919:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14924:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14924:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14843:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "14843:75:5"
																},
																"nativeSrc": "14843:88:5",
																"nodeType": "YulFunctionCall",
																"src": "14843:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14836:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14836:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14979:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "14979:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14986:4:5",
																				"nodeType": "YulLiteral",
																				"src": "14986:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14975:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14975:3:5"
																		},
																		"nativeSrc": "14975:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14975:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14993:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14993:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14998:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14998:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14940:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "14940:34:5"
																},
																"nativeSrc": "14940:65:5",
																"nodeType": "YulFunctionCall",
																"src": "14940:65:5"
															},
															"nativeSrc": "14940:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "14940:65:5"
														},
														{
															"nativeSrc": "15014:23:5",
															"nodeType": "YulAssignment",
															"src": "15014:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15025:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15025:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15030:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15030:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15021:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15021:3:5"
																},
																"nativeSrc": "15021:16:5",
																"nodeType": "YulFunctionCall",
																"src": "15021:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15014:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15014:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14657:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14746:5:5",
														"nodeType": "YulTypedName",
														"src": "14746:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14753:3:5",
														"nodeType": "YulTypedName",
														"src": "14753:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14761:3:5",
														"nodeType": "YulTypedName",
														"src": "14761:3:5",
														"type": ""
													}
												],
												"src": "14657:386:5"
											},
											{
												"body": {
													"nativeSrc": "15183:137:5",
													"nodeType": "YulBlock",
													"src": "15183:137:5",
													"statements": [
														{
															"nativeSrc": "15194:100:5",
															"nodeType": "YulAssignment",
															"src": "15194:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15281:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "15281:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15290:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "15290:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15201:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "15201:79:5"
																},
																"nativeSrc": "15201:93:5",
																"nodeType": "YulFunctionCall",
																"src": "15201:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15194:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15194:3:5"
																}
															]
														},
														{
															"nativeSrc": "15304:10:5",
															"nodeType": "YulAssignment",
															"src": "15304:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "15311:3:5",
																"nodeType": "YulIdentifier",
																"src": "15311:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15304:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15304:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15049:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15162:3:5",
														"nodeType": "YulTypedName",
														"src": "15162:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15168:6:5",
														"nodeType": "YulTypedName",
														"src": "15168:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15179:3:5",
														"nodeType": "YulTypedName",
														"src": "15179:3:5",
														"type": ""
													}
												],
												"src": "15049:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"you're not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Tokens Staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw before 1 hour\")\n\n    }\n\n    function abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Enough Money to give reward\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't stake again without wi\")\n\n        mstore(add(memPtr, 32), \"thdrawing your previous money fi\")\n\n        mstore(add(memPtr, 64), \"rst\")\n\n    }\n\n    function abi_encode_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"667": [
									{
										"length": 32,
										"start": 743
									},
									{
										"length": 32,
										"start": 979
									},
									{
										"length": 32,
										"start": 1537
									},
									{
										"length": 32,
										"start": 1761
									},
									{
										"length": 32,
										"start": 2078
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063337b8b96146100595780633ccfd60b146100755780639168ae721461007f578063a694fc3a146100b1578063fc0c546a146100cd575b5f80fd5b610073600480360381019061006e9190610bbf565b6100eb565b005b61007d610187565b005b61009960048036038101906100949190610c44565b61054e565b6040516100a893929190610c87565b60405180910390f35b6100cb60048036038101906100c69190610ce6565b610573565b005b6100d561081c565b6040516100e29190610d6c565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017a576040517ff7251ccf00000000000000000000000000000000000000000000000000000000815260040161017190610ddf565b60405180910390fd5b8060ff1660028190555050565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f015111610233576040517f7979dc8700000000000000000000000000000000000000000000000000000000815260040161022a90610e47565b60405180910390fd5b806020015142101561027a576040517f30f1c21600000000000000000000000000000000000000000000000000000000815260040161027190610eaf565b60405180910390fd5b5f610e1082602001514261028e9190610efa565b6102989190610f2d565b90505f610e10826102a99190610f8d565b90505f606482855f01516102bd9190610fbd565b6002546102ca9190610fbd565b6102d49190610f8d565b905080845f01516102e59190610f2d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033e919061100d565b602060405180830381865afa158015610359573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037d919061103a565b10156103be576040517f7979dc870000000000000000000000000000000000000000000000000000000081526004016103b5906110af565b60405180910390fd5b6104173382865f01516103d19190610f2d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108409092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364855f01518361045e9190610f2d565b60405161046b91906110cd565b60405180910390a25f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc98260405161054091906110cd565b60405180910390a250505050565b5f602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411156105f4576040517f0dd028d80000000000000000000000000000000000000000000000000000000081526004016105eb9061117c565b60405180910390fd5b5f811115806106995750807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610658919061100d565b602060405180830381865afa158015610673573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610697919061103a565b105b156106d9576040517f7979dc870000000000000000000000000000000000000000000000000000000081526004016106d0906111e4565b60405180910390fd5b6107263330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108bf909392919063ffffffff16565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107739190610f2d565b92505081905550610e10426107889190610f2d565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161081191906110cd565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108ba838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610873929190611202565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610941565b505050565b61093b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016108f493929190611229565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610941565b50505050565b5f61096b828473ffffffffffffffffffffffffffffffffffffffff166109d690919063ffffffff16565b90505f81511415801561098f57508080602001905181019061098d9190611293565b155b156109d157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016109c8919061100d565b60405180910390fd5b505050565b60606109e383835f6109eb565b905092915050565b606081471015610a3257306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610a29919061100d565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610a5a919061132a565b5f6040518083038185875af1925050503d805f8114610a94576040519150601f19603f3d011682016040523d82523d5f602084013e610a99565b606091505b5091509150610aa9868383610ab4565b925050509392505050565b606082610ac957610ac482610b41565b610b39565b5f8251148015610aef57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b3157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610b28919061100d565b60405180910390fd5b819050610b3a565b5b9392505050565b5f81511115610b535780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f60ff82169050919050565b610b9e81610b89565b8114610ba8575f80fd5b50565b5f81359050610bb981610b95565b92915050565b5f60208284031215610bd457610bd3610b85565b5b5f610be184828501610bab565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1382610bea565b9050919050565b610c2381610c09565b8114610c2d575f80fd5b50565b5f81359050610c3e81610c1a565b92915050565b5f60208284031215610c5957610c58610b85565b5b5f610c6684828501610c30565b91505092915050565b5f819050919050565b610c8181610c6f565b82525050565b5f606082019050610c9a5f830186610c78565b610ca76020830185610c78565b610cb46040830184610c78565b949350505050565b610cc581610c6f565b8114610ccf575f80fd5b50565b5f81359050610ce081610cbc565b92915050565b5f60208284031215610cfb57610cfa610b85565b5b5f610d0884828501610cd2565b91505092915050565b5f819050919050565b5f610d34610d2f610d2a84610bea565b610d11565b610bea565b9050919050565b5f610d4582610d1a565b9050919050565b5f610d5682610d3b565b9050919050565b610d6681610d4c565b82525050565b5f602082019050610d7f5f830184610d5d565b92915050565b5f82825260208201905092915050565b7f796f75277265206e6f7420746865206f776e65720000000000000000000000005f82015250565b5f610dc9601483610d85565b9150610dd482610d95565b602082019050919050565b5f6020820190508181035f830152610df681610dbd565b9050919050565b7f4e6f20546f6b656e73205374616b6564000000000000000000000000000000005f82015250565b5f610e31601083610d85565b9150610e3c82610dfd565b602082019050919050565b5f6020820190508181035f830152610e5e81610e25565b9050919050565b7f596f752063616e2774207769746864726177206265666f7265203120686f75725f82015250565b5f610e99602083610d85565b9150610ea482610e65565b602082019050919050565b5f6020820190508181035f830152610ec681610e8d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f0482610c6f565b9150610f0f83610c6f565b9250828203905081811115610f2757610f26610ecd565b5b92915050565b5f610f3782610c6f565b9150610f4283610c6f565b9250828201905080821115610f5a57610f59610ecd565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f9782610c6f565b9150610fa283610c6f565b925082610fb257610fb1610f60565b5b828204905092915050565b5f610fc782610c6f565b9150610fd283610c6f565b9250828202610fe081610c6f565b91508282048414831517610ff757610ff6610ecd565b5b5092915050565b61100781610c09565b82525050565b5f6020820190506110205f830184610ffe565b92915050565b5f8151905061103481610cbc565b92915050565b5f6020828403121561104f5761104e610b85565b5b5f61105c84828501611026565b91505092915050565b7f4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264005f82015250565b5f611099601f83610d85565b91506110a482611065565b602082019050919050565b5f6020820190508181035f8301526110c68161108d565b9050919050565b5f6020820190506110e05f830184610c78565b92915050565b7f596f752063616e2774207374616b6520616761696e20776974686f75742077695f8201527f746864726177696e6720796f75722070726576696f7573206d6f6e657920666960208201527f7273740000000000000000000000000000000000000000000000000000000000604082015250565b5f611166604383610d85565b9150611171826110e6565b606082019050919050565b5f6020820190508181035f8301526111938161115a565b9050919050565b7f496e73756666696369656e742042616c616e63650000000000000000000000005f82015250565b5f6111ce601483610d85565b91506111d98261119a565b602082019050919050565b5f6020820190508181035f8301526111fb816111c2565b9050919050565b5f6040820190506112155f830185610ffe565b6112226020830184610c78565b9392505050565b5f60608201905061123c5f830186610ffe565b6112496020830185610ffe565b6112566040830184610c78565b949350505050565b5f8115159050919050565b6112728161125e565b811461127c575f80fd5b50565b5f8151905061128d81611269565b92915050565b5f602082840312156112a8576112a7610b85565b5b5f6112b58482850161127f565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b838110156112ef5780820151818401526020810190506112d4565b5f8484015250505050565b5f611304826112be565b61130e81856112c8565b935061131e8185602086016112d2565b80840191505092915050565b5f61133582846112fa565b91508190509291505056fea2646970667358221220cb55e4bc70dcc5ff5c8d9e8f45c826f3bb1fef74cc7990e583cf53c0aac3bf0264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x337B8B96 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF7251CCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171 SWAP1 PUSH2 0xDDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD GT PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH32 0x30F1C21600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP1 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE10 DUP3 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x28E SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE10 DUP3 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 DUP6 PUSH0 ADD MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x359 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x417 CALLER DUP3 DUP7 PUSH0 ADD MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x840 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP6 PUSH0 ADD MLOAD DUP4 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD028D800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EB SWAP1 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO DUP1 PUSH2 0x699 JUMPI POP DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D0 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x726 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8BF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE10 TIMESTAMP PUSH2 0x788 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8BA DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x873 SWAP3 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x93B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x941 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x96B DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x1293 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9D1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9E3 DUP4 DUP4 PUSH0 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xA32 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xAA9 DUP7 DUP4 DUP4 PUSH2 0xAB4 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xAC9 JUMPI PUSH2 0xAC4 DUP3 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xAEF JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB31 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xB3A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xB53 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB89 JUMP JUMPDEST DUP2 EQ PUSH2 0xBA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB9 DUP2 PUSH2 0xB95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE1 DUP5 DUP3 DUP6 ADD PUSH2 0xBAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC13 DUP3 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP2 EQ PUSH2 0xC2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC3E DUP2 PUSH2 0xC1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC58 PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC66 DUP5 DUP3 DUP6 ADD PUSH2 0xC30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC81 DUP2 PUSH2 0xC6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC9A PUSH0 DUP4 ADD DUP7 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xCA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xCB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0xC6F JUMP JUMPDEST DUP2 EQ PUSH2 0xCCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE0 DUP2 PUSH2 0xCBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD08 DUP5 DUP3 DUP6 ADD PUSH2 0xCD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD34 PUSH2 0xD2F PUSH2 0xD2A DUP5 PUSH2 0xBEA JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD45 DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD56 DUP3 PUSH2 0xD3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xD4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH0 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F75277265206E6F7420746865206F776E6572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDC9 PUSH1 0x14 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0xDD4 DUP3 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF6 DUP2 PUSH2 0xDBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20546F6B656E73205374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE31 PUSH1 0x10 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3C DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE5E DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E2774207769746864726177206265666F7265203120686F7572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE99 PUSH1 0x20 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA4 DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEC6 DUP2 PUSH2 0xE8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF04 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xF0F DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF27 JUMPI PUSH2 0xF26 PUSH2 0xECD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF37 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xF42 DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF5A JUMPI PUSH2 0xF59 PUSH2 0xECD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF97 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xFA2 DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xF60 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFC7 DUP3 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP PUSH2 0xFD2 DUP4 PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFE0 DUP2 PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xECD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0xC09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1020 PUSH0 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0xCBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105C DUP5 DUP3 DUP6 ADD PUSH2 0x1026 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F756768204D6F6E657920746F20676976652072657761726400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1099 PUSH1 0x1F DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A4 DUP3 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C6 DUP2 PUSH2 0x108D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH0 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E2774207374616B6520616761696E20776974686F7574207769 PUSH0 DUP3 ADD MSTORE PUSH32 0x746864726177696E6720796F75722070726576696F7573206D6F6E6579206669 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7273740000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1166 PUSH1 0x43 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0x1171 DUP3 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1193 DUP2 PUSH2 0x115A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CE PUSH1 0x14 DUP4 PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D9 DUP3 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FB DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1215 PUSH0 DUP4 ADD DUP6 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x1222 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x123C PUSH0 DUP4 ADD DUP7 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x1249 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x1256 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC78 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1272 DUP2 PUSH2 0x125E JUMP JUMPDEST DUP2 EQ PUSH2 0x127C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x128D DUP2 PUSH2 0x1269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH2 0x12A7 PUSH2 0xB85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12B5 DUP5 DUP3 DUP6 ADD PUSH2 0x127F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12EF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12D4 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1304 DUP3 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x130E DUP2 DUP6 PUSH2 0x12C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x131E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12D2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1335 DUP3 DUP5 PUSH2 0x12FA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SSTORE 0xE4 0xBC PUSH17 0xDCC5FF5C8D9E8F45C826F3BB1FEF74CC79 SWAP1 0xE5 DUP4 0xCF MSTORE8 0xC0 0xAA 0xC3 0xBF MUL PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "265:3794:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2555:1135;;;:::i;:::-;;879:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1635:717;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;329:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3869:187;3955:5;;;;;;;;;;;3941:19;;:10;:19;;;3938:76;;3982:32;;;;;;;;;;:::i;:::-;;;;;;;;3938:76;4043:5;4027:21;;:13;:21;;;;3869:187;:::o;2555:1135::-;2599:21;2623:7;:19;2631:10;2623:19;;;;;;;;;;;;;;;2599:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2671:1;2656:4;:11;;;:16;2653:103;;2705:39;;;;;;;;;;:::i;:::-;;;;;;;;2653:103;2787:4;:14;;;2769:15;:32;2766:109;;;2823:52;;;;;;;;;;:::i;:::-;;;;;;;;2766:109;2888:14;2940:7;2923:4;:14;;;2905:15;:32;;;;:::i;:::-;:42;;;;:::i;:::-;2888:59;;2958:15;2988:7;2976:9;:19;;;;:::i;:::-;2958:37;;3006:11;3065:3;3051:10;3037:4;:11;;;:24;;;;:::i;:::-;3020:13;;:42;;;;:::i;:::-;:48;;;;:::i;:::-;3006:62;;3268:6;3254:4;:11;;;:20;;;;:::i;:::-;3220:5;:15;;;3244:4;3220:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;3217:134;;;3297:54;;;;;;;;;;:::i;:::-;;;;;;;;3217:134;3420:52;3439:10;3465:6;3451:4;:11;;;:20;;;;:::i;:::-;3420:5;:18;;;;:52;;;;;:::i;:::-;3499:10;3490:42;;;3520:4;:11;;;3511:6;:20;;;;:::i;:::-;3490:42;;;;;;:::i;:::-;;;;;;;;3593:1;3564:7;:19;3572:10;3564:19;;;;;;;;;;;;;;;:26;;:30;;;;3637:1;3605:7;:19;3613:10;3605:19;;;;;;;;;;;;;;;:29;;:33;;;;3663:10;3656:26;;;3675:6;3656:26;;;;;;:::i;:::-;;;;;;;;2588:1102;;;;2555:1135::o;879:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1635:717::-;1722:1;1693:7;:19;1701:10;1693:19;;;;;;;;;;;;;;;:26;;;:30;1690:136;;;1745:81;;;;;;;;;;:::i;:::-;;;;;;;;1690:136;1853:1;1842:7;:12;;:53;;;;1888:7;1858:5;:15;;;1874:10;1858:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;1842:53;1839:121;;;1917:43;;;;;;;;;;:::i;:::-;;;;;;;;1839:121;2123:58;2146:10;2166:4;2173:7;2123:5;:22;;;;:58;;;;;;:::i;:::-;2224:7;2194;:19;2202:10;2194:19;;;;;;;;;;;;;;;:26;;;:37;;;;;;;:::i;:::-;;;;;;;;2292:7;2274:15;:25;;;;:::i;:::-;2242:7;:19;2250:10;2242:19;;;;;;;;;;;;;;;:29;;:57;;;;2324:10;2317:27;;;2336:7;2317:27;;;;;;:::i;:::-;;;;;;;;1635:717;:::o;329:29::-;;;:::o;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1702:188::-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:135::-;594:5;632:6;619:20;610:29;;648:31;673:5;648:31;:::i;:::-;550:135;;;;:::o;691:325::-;748:6;797:2;785:9;776:7;772:23;768:32;765:119;;;803:79;;:::i;:::-;765:119;923:1;948:51;991:7;982:6;971:9;967:22;948:51;:::i;:::-;938:61;;894:115;691:325;;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1154:96::-;1191:7;1220:24;1238:5;1220:24;:::i;:::-;1209:35;;1154:96;;;:::o;1256:122::-;1329:24;1347:5;1329:24;:::i;:::-;1322:5;1319:35;1309:63;;1368:1;1365;1358:12;1309:63;1256:122;:::o;1384:139::-;1430:5;1468:6;1455:20;1446:29;;1484:33;1511:5;1484:33;:::i;:::-;1384:139;;;;:::o;1529:329::-;1588:6;1637:2;1625:9;1616:7;1612:23;1608:32;1605:119;;;1643:79;;:::i;:::-;1605:119;1763:1;1788:53;1833:7;1824:6;1813:9;1809:22;1788:53;:::i;:::-;1778:63;;1734:117;1529:329;;;;:::o;1864:77::-;1901:7;1930:5;1919:16;;1864:77;;;:::o;1947:118::-;2034:24;2052:5;2034:24;:::i;:::-;2029:3;2022:37;1947:118;;:::o;2071:442::-;2220:4;2258:2;2247:9;2243:18;2235:26;;2271:71;2339:1;2328:9;2324:17;2315:6;2271:71;:::i;:::-;2352:72;2420:2;2409:9;2405:18;2396:6;2352:72;:::i;:::-;2434;2502:2;2491:9;2487:18;2478:6;2434:72;:::i;:::-;2071:442;;;;;;:::o;2519:122::-;2592:24;2610:5;2592:24;:::i;:::-;2585:5;2582:35;2572:63;;2631:1;2628;2621:12;2572:63;2519:122;:::o;2647:139::-;2693:5;2731:6;2718:20;2709:29;;2747:33;2774:5;2747:33;:::i;:::-;2647:139;;;;:::o;2792:329::-;2851:6;2900:2;2888:9;2879:7;2875:23;2871:32;2868:119;;;2906:79;;:::i;:::-;2868:119;3026:1;3051:53;3096:7;3087:6;3076:9;3072:22;3051:53;:::i;:::-;3041:63;;2997:117;2792:329;;;;:::o;3127:60::-;3155:3;3176:5;3169:12;;3127:60;;;:::o;3193:142::-;3243:9;3276:53;3294:34;3303:24;3321:5;3303:24;:::i;:::-;3294:34;:::i;:::-;3276:53;:::i;:::-;3263:66;;3193:142;;;:::o;3341:126::-;3391:9;3424:37;3455:5;3424:37;:::i;:::-;3411:50;;3341:126;;;:::o;3473:139::-;3536:9;3569:37;3600:5;3569:37;:::i;:::-;3556:50;;3473:139;;;:::o;3618:157::-;3718:50;3762:5;3718:50;:::i;:::-;3713:3;3706:63;3618:157;;:::o;3781:248::-;3887:4;3925:2;3914:9;3910:18;3902:26;;3938:84;4019:1;4008:9;4004:17;3995:6;3938:84;:::i;:::-;3781:248;;;;:::o;4035:169::-;4119:11;4153:6;4148:3;4141:19;4193:4;4188:3;4184:14;4169:29;;4035:169;;;;:::o;4210:170::-;4350:22;4346:1;4338:6;4334:14;4327:46;4210:170;:::o;4386:366::-;4528:3;4549:67;4613:2;4608:3;4549:67;:::i;:::-;4542:74;;4625:93;4714:3;4625:93;:::i;:::-;4743:2;4738:3;4734:12;4727:19;;4386:366;;;:::o;4758:419::-;4924:4;4962:2;4951:9;4947:18;4939:26;;5011:9;5005:4;5001:20;4997:1;4986:9;4982:17;4975:47;5039:131;5165:4;5039:131;:::i;:::-;5031:139;;4758:419;;;:::o;5183:166::-;5323:18;5319:1;5311:6;5307:14;5300:42;5183:166;:::o;5355:366::-;5497:3;5518:67;5582:2;5577:3;5518:67;:::i;:::-;5511:74;;5594:93;5683:3;5594:93;:::i;:::-;5712:2;5707:3;5703:12;5696:19;;5355:366;;;:::o;5727:419::-;5893:4;5931:2;5920:9;5916:18;5908:26;;5980:9;5974:4;5970:20;5966:1;5955:9;5951:17;5944:47;6008:131;6134:4;6008:131;:::i;:::-;6000:139;;5727:419;;;:::o;6152:182::-;6292:34;6288:1;6280:6;6276:14;6269:58;6152:182;:::o;6340:366::-;6482:3;6503:67;6567:2;6562:3;6503:67;:::i;:::-;6496:74;;6579:93;6668:3;6579:93;:::i;:::-;6697:2;6692:3;6688:12;6681:19;;6340:366;;;:::o;6712:419::-;6878:4;6916:2;6905:9;6901:18;6893:26;;6965:9;6959:4;6955:20;6951:1;6940:9;6936:17;6929:47;6993:131;7119:4;6993:131;:::i;:::-;6985:139;;6712:419;;;:::o;7137:180::-;7185:77;7182:1;7175:88;7282:4;7279:1;7272:15;7306:4;7303:1;7296:15;7323:194;7363:4;7383:20;7401:1;7383:20;:::i;:::-;7378:25;;7417:20;7435:1;7417:20;:::i;:::-;7412:25;;7461:1;7458;7454:9;7446:17;;7485:1;7479:4;7476:11;7473:37;;;7490:18;;:::i;:::-;7473:37;7323:194;;;;:::o;7523:191::-;7563:3;7582:20;7600:1;7582:20;:::i;:::-;7577:25;;7616:20;7634:1;7616:20;:::i;:::-;7611:25;;7659:1;7656;7652:9;7645:16;;7680:3;7677:1;7674:10;7671:36;;;7687:18;;:::i;:::-;7671:36;7523:191;;;;:::o;7720:180::-;7768:77;7765:1;7758:88;7865:4;7862:1;7855:15;7889:4;7886:1;7879:15;7906:185;7946:1;7963:20;7981:1;7963:20;:::i;:::-;7958:25;;7997:20;8015:1;7997:20;:::i;:::-;7992:25;;8036:1;8026:35;;8041:18;;:::i;:::-;8026:35;8083:1;8080;8076:9;8071:14;;7906:185;;;;:::o;8097:410::-;8137:7;8160:20;8178:1;8160:20;:::i;:::-;8155:25;;8194:20;8212:1;8194:20;:::i;:::-;8189:25;;8249:1;8246;8242:9;8271:30;8289:11;8271:30;:::i;:::-;8260:41;;8450:1;8441:7;8437:15;8434:1;8431:22;8411:1;8404:9;8384:83;8361:139;;8480:18;;:::i;:::-;8361:139;8145:362;8097:410;;;;:::o;8513:118::-;8600:24;8618:5;8600:24;:::i;:::-;8595:3;8588:37;8513:118;;:::o;8637:222::-;8730:4;8768:2;8757:9;8753:18;8745:26;;8781:71;8849:1;8838:9;8834:17;8825:6;8781:71;:::i;:::-;8637:222;;;;:::o;8865:143::-;8922:5;8953:6;8947:13;8938:22;;8969:33;8996:5;8969:33;:::i;:::-;8865:143;;;;:::o;9014:351::-;9084:6;9133:2;9121:9;9112:7;9108:23;9104:32;9101:119;;;9139:79;;:::i;:::-;9101:119;9259:1;9284:64;9340:7;9331:6;9320:9;9316:22;9284:64;:::i;:::-;9274:74;;9230:128;9014:351;;;;:::o;9371:181::-;9511:33;9507:1;9499:6;9495:14;9488:57;9371:181;:::o;9558:366::-;9700:3;9721:67;9785:2;9780:3;9721:67;:::i;:::-;9714:74;;9797:93;9886:3;9797:93;:::i;:::-;9915:2;9910:3;9906:12;9899:19;;9558:366;;;:::o;9930:419::-;10096:4;10134:2;10123:9;10119:18;10111:26;;10183:9;10177:4;10173:20;10169:1;10158:9;10154:17;10147:47;10211:131;10337:4;10211:131;:::i;:::-;10203:139;;9930:419;;;:::o;10355:222::-;10448:4;10486:2;10475:9;10471:18;10463:26;;10499:71;10567:1;10556:9;10552:17;10543:6;10499:71;:::i;:::-;10355:222;;;;:::o;10583:291::-;10723:34;10719:1;10711:6;10707:14;10700:58;10792:34;10787:2;10779:6;10775:15;10768:59;10861:5;10856:2;10848:6;10844:15;10837:30;10583:291;:::o;10880:366::-;11022:3;11043:67;11107:2;11102:3;11043:67;:::i;:::-;11036:74;;11119:93;11208:3;11119:93;:::i;:::-;11237:2;11232:3;11228:12;11221:19;;10880:366;;;:::o;11252:419::-;11418:4;11456:2;11445:9;11441:18;11433:26;;11505:9;11499:4;11495:20;11491:1;11480:9;11476:17;11469:47;11533:131;11659:4;11533:131;:::i;:::-;11525:139;;11252:419;;;:::o;11677:170::-;11817:22;11813:1;11805:6;11801:14;11794:46;11677:170;:::o;11853:366::-;11995:3;12016:67;12080:2;12075:3;12016:67;:::i;:::-;12009:74;;12092:93;12181:3;12092:93;:::i;:::-;12210:2;12205:3;12201:12;12194:19;;11853:366;;;:::o;12225:419::-;12391:4;12429:2;12418:9;12414:18;12406:26;;12478:9;12472:4;12468:20;12464:1;12453:9;12449:17;12442:47;12506:131;12632:4;12506:131;:::i;:::-;12498:139;;12225:419;;;:::o;12650:332::-;12771:4;12809:2;12798:9;12794:18;12786:26;;12822:71;12890:1;12879:9;12875:17;12866:6;12822:71;:::i;:::-;12903:72;12971:2;12960:9;12956:18;12947:6;12903:72;:::i;:::-;12650:332;;;;;:::o;12988:442::-;13137:4;13175:2;13164:9;13160:18;13152:26;;13188:71;13256:1;13245:9;13241:17;13232:6;13188:71;:::i;:::-;13269:72;13337:2;13326:9;13322:18;13313:6;13269:72;:::i;:::-;13351;13419:2;13408:9;13404:18;13395:6;13351:72;:::i;:::-;12988:442;;;;;;:::o;13436:90::-;13470:7;13513:5;13506:13;13499:21;13488:32;;13436:90;;;:::o;13532:116::-;13602:21;13617:5;13602:21;:::i;:::-;13595:5;13592:32;13582:60;;13638:1;13635;13628:12;13582:60;13532:116;:::o;13654:137::-;13708:5;13739:6;13733:13;13724:22;;13755:30;13779:5;13755:30;:::i;:::-;13654:137;;;;:::o;13797:345::-;13864:6;13913:2;13901:9;13892:7;13888:23;13884:32;13881:119;;;13919:79;;:::i;:::-;13881:119;14039:1;14064:61;14117:7;14108:6;14097:9;14093:22;14064:61;:::i;:::-;14054:71;;14010:125;13797:345;;;;:::o;14148:98::-;14199:6;14233:5;14227:12;14217:22;;14148:98;;;:::o;14252:147::-;14353:11;14390:3;14375:18;;14252:147;;;;:::o;14405:246::-;14486:1;14496:113;14510:6;14507:1;14504:13;14496:113;;;14595:1;14590:3;14586:11;14580:18;14576:1;14571:3;14567:11;14560:39;14532:2;14529:1;14525:10;14520:15;;14496:113;;;14643:1;14634:6;14629:3;14625:16;14618:27;14467:184;14405:246;;;:::o;14657:386::-;14761:3;14789:38;14821:5;14789:38;:::i;:::-;14843:88;14924:6;14919:3;14843:88;:::i;:::-;14836:95;;14940:65;14998:6;14993:3;14986:4;14979:5;14975:16;14940:65;:::i;:::-;15030:6;15025:3;15021:16;15014:23;;14765:278;14657:386;;;;:::o;15049:271::-;15179:3;15201:93;15290:3;15281:6;15201:93;:::i;:::-;15194:100;;15311:3;15304:10;;15049:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "996400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeRebasingIndex(uint8)": "24674",
								"stake(uint256)": "infinite",
								"stakers(address)": "infinite",
								"token()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 976,
									"end": 977,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 952,
									"end": 977,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 952,
									"end": 977,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1103,
									"end": 1104,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1075,
									"end": 1104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1075,
									"end": 1104,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1148,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1111,
									"end": 1148,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1111,
									"end": 1148,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1302,
									"end": 1397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1360,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1346,
									"end": 1360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1379,
									"end": 1389,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1371,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1397,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1101,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1141,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1142,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1147,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1150,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1364,
									"end": 1371,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1353,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1340,
									"end": 1362,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1295,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1382,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "667"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 4059,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb55e4bc70dcc5ff5c8d9e8f45c826f3bb1fef74cc7990e583cf53c0aac3bf0264736f6c63430008180033",
									".code": [
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "337B8B96"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "9168AE72"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "FC0C546A"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 265,
											"end": 4059,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3869,
											"end": 4056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3869,
											"end": 4056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2555,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 879,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 879,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 879,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1635,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1635,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3951,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3938,
											"end": 4014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "F7251CCF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3982,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3938,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 4056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2555,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2642,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2672,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2705,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2744,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2787,
											"end": 2791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2787,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2801,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2787,
											"end": 2801,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2784,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2801,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "30F1C21600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2823,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2766,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 2902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2947,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2920,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2905,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2905,
											"end": 2947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2905,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2947,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2905,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 2947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 2947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 2976,
											"end": 2985,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2976,
											"end": 2995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2976,
											"end": 2995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2995,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2976,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3068,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3051,
											"end": 3061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3041,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3037,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3020,
											"end": 3062,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3020,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3062,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3020,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3020,
											"end": 3068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3020,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3068,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3020,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3254,
											"end": 3274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3254,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3274,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3254,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 3220,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3244,
											"end": 3248,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3220,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3220,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3220,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3275,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3351,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3217,
											"end": 3351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3297,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3351,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3351,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3217,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3439,
											"end": 3449,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3451,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3420,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3509,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 3520,
											"end": 3524,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3511,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3511,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3490,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3532,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3593,
											"end": 3594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3582,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3583,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3594,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3623,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3605,
											"end": 3634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3638,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3673,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "PUSH",
											"source": 4,
											"value": "619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9"
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3656,
											"end": 3682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3682,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 3690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 879,
											"end": 923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 879,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1711,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1723,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1826,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1690,
											"end": 1826,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "DD028D800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1745,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1826,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1690,
											"end": 1826,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1690,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1863,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1858,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1858,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1858,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 1895,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1842,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1960,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1839,
											"end": 1960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1917,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1960,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1960,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1839,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2146,
											"end": 2156,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 2123,
											"end": 2145,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2123,
											"end": 2145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2123,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2212,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2213,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2194,
											"end": 2231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2299,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 2274,
											"end": 2289,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2274,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2299,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2334,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2317,
											"end": 2344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 329,
											"end": 358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 334,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 369,
											"end": 376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 413,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 398,
											"end": 414,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 387,
											"end": 414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 426,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 426,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 497,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 497,
											"end": 519,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 520,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 477,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 477,
											"end": 538,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 477,
											"end": 538,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 477,
											"end": 538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 426,
											"end": 544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 426,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 550,
											"end": 685,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 550,
											"end": 685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 639,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 610,
											"end": 639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 610,
											"end": 639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 648,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 648,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 679,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 648,
											"end": 679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 550,
											"end": 685,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 550,
											"end": 685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 550,
											"end": 685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 550,
											"end": 685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 550,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 776,
											"end": 783,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 765,
											"end": 884,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 765,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 765,
											"end": 884,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 803,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 765,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 765,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 971,
											"end": 980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 967,
											"end": 989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 948,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 948,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 938,
											"end": 999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 938,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 1016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1220,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1378,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1256,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1347,
											"end": 1352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1329,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1309,
											"end": 1372,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1309,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1523,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1384,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1475,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1511,
											"end": 1516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1484,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1517,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1484,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1523,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1858,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1529,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1623,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1635,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1724,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1605,
											"end": 1724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1643,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1724,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1605,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1833,
											"end": 1840,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1788,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1841,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1788,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1858,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1864,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1947,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2052,
											"end": 2057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2034,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 2065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2337,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2321,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2271,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2271,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2420,
											"end": 2422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2402,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2352,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2424,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2352,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2502,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2434,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2641,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2519,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2592,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2616,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2592,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2572,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2786,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2647,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2738,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2747,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2786,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2786,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2647,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 3121,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2792,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2902,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2886,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2898,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2903,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2987,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2868,
											"end": 2987,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2906,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2987,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2868,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3096,
											"end": 3103,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3051,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3104,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3051,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 3121,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 3121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 3121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 3121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3187,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3127,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3335,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3193,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3294,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3321,
											"end": 3326,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3303,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3294,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3294,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3276,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3329,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3276,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3424,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3424,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3612,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3473,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3600,
											"end": 3605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3569,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3775,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3618,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3762,
											"end": 3767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3718,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3768,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3718,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4029,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3781,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3938,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 4022,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3938,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4029,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4204,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4035,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4151,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4204,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4380,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4210,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4372,
											"name": "PUSH",
											"source": 5,
											"value": "796F75277265206E6F7420746865206F776E6572000000000000000000000000"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4327,
											"end": 4373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4752,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4386,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4549,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4616,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4549,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4714,
											"end": 4717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4625,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4625,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4738,
											"end": 4741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 5177,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4758,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 5022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5039,
											"end": 5170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5170,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5039,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 5177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 5177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 5177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 5177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5349,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5183,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F20546F6B656E73205374616B656400000000000000000000000000000000"
										},
										{
											"begin": 5319,
											"end": 5320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5342,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5721,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5355,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5518,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5585,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5518,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5683,
											"end": 5686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5594,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5687,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5594,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5707,
											"end": 5710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5355,
											"end": 5721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 6146,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5727,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5980,
											"end": 5989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5974,
											"end": 5978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 5990,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 5968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5944,
											"end": 5991,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6008,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6139,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6008,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 6146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 6146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 6146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 6146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6334,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6152,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 5,
											"value": "596F752063616E2774207769746864726177206265666F7265203120686F7572"
										},
										{
											"begin": 6288,
											"end": 6289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6276,
											"end": 6290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6567,
											"end": 6569,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6562,
											"end": 6565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6503,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6668,
											"end": 6671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6579,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6901,
											"end": 6919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6893,
											"end": 6919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6893,
											"end": 6919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 6974,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6955,
											"end": 6975,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6993,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 7124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 7124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 7131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7137,
											"end": 7317,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7137,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7185,
											"end": 7262,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7175,
											"end": 7263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7272,
											"end": 7287,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7306,
											"end": 7310,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7311,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7517,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7323,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7383,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7435,
											"end": 7436,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7417,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7437,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7417,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7437,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7461,
											"end": 7462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7463,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7446,
											"end": 7463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7487,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7510,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7473,
											"end": 7510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7490,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7510,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7473,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7517,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7714,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7523,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7563,
											"end": 7566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7600,
											"end": 7601,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7582,
											"end": 7602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7577,
											"end": 7602,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7577,
											"end": 7602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7616,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7659,
											"end": 7660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7652,
											"end": 7661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7645,
											"end": 7661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7645,
											"end": 7661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7674,
											"end": 7684,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7671,
											"end": 7707,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7687,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 7687,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7707,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7671,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7714,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7720,
											"end": 7900,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7720,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7845,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 7862,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 7893,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7894,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 8091,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7906,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7963,
											"end": 7983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7983,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7963,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8015,
											"end": 8016,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7997,
											"end": 8017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8017,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7997,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8017,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8026,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8026,
											"end": 8061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8041,
											"end": 8059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8026,
											"end": 8061,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8026,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8085,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8071,
											"end": 8085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8071,
											"end": 8085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 8091,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 8091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 8091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 8091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7906,
											"end": 8091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8507,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 8097,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8178,
											"end": 8179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8160,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8160,
											"end": 8180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8160,
											"end": 8180,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 8160,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8180,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8194,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8189,
											"end": 8214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8189,
											"end": 8214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8242,
											"end": 8251,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 8289,
											"end": 8300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8271,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8301,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 8271,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8437,
											"end": 8452,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8434,
											"end": 8435,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8411,
											"end": 8412,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8404,
											"end": 8413,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8384,
											"end": 8467,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8361,
											"end": 8500,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8480,
											"end": 8498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8500,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8361,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8145,
											"end": 8507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8507,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8513,
											"end": 8631,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8513,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8618,
											"end": 8623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 8600,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8624,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8600,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8595,
											"end": 8598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8513,
											"end": 8631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8513,
											"end": 8631,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8513,
											"end": 8631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8859,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 8637,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8730,
											"end": 8734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8757,
											"end": 8766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8745,
											"end": 8771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8745,
											"end": 8771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8781,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8849,
											"end": 8850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8838,
											"end": 8847,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8834,
											"end": 8851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8825,
											"end": 8831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8781,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8781,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8781,
											"end": 8852,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8781,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8859,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8859,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 9008,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 8865,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8922,
											"end": 8927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8947,
											"end": 8960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 8960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 8960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8969,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 8996,
											"end": 9001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8969,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 8969,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8969,
											"end": 9002,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 8969,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 9008,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 9008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 9008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 9008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8865,
											"end": 9008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9365,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 9014,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9112,
											"end": 9119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9108,
											"end": 9131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9104,
											"end": 9136,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9101,
											"end": 9220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9101,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9101,
											"end": 9220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9139,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9139,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 9139,
											"end": 9218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9139,
											"end": 9218,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9139,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9101,
											"end": 9220,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9101,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9259,
											"end": 9260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9340,
											"end": 9347,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9331,
											"end": 9337,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9329,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 9284,
											"end": 9348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9348,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9284,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9274,
											"end": 9348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9274,
											"end": 9348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9365,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9371,
											"end": 9552,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 9371,
											"end": 9552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9511,
											"end": 9544,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420456E6F756768204D6F6E657920746F20676976652072657761726400"
										},
										{
											"begin": 9507,
											"end": 9508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9495,
											"end": 9509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9545,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9371,
											"end": 9552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9371,
											"end": 9552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9924,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 9558,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9700,
											"end": 9703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9721,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9785,
											"end": 9787,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9721,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 9721,
											"end": 9788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9721,
											"end": 9788,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9721,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9714,
											"end": 9788,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9714,
											"end": 9788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9886,
											"end": 9889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 9797,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9890,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9797,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9915,
											"end": 9917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9913,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9899,
											"end": 9918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9899,
											"end": 9918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 10349,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 9930,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10096,
											"end": 10100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10136,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10123,
											"end": 10132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10119,
											"end": 10137,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10111,
											"end": 10137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10177,
											"end": 10181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10169,
											"end": 10170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10154,
											"end": 10171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10147,
											"end": 10194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10211,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10337,
											"end": 10341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10211,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10211,
											"end": 10342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10211,
											"end": 10342,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10211,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 10349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 10349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 10349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10577,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10355,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10448,
											"end": 10452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10475,
											"end": 10484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10471,
											"end": 10489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10567,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10569,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10543,
											"end": 10549,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 10499,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10570,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10499,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10577,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10583,
											"end": 10874,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 10583,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10757,
											"name": "PUSH",
											"source": 5,
											"value": "596F752063616E2774207374616B6520616761696E20776974686F7574207769"
										},
										{
											"begin": 10719,
											"end": 10720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10792,
											"end": 10826,
											"name": "PUSH",
											"source": 5,
											"value": "746864726177696E6720796F75722070726576696F7573206D6F6E6579206669"
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10779,
											"end": 10785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10775,
											"end": 10790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10768,
											"end": 10827,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10861,
											"end": 10866,
											"name": "PUSH",
											"source": 5,
											"value": "7273740000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10856,
											"end": 10858,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10848,
											"end": 10854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10844,
											"end": 10859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10837,
											"end": 10867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10583,
											"end": 10874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10583,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 11246,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 10880,
											"end": 11246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11022,
											"end": 11025,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 11102,
											"end": 11105,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 11043,
											"end": 11110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11110,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 11043,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11036,
											"end": 11110,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11036,
											"end": 11110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11208,
											"end": 11211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11119,
											"end": 11212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11212,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11119,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11237,
											"end": 11239,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 11232,
											"end": 11235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11228,
											"end": 11240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 11246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 11246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 11246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 11246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11671,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 11252,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11418,
											"end": 11422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11445,
											"end": 11454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11441,
											"end": 11459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11433,
											"end": 11459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11505,
											"end": 11514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11499,
											"end": 11503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11495,
											"end": 11515,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11491,
											"end": 11492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11489,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11476,
											"end": 11493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11469,
											"end": 11516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11533,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11659,
											"end": 11663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11533,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11533,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11533,
											"end": 11664,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11533,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11525,
											"end": 11664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11525,
											"end": 11664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11847,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 11677,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11839,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742042616C616E6365000000000000000000000000"
										},
										{
											"begin": 11813,
											"end": 11814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 11811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11801,
											"end": 11815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11794,
											"end": 11840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 12219,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11853,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11995,
											"end": 11998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 12080,
											"end": 12082,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 12075,
											"end": 12078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12016,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 12016,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12016,
											"end": 12083,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 12016,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12083,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12092,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12181,
											"end": 12184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12092,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 12092,
											"end": 12185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12092,
											"end": 12185,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12092,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12205,
											"end": 12208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12201,
											"end": 12213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12194,
											"end": 12213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12194,
											"end": 12213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 12219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 12219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 12219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 12219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12644,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 12225,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12391,
											"end": 12395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12429,
											"end": 12431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12418,
											"end": 12427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12478,
											"end": 12487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12472,
											"end": 12476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12468,
											"end": 12488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12464,
											"end": 12465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12462,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12449,
											"end": 12466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 12632,
											"end": 12636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 12506,
											"end": 12637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12637,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 12506,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12225,
											"end": 12644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12771,
											"end": 12775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12811,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12798,
											"end": 12807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12794,
											"end": 12812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12786,
											"end": 12812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12786,
											"end": 12812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12822,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12890,
											"end": 12891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12888,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12875,
											"end": 12892,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12866,
											"end": 12872,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12822,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 12822,
											"end": 12893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12822,
											"end": 12893,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12822,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 12971,
											"end": 12973,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12960,
											"end": 12969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12956,
											"end": 12974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12947,
											"end": 12953,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 12903,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12975,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 12903,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12650,
											"end": 12982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13175,
											"end": 13177,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 13164,
											"end": 13173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13152,
											"end": 13178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13152,
											"end": 13178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13188,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 13256,
											"end": 13257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13245,
											"end": 13254,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13241,
											"end": 13258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13232,
											"end": 13238,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13188,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 13188,
											"end": 13259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13188,
											"end": 13259,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 13188,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13269,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 13337,
											"end": 13339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13326,
											"end": 13335,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13322,
											"end": 13340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13313,
											"end": 13319,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13269,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 13269,
											"end": 13341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13269,
											"end": 13341,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 13269,
											"end": 13341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13351,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13419,
											"end": 13421,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13408,
											"end": 13417,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13395,
											"end": 13401,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13351,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 13351,
											"end": 13423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13351,
											"end": 13423,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13351,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12988,
											"end": 13430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13526,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 13436,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13470,
											"end": 13477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13506,
											"end": 13519,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13499,
											"end": 13520,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13488,
											"end": 13520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13488,
											"end": 13520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13436,
											"end": 13526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13532,
											"end": 13648,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 13532,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13602,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 13617,
											"end": 13622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13602,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 13602,
											"end": 13623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13602,
											"end": 13623,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 13602,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13595,
											"end": 13600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13592,
											"end": 13624,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13582,
											"end": 13642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 13582,
											"end": 13642,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13635,
											"end": 13636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13628,
											"end": 13640,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13582,
											"end": 13642,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 13582,
											"end": 13642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13532,
											"end": 13648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13532,
											"end": 13648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13791,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 13654,
											"end": 13791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13708,
											"end": 13713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13733,
											"end": 13746,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13724,
											"end": 13746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13724,
											"end": 13746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13755,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13779,
											"end": 13784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13755,
											"end": 13785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 13755,
											"end": 13785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13755,
											"end": 13785,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13755,
											"end": 13785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13791,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13797,
											"end": 14142,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 13797,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13864,
											"end": 13870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13913,
											"end": 13915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13901,
											"end": 13910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13892,
											"end": 13899,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13888,
											"end": 13911,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13884,
											"end": 13916,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 14000,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 14000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 13881,
											"end": 14000,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13919,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 13919,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 13919,
											"end": 13998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13919,
											"end": 13998,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 13919,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 14000,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 13881,
											"end": 14000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14064,
											"end": 14125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 14117,
											"end": 14124,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14108,
											"end": 14114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14097,
											"end": 14106,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14093,
											"end": 14115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14064,
											"end": 14125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 14064,
											"end": 14125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14064,
											"end": 14125,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 14064,
											"end": 14125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14054,
											"end": 14125,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14054,
											"end": 14125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14010,
											"end": 14135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13797,
											"end": 14142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13797,
											"end": 14142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13797,
											"end": 14142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13797,
											"end": 14142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13797,
											"end": 14142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14148,
											"end": 14246,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 14148,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14199,
											"end": 14205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14233,
											"end": 14238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14227,
											"end": 14239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14217,
											"end": 14239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14217,
											"end": 14239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14148,
											"end": 14246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14148,
											"end": 14246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14148,
											"end": 14246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14148,
											"end": 14246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14399,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 14252,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14353,
											"end": 14364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14390,
											"end": 14393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14375,
											"end": 14393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14252,
											"end": 14399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14405,
											"end": 14651,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 14405,
											"end": 14651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14486,
											"end": 14487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 14516,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14507,
											"end": 14508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14504,
											"end": 14517,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14595,
											"end": 14596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14590,
											"end": 14593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14586,
											"end": 14597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14580,
											"end": 14598,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14576,
											"end": 14577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14571,
											"end": 14574,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14567,
											"end": 14578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14560,
											"end": 14599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14532,
											"end": 14534,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14530,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14525,
											"end": 14535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 14496,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14643,
											"end": 14644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14634,
											"end": 14640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14625,
											"end": 14641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14618,
											"end": 14645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14467,
											"end": 14651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14405,
											"end": 14651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14405,
											"end": 14651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14405,
											"end": 14651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14405,
											"end": 14651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 15043,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 14657,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14761,
											"end": 14764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14789,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 14821,
											"end": 14826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14789,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 14789,
											"end": 14827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14789,
											"end": 14827,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 14789,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14843,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 14924,
											"end": 14930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14919,
											"end": 14922,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14843,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 14843,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14843,
											"end": 14931,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 14843,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14836,
											"end": 14931,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14836,
											"end": 14931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14940,
											"end": 15005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 14998,
											"end": 15004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14993,
											"end": 14996,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14986,
											"end": 14990,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14979,
											"end": 14984,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14975,
											"end": 14991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14940,
											"end": 15005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 14940,
											"end": 15005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14940,
											"end": 15005,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 14940,
											"end": 15005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15030,
											"end": 15036,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15025,
											"end": 15028,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15021,
											"end": 15037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15014,
											"end": 15037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15014,
											"end": 15037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 15043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 15043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 15043,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 15043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 15043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 15043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15049,
											"end": 15320,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 15049,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15179,
											"end": 15182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 15290,
											"end": 15293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15281,
											"end": 15287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 15201,
											"end": 15294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15194,
											"end": 15294,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15194,
											"end": 15294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15311,
											"end": 15314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15304,
											"end": 15314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15304,
											"end": 15314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15049,
											"end": 15320,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15049,
											"end": 15320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15049,
											"end": 15320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15049,
											"end": 15320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15049,
											"end": 15320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"changeRebasingIndex(uint8)": "337b8b96",
							"stake(uint256)": "a694fc3a",
							"stakers(address)": "9168ae72",
							"token()": "fc0c546a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"MultiStake\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TimeNotCompleted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"changeRebasingIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensHeGetting\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tushar Arora\",\"details\":\"uses SafeERC20\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"changeRebasingIndex(uint8)\":{\"params\":{\"index\":\"is the percantage of rewards you want to give to the stakers  changes the percentage of rewards the staker will get\"}},\"stake(uint256)\":{\"details\":\"Sets the value for {_amount}\",\"params\":{\"_amount\":\"Value a user want to stake.\"}}},\"title\":\"A contract to allow people to stake coins and get rewards.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"stake(uint256)\":{\"notice\":\"It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake.\"},\"withdraw()\":{\"notice\":\"It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account. It will take out all the amount from their account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"StakingTokens\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"staking.sol\":{\"keccak256\":\"0xb48efec59c87843237f91431962fb3befee97d7fbd063930e6fc17ad9ddab5f0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://42dd288c10a47abf6197d904a54e4d6882d6082f88bdb1da5265325eda4cd151\",\"dweb:/ipfs/QmfLNc5RiDhbgD7UEn76XgVciphv1mTZzuUekAPCDaexvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "staking.sol:StakingTokens",
								"label": "stakers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(stakeData)708_storage)"
							},
							{
								"astId": 715,
								"contract": "staking.sol:StakingTokens",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 718,
								"contract": "staking.sol:StakingTokens",
								"label": "rebasingIndex",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 720,
								"contract": "staking.sol:StakingTokens",
								"label": "toGiveReward",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 723,
								"contract": "staking.sol:StakingTokens",
								"label": "totalStakedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 726,
								"contract": "staking.sol:StakingTokens",
								"label": "totalTokensReceivedToUser",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(stakeData)708_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingTokens.stakeData)",
								"numberOfBytes": "32",
								"value": "t_struct(stakeData)708_storage"
							},
							"t_struct(stakeData)708_storage": {
								"encoding": "inplace",
								"label": "struct StakingTokens.stakeData",
								"members": [
									{
										"astId": 703,
										"contract": "staking.sol:StakingTokens",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 705,
										"contract": "staking.sol:StakingTokens",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 707,
										"contract": "staking.sol:StakingTokens",
										"label": "tokensHeGetting",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"stake(uint256)": {
								"notice": "It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake."
							},
							"withdraw()": {
								"notice": "It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account. It will take out all the amount from their account."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						],
						"StakingTokens": [
							956
						]
					},
					"id": 957,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 957,
							"sourceUnit": 404,
							"src": "66:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingTokens",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 660,
								"nodeType": "StructuredDocumentation",
								"src": "135:127:4",
								"text": " @author Tushar Arora\n @title A contract to allow people to stake coins and get rewards.\n @dev uses SafeERC20"
							},
							"fullyImplemented": true,
							"id": 956,
							"linearizedBaseContracts": [
								956
							],
							"name": "StakingTokens",
							"nameLocation": "274:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"302:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "302:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "296:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"316:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "316:6:4"
										},
										"referencedDeclaration": 77,
										"src": "316:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 667,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "353:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "329:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 666,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 665,
											"name": "IERC20",
											"nameLocations": [
												"329:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "329:6:4"
										},
										"referencedDeclaration": 77,
										"src": "329:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 673,
									"name": "Staked",
									"nameLocation": "373:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "396:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "380:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "407:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "402:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "402:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:35:4"
									},
									"src": "367:48:4"
								},
								{
									"anonymous": false,
									"eventSelector": "619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9",
									"id": 679,
									"name": "Reward",
									"nameLocation": "427:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "450:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "434:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "461:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "456:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "456:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:35:4"
									},
									"src": "421:48:4"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 685,
									"name": "Withdraw",
									"nameLocation": "481:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "506:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "490:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "517:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "512:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "512:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:35:4"
									},
									"src": "475:50:4"
								},
								{
									"errorSelector": "7979dc87",
									"id": 689,
									"name": "InsufficientBalance",
									"nameLocation": "543:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "570:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "563:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 686,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "563:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:16:4"
									},
									"src": "537:42:4"
								},
								{
									"errorSelector": "30f1c216",
									"id": 693,
									"name": "TimeNotCompleted",
									"nameLocation": "591:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "615:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "608:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "608:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:16:4"
									},
									"src": "585:39:4"
								},
								{
									"errorSelector": "f7251ccf",
									"id": 697,
									"name": "NotOwner",
									"nameLocation": "636:8:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "652:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "645:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "645:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:16:4"
									},
									"src": "630:31:4"
								},
								{
									"errorSelector": "0dd028d8",
									"id": 701,
									"name": "MultiStake",
									"nameLocation": "673:10:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "691:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "684:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "684:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:16:4"
									},
									"src": "667:33:4"
								},
								{
									"canonicalName": "StakingTokens.stakeData",
									"id": 708,
									"members": [
										{
											"constant": false,
											"id": 703,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "770:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 708,
											"src": "762:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 702,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 705,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "795:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 708,
											"src": "787:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 704,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "787:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 707,
											"mutability": "mutable",
											"name": "tokensHeGetting",
											"nameLocation": "850:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 708,
											"src": "842:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 706,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "842:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stakeData",
									"nameLocation": "736:9:4",
									"nodeType": "StructDefinition",
									"scope": 956,
									"src": "729:144:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 713,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "916:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "879:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
										"typeString": "mapping(address => struct StakingTokens.stakeData)"
									},
									"typeName": {
										"id": 712,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 709,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "887:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "879:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
											"typeString": "mapping(address => struct StakingTokens.stakeData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 711,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 710,
												"name": "stakeData",
												"nameLocations": [
													"898:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "898:9:4"
											},
											"referencedDeclaration": 708,
											"src": "898:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_stakeData_$708_storage_ptr",
												"typeString": "struct StakingTokens.stakeData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 715,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "940:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "932:13:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 714,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "932:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 718,
									"mutability": "mutable",
									"name": "rebasingIndex",
									"nameLocation": "960:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "952:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "952:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "976:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 720,
									"mutability": "mutable",
									"name": "toGiveReward",
									"nameLocation": "1056:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1048:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 719,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1048:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 723,
									"mutability": "mutable",
									"name": "totalStakedTokens",
									"nameLocation": "1083:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1075:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1075:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1103:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "totalTokensReceivedToUser",
									"nameLocation": "1119:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 956,
									"src": "1111:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 724,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1111:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 725,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1147:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "1335:62:4",
										"statements": [
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 732,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1346:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 733,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "1354:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1346:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1346:14:4"
											},
											{
												"expression": {
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "1371:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1379:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1383:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1379:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1371:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1371:18:4"
											}
										]
									},
									"id": 742,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1321:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 727,
														"name": "IERC20",
														"nameLocations": [
															"1314:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1314:6:4"
													},
													"referencedDeclaration": 77,
													"src": "1314:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:15:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:0:4"
									},
									"scope": 956,
									"src": "1302:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "1679:673:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 748,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1693:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.stakeData storage ref)"
																}
															},
															"id": 751,
															"indexExpression": {
																"expression": {
																	"id": 749,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1701:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1705:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1701:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1693:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_storage",
																"typeString": "struct StakingTokens.stakeData storage ref"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1713:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "1693:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1722:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1693:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "1690:136:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "596f752063616e2774207374616b6520616761696e20776974686f7574207769746864726177696e6720796f75722070726576696f7573206d6f6e6579206669727374",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1756:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211",
																	"typeString": "literal_string \"You can't stake again without withdrawing your previous money first\""
																},
																"value": "You can't stake again without withdrawing your previous money first"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_161103a89d7baab0072cac978ae32248a3284ee43e1788a8722155e6c4053211",
																	"typeString": "literal_string \"You can't stake again without withdrawing your previous money first\""
																}
															],
															"id": 755,
															"name": "MultiStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1745:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1745:81:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 758,
													"nodeType": "RevertStatement",
													"src": "1738:88:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 760,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "1842:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1853:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1842:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 765,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1874:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1878:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1874:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 763,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "1858:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1864:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1858:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1858:27:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 768,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "1888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1858:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1842:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "1839:121:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "496e73756666696369656e742042616c616e6365",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1937:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"typeString": "literal_string \"Insufficient Balance\""
																},
																"value": "Insufficient Balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"typeString": "literal_string \"Insufficient Balance\""
																}
															],
															"id": 771,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1917:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1917:43:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 774,
													"nodeType": "RevertStatement",
													"src": "1910:50:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 779,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2146:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2150:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 783,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2166:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingTokens_$956",
																		"typeString": "contract StakingTokens"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingTokens_$956",
																		"typeString": "contract StakingTokens"
																	}
																],
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2158:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2158:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2158:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "2173:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 776,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "2123:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "2123:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "2123:58:4"
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 788,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "2194:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.stakeData storage ref)"
																}
															},
															"id": 791,
															"indexExpression": {
																"expression": {
																	"id": 789,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2202:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2206:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2202:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2194:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_storage",
																"typeString": "struct StakingTokens.stakeData storage ref"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2214:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "2194:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 793,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "2224:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2194:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "2194:37:4"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 796,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "2242:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.stakeData storage ref)"
																}
															},
															"id": 799,
															"indexExpression": {
																"expression": {
																	"id": 797,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2250:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2254:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2250:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2242:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_storage",
																"typeString": "struct StakingTokens.stakeData storage ref"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2262:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "2242:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 801,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2274:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2280:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2274:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:7:4",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3600_by_1",
																"typeString": "int_const 3600"
															},
															"value": "1"
														},
														"src": "2274:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2242:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "2242:57:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 808,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2324:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2328:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2324:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "2336:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2317:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "EmitStatement",
												"src": "2312:32:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "1405:224:4",
										"text": " It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake.\n @dev Sets the value for {_amount}\n @param _amount Value a user want to stake."
									},
									"functionSelector": "a694fc3a",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1644:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1658:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1650:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:17:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1679:0:4"
									},
									"scope": 956,
									"src": "1635:717:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "2588:1102:4",
										"statements": [
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2616:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "2599:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
															"typeString": "struct StakingTokens.stakeData"
														},
														"typeName": {
															"id": 819,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 818,
																"name": "stakeData",
																"nameLocations": [
																	"2599:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 708,
																"src": "2599:9:4"
															},
															"referencedDeclaration": 708,
															"src": "2599:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_storage_ptr",
																"typeString": "struct StakingTokens.stakeData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"baseExpression": {
														"id": 821,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "2623:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
															"typeString": "mapping(address => struct StakingTokens.stakeData storage ref)"
														}
													},
													"id": 824,
													"indexExpression": {
														"expression": {
															"id": 822,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2631:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2635:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2631:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2623:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeData_$708_storage",
														"typeString": "struct StakingTokens.stakeData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2599:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 826,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2656:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																"typeString": "struct StakingTokens.stakeData memory"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2661:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "2656:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2671:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2656:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "2653:103:4",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "2683:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4e6f20546f6b656e73205374616b6564",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2725:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
																			"typeString": "literal_string \"No Tokens Staked\""
																		},
																		"value": "No Tokens Staked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
																			"typeString": "literal_string \"No Tokens Staked\""
																		}
																	],
																	"id": 830,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "2705:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2705:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 833,
															"nodeType": "RevertStatement",
															"src": "2698:46:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 836,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2769:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2775:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2769:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 838,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2787:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																"typeString": "struct StakingTokens.stakeData memory"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2792:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "2787:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2769:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "2766:109:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "596f752063616e2774207769746864726177206265666f7265203120686f7572",
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2840:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
																	"typeString": "literal_string \"You can't withdraw before 1 hour\""
																},
																"value": "You can't withdraw before 1 hour"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
																	"typeString": "literal_string \"You can't withdraw before 1 hour\""
																}
															],
															"id": 841,
															"name": "TimeNotCompleted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "2823:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2823:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 844,
													"nodeType": "RevertStatement",
													"src": "2816:59:4"
												}
											},
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "stakeTime",
														"nameLocation": "2893:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "2888:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 846,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2888:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 848,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2905:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2911:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2905:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 850,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "2923:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																	"typeString": "struct StakingTokens.stakeData memory"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2928:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "2923:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2905:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2940:7:4",
														"subdenomination": "hours",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "1"
													},
													"src": "2905:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2888:59:4"
											},
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "totalHours",
														"nameLocation": "2963:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "2958:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 856,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2958:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "stakeTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "2976:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2988:7:4",
														"subdenomination": "hours",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "1"
													},
													"src": "2976:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2958:37:4"
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3011:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "3006:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3006:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 864,
															"name": "rebasingIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "3020:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 865,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "3037:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																				"typeString": "struct StakingTokens.stakeData memory"
																			}
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3042:6:4",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 703,
																		"src": "3037:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 867,
																		"name": "totalHours",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "3051:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3037:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 869,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3036:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3020:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3065:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3020:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:62:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 878,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3244:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingTokens_$956",
																			"typeString": "contract StakingTokens"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingTokens_$956",
																			"typeString": "contract StakingTokens"
																		}
																	],
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3236:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 876,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3236:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3236:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 874,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "3220:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:9:4",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "3220:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3220:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 881,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "3254:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																			"typeString": "struct StakingTokens.stakeData memory"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3259:6:4",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 703,
																	"src": "3254:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 883,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "3268:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3254:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3253:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3220:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 891,
												"nodeType": "IfStatement",
												"src": "3217:134:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264",
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3317:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
																	"typeString": "literal_string \"Not Enough Money to give reward\""
																},
																"value": "Not Enough Money to give reward"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
																	"typeString": "literal_string \"Not Enough Money to give reward\""
																}
															],
															"id": 887,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "3297:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3297:54:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 890,
													"nodeType": "RevertStatement",
													"src": "3290:61:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 895,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3439:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3443:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3439:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 897,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "3451:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																		"typeString": "struct StakingTokens.stakeData memory"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3456:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 703,
																"src": "3451:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 899,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "3465:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3451:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 892,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3420:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3426:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "3420:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "3420:52:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 904,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3499:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3503:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3499:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "3511:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 907,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "3520:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeData_$708_memory_ptr",
																		"typeString": "struct StakingTokens.stakeData memory"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3525:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 703,
																"src": "3520:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3511:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 903,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "3490:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "EmitStatement",
												"src": "3485:47:4"
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 912,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "3564:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.stakeData storage ref)"
																}
															},
															"id": 915,
															"indexExpression": {
																"expression": {
																	"id": 913,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3572:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3576:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3572:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3564:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_storage",
																"typeString": "struct StakingTokens.stakeData storage ref"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3584:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "3564:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3593:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3564:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "3564:30:4"
											},
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 920,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "3605:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeData_$708_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.stakeData storage ref)"
																}
															},
															"id": 923,
															"indexExpression": {
																"expression": {
																	"id": 921,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3613:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3617:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3613:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3605:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeData_$708_storage",
																"typeString": "struct StakingTokens.stakeData storage ref"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3625:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3605:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3637:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3605:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "3605:33:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 929,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3663:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3667:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3663:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3675:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "Reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "3656:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3656:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "EmitStatement",
												"src": "3651:31:4"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "2360:189:4",
										"text": " It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account.\n It will take out all the amount from their account."
									},
									"functionSelector": "3ccfd60b",
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2564:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2572:2:4"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2588:0:4"
									},
									"scope": 956,
									"src": "2555:1135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "3927:129:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 941,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3941:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3945:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3941:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 943,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "3955:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "IfStatement",
												"src": "3938:76:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "796f75277265206e6f7420746865206f776e6572",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3991:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c",
																	"typeString": "literal_string \"you're not the owner\""
																},
																"value": "you're not the owner"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_3fb754decc3ff70cbcdbeab39d73f83f79aa264cd01b970a27b007f7d38b9a7c",
																	"typeString": "literal_string \"you're not the owner\""
																}
															],
															"id": 945,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "3982:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3982:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 948,
													"nodeType": "RevertStatement",
													"src": "3975:39:4"
												}
											},
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "rebasingIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "4027:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "4043:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4027:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "4027:21:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "3698:165:4",
										"text": " @param index is the percantage of rewards you want to give to the stakers\n \n changes the percentage of rewards the staker will get"
									},
									"functionSelector": "337b8b96",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeRebasingIndex",
									"nameLocation": "3878:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3904:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3898:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 937,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3898:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:13:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3927:0:4"
									},
									"scope": 956,
									"src": "3869:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 957,
							"src": "265:3794:4",
							"usedErrors": [
								130,
								411,
								416,
								419,
								689,
								693,
								697,
								701
							],
							"usedEvents": [
								673,
								679,
								685
							]
						}
					],
					"src": "39:4022:4"
				},
				"id": 4
			}
		}
	}
}