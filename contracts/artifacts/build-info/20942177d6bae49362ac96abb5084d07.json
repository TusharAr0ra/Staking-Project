{
	"id": "20942177d6bae49362ac96abb5084d07",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking2.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n/**\r\n * @author Tushar Arora\r\n * @title A contract to allow people to stake coins and get rewards.\r\n * @dev uses SafeERC20\r\n */\r\ncontract StakingTokens\r\n{\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public immutable token;\r\n\r\n    event Staked(address indexed user, uint amount);\r\n    event Reward(address indexed user, uint amount);\r\n    event Withdrawed(address indexed user);\r\n    \r\n    error InsufficientBalance(string message);\r\n    error TimeNotCompleted(string message);\r\n\r\n    //to Store data\r\n    struct Stake \r\n    {\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    mapping(address => Stake) public stakers;\r\n\r\n    constructor(IERC20 _token) \r\n    {\r\n        token = _token;\r\n    }\r\n\r\n    /**\r\n     * It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake.\r\n     * @dev Sets the value for {_amount}\r\n     * @param _amount Value a user want to stake.\r\n    */\r\n    function stake(uint256 _amount) public\r\n    {\r\n        if(_amount <= 0)\r\n            revert InsufficientBalance(\"Insufficient Balance\");\r\n\r\n        if(token.balanceOf(msg.sender) >= _amount)\r\n            revert InsufficientBalance(\"You don't have enough balance\");\r\n\r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n\r\n        stakers[msg.sender].amount += _amount;\r\n        stakers[msg.sender].timestamp = block.timestamp;\r\n\r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account.\r\n     * It will take out all the amount from their account.\r\n     */\r\n    function withdraw() public \r\n    {\r\n        Stake memory user = stakers[msg.sender];\r\n        if(user.amount < 0)\r\n        {\r\n            revert InsufficientBalance(\"No Tokens Staked\");\r\n        }\r\n        if(block.timestamp <= user.timestamp + 1 hours)\r\n            revert TimeNotCompleted(\"You can't withdraw before 1 hour\");\r\n        uint stakeTime = block.timestamp - user.timestamp;\r\n        uint reward = user.amount * stakeTime / 3600;\r\n\r\n        //this is how we will know that our contract have enough tokens to give rewards.\r\n        require(token.balanceOf(address(this)) >= user.amount + reward, \"Not Enough Money to give reward\");\r\n\r\n        // Transfer the staked tokens back to the user\r\n        token.safeTransfer(msg.sender, user.amount + reward);\r\n\r\n\r\n        //withdrawed\r\n        stakers[msg.sender].amount = 0;\r\n        stakers[msg.sender].timestamp = 0;\r\n\r\n        emit Reward(msg.sender, reward);\r\n        emit Withdrawed(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @param amount The amount you want to fund this contract with, so that this contract can give rewards.\r\n     * @custom:important This function should only be called by the person who desires to give his fund to this contract.\r\n     */\r\n\r\n    function fundRewards(uint amount) public\r\n    {\r\n        if(amount<=0)\r\n            revert InsufficientBalance(\"You're supposed to enter a positive value\");\r\n            \r\n        token.safeTransferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    /**\r\n     * @param _user Address of the user inquiring about the remaining wait time before withdrawal.\r\n     * \r\n     * It tells the user how much time left before he can withdraw his balance.\r\n     */\r\n    function timeUntilWithdrawable(address _user) public view returns (uint256)\r\n    {\r\n        Stake memory user = stakers[_user];\r\n\r\n        if (block.timestamp >= user.timestamp + 1 hours)\r\n            return 0;\r\n        else\r\n            return ((user.timestamp + 1 hours) - block.timestamp) / 60;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"staking2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"staking2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking2.sol": {
				"StakingTokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "TimeNotCompleted",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Reward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "Withdrawed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fundRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "timeUntilWithdrawable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Tushar Arora",
						"details": "uses SafeERC20",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"fundRewards(uint256)": {
								"custom:important": "This function should only be called by the person who desires to give his fund to this contract.",
								"params": {
									"amount": "The amount you want to fund this contract with, so that this contract can give rewards."
								}
							},
							"stake(uint256)": {
								"details": "Sets the value for {_amount}",
								"params": {
									"_amount": "Value a user want to stake."
								}
							},
							"timeUntilWithdrawable(address)": {
								"params": {
									"_user": "Address of the user inquiring about the remaining wait time before withdrawal.  It tells the user how much time left before he can withdraw his balance."
								}
							}
						},
						"title": "A contract to allow people to stake coins and get rewards.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking2.sol\":264:3773  contract StakingTokens... */\n  mstore(0x40, 0xa0)\n    /* \"staking2.sol\":778:844  constructor(IERC20 _token) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"staking2.sol\":830:836  _token */\n  dup1\n    /* \"staking2.sol\":822:836  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"staking2.sol\":778:844  constructor(IERC20 _token) ... */\n  pop\n    /* \"staking2.sol\":264:3773  contract StakingTokens... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_12:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_23\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_13:\n    /* \"#utility.yul\":769:806   */\n  tag_25\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_26:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_14:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_28\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1389   */\ntag_3:\n    /* \"#utility.yul\":1095:1101   */\n  0x00\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1132:1141   */\n  dup3\n    /* \"#utility.yul\":1123:1130   */\n  dup5\n    /* \"#utility.yul\":1119:1142   */\n  sub\n    /* \"#utility.yul\":1115:1147   */\n  slt\n    /* \"#utility.yul\":1112:1231   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1150:1229   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1112:1231   */\ntag_30:\n    /* \"#utility.yul\":1270:1271   */\n  0x00\n    /* \"#utility.yul\":1295:1372   */\n  tag_32\n    /* \"#utility.yul\":1364:1371   */\n  dup5\n    /* \"#utility.yul\":1355:1361   */\n  dup3\n    /* \"#utility.yul\":1344:1353   */\n  dup6\n    /* \"#utility.yul\":1340:1362   */\n  add\n    /* \"#utility.yul\":1295:1372   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1285:1372   */\n  swap2\n  pop\n    /* \"#utility.yul\":1241:1382   */\n  pop\n    /* \"#utility.yul\":1012:1389   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"staking2.sol\":264:3773  contract StakingTokens... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"staking2.sol\":264:3773  contract StakingTokens... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e11f2e9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x93707a19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking2.sol\":1780:2744  function withdraw() public ... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"staking2.sol\":3466:3770  function timeUntilWithdrawable(address _user) public view returns (uint256)... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking2.sol\":729:769  mapping(address => Stake) public stakers */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking2.sol\":3005:3250  function fundRewards(uint amount) public... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"staking2.sol\":1082:1577  function stake(uint256 _amount) public... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"staking2.sol\":328:357  IERC20 public immutable token */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking2.sol\":1780:2744  function withdraw() public ... */\n    tag_10:\n        /* \"staking2.sol\":1824:1841  Stake memory user */\n      0x00\n        /* \"staking2.sol\":1844:1851  stakers */\n      dup1\n        /* \"staking2.sol\":1844:1863  stakers[msg.sender] */\n      0x00\n        /* \"staking2.sol\":1852:1862  msg.sender */\n      caller\n        /* \"staking2.sol\":1844:1863  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking2.sol\":1824:1863  Stake memory user = stakers[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"staking2.sol\":1891:1892  0 */\n      0x00\n        /* \"staking2.sol\":1877:1881  user */\n      dup2\n        /* \"staking2.sol\":1877:1888  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking2.sol\":1877:1892  user.amount < 0 */\n      lt\n        /* \"staking2.sol\":1874:1976  if(user.amount < 0)... */\n      iszero\n      tag_34\n      jumpi\n        /* \"staking2.sol\":1925:1964  InsufficientBalance(\"No Tokens Staked\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking2.sol\":1874:1976  if(user.amount < 0)... */\n    tag_34:\n        /* \"staking2.sol\":2025:2032  1 hours */\n      0x0e10\n        /* \"staking2.sol\":2008:2012  user */\n      dup2\n        /* \"staking2.sol\":2008:2022  user.timestamp */\n      0x20\n      add\n      mload\n        /* \"staking2.sol\":2008:2032  user.timestamp + 1 hours */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"staking2.sol\":1989:2004  block.timestamp */\n      timestamp\n        /* \"staking2.sol\":1989:2032  block.timestamp <= user.timestamp + 1 hours */\n      gt\n        /* \"staking2.sol\":1986:2106  if(block.timestamp <= user.timestamp + 1 hours)... */\n      tag_39\n      jumpi\n        /* \"staking2.sol\":2054:2106  TimeNotCompleted(\"You can't withdraw before 1 hour\") */\n      mload(0x40)\n      0x30f1c21600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking2.sol\":1986:2106  if(block.timestamp <= user.timestamp + 1 hours)... */\n    tag_39:\n        /* \"staking2.sol\":2117:2131  uint stakeTime */\n      0x00\n        /* \"staking2.sol\":2152:2156  user */\n      dup2\n        /* \"staking2.sol\":2152:2166  user.timestamp */\n      0x20\n      add\n      mload\n        /* \"staking2.sol\":2134:2149  block.timestamp */\n      timestamp\n        /* \"staking2.sol\":2134:2166  block.timestamp - user.timestamp */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"staking2.sol\":2117:2166  uint stakeTime = block.timestamp - user.timestamp */\n      swap1\n      pop\n        /* \"staking2.sol\":2177:2188  uint reward */\n      0x00\n        /* \"staking2.sol\":2217:2221  3600 */\n      0x0e10\n        /* \"staking2.sol\":2205:2214  stakeTime */\n      dup3\n        /* \"staking2.sol\":2191:2195  user */\n      dup5\n        /* \"staking2.sol\":2191:2202  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking2.sol\":2191:2214  user.amount * stakeTime */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"staking2.sol\":2191:2221  user.amount * stakeTime / 3600 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"staking2.sol\":2177:2221  uint reward = user.amount * stakeTime / 3600 */\n      swap1\n      pop\n        /* \"staking2.sol\":2380:2386  reward */\n      dup1\n        /* \"staking2.sol\":2366:2370  user */\n      dup4\n        /* \"staking2.sol\":2366:2377  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking2.sol\":2366:2386  user.amount + reward */\n      tag_48\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_48:\n        /* \"staking2.sol\":2332:2337  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking2.sol\":2332:2347  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"staking2.sol\":2356:2360  this */\n      address\n        /* \"staking2.sol\":2332:2362  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"staking2.sol\":2332:2386  token.balanceOf(address(this)) >= user.amount + reward */\n      lt\n      iszero\n        /* \"staking2.sol\":2324:2422  require(token.balanceOf(address(this)) >= user.amount + reward, \"Not Enough Money to give reward\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"staking2.sol\":2491:2543  token.safeTransfer(msg.sender, user.amount + reward) */\n      tag_58\n        /* \"staking2.sol\":2510:2520  msg.sender */\n      caller\n        /* \"staking2.sol\":2536:2542  reward */\n      dup3\n        /* \"staking2.sol\":2522:2526  user */\n      dup6\n        /* \"staking2.sol\":2522:2533  user.amount */\n      0x00\n      add\n      mload\n        /* \"staking2.sol\":2522:2542  user.amount + reward */\n      tag_59\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_59:\n        /* \"staking2.sol\":2491:2496  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking2.sol\":2491:2509  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_60\n      swap1\n        /* \"staking2.sol\":2491:2543  token.safeTransfer(msg.sender, user.amount + reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"staking2.sol\":2609:2610  0 */\n      0x00\n        /* \"staking2.sol\":2580:2587  stakers */\n      dup1\n        /* \"staking2.sol\":2580:2599  stakers[msg.sender] */\n      0x00\n        /* \"staking2.sol\":2588:2598  msg.sender */\n      caller\n        /* \"staking2.sol\":2580:2599  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking2.sol\":2580:2606  stakers[msg.sender].amount */\n      0x00\n      add\n        /* \"staking2.sol\":2580:2610  stakers[msg.sender].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking2.sol\":2653:2654  0 */\n      0x00\n        /* \"staking2.sol\":2621:2628  stakers */\n      dup1\n        /* \"staking2.sol\":2621:2640  stakers[msg.sender] */\n      0x00\n        /* \"staking2.sol\":2629:2639  msg.sender */\n      caller\n        /* \"staking2.sol\":2621:2640  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking2.sol\":2621:2650  stakers[msg.sender].timestamp */\n      0x01\n      add\n        /* \"staking2.sol\":2621:2654  stakers[msg.sender].timestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking2.sol\":2679:2689  msg.sender */\n      caller\n        /* \"staking2.sol\":2672:2698  Reward(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9\n        /* \"staking2.sol\":2691:2697  reward */\n      dup3\n        /* \"staking2.sol\":2672:2698  Reward(msg.sender, reward) */\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking2.sol\":2725:2735  msg.sender */\n      caller\n        /* \"staking2.sol\":2714:2736  Withdrawed(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcecccf974394b5dfc20e8840042bbaa68e166eff261ba930e076891582965d41\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking2.sol\":1813:2744  {... */\n      pop\n      pop\n      pop\n        /* \"staking2.sol\":1780:2744  function withdraw() public ... */\n      jump\t// out\n        /* \"staking2.sol\":3466:3770  function timeUntilWithdrawable(address _user) public view returns (uint256)... */\n    tag_14:\n        /* \"staking2.sol\":3533:3540  uint256 */\n      0x00\n        /* \"staking2.sol\":3558:3575  Stake memory user */\n      dup1\n        /* \"staking2.sol\":3578:3585  stakers */\n      0x00\n        /* \"staking2.sol\":3578:3592  stakers[_user] */\n      dup1\n        /* \"staking2.sol\":3586:3591  _user */\n      dup5\n        /* \"staking2.sol\":3578:3592  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking2.sol\":3558:3592  Stake memory user = stakers[_user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"staking2.sol\":3645:3652  1 hours */\n      0x0e10\n        /* \"staking2.sol\":3628:3632  user */\n      dup2\n        /* \"staking2.sol\":3628:3642  user.timestamp */\n      0x20\n      add\n      mload\n        /* \"staking2.sol\":3628:3652  user.timestamp + 1 hours */\n      tag_63\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_63:\n        /* \"staking2.sol\":3609:3624  block.timestamp */\n      timestamp\n        /* \"staking2.sol\":3609:3652  block.timestamp >= user.timestamp + 1 hours */\n      lt\n        /* \"staking2.sol\":3605:3762  if (block.timestamp >= user.timestamp + 1 hours)... */\n      tag_64\n      jumpi\n        /* \"staking2.sol\":3674:3675  0 */\n      0x00\n        /* \"staking2.sol\":3667:3675  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_62)\n        /* \"staking2.sol\":3605:3762  if (block.timestamp >= user.timestamp + 1 hours)... */\n    tag_64:\n        /* \"staking2.sol\":3760:3762  60 */\n      0x3c\n        /* \"staking2.sol\":3741:3756  block.timestamp */\n      timestamp\n        /* \"staking2.sol\":3730:3737  1 hours */\n      0x0e10\n        /* \"staking2.sol\":3713:3717  user */\n      dup4\n        /* \"staking2.sol\":3713:3727  user.timestamp */\n      0x20\n      add\n      mload\n        /* \"staking2.sol\":3713:3737  user.timestamp + 1 hours */\n      tag_66\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_66:\n        /* \"staking2.sol\":3712:3756  (user.timestamp + 1 hours) - block.timestamp */\n      tag_67\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_67:\n        /* \"staking2.sol\":3711:3762  ((user.timestamp + 1 hours) - block.timestamp) / 60 */\n      tag_68\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_68:\n        /* \"staking2.sol\":3704:3762  return ((user.timestamp + 1 hours) - block.timestamp) / 60 */\n      swap2\n      pop\n      pop\n        /* \"staking2.sol\":3466:3770  function timeUntilWithdrawable(address _user) public view returns (uint256)... */\n    tag_62:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"staking2.sol\":729:769  mapping(address => Stake) public stakers */\n    tag_19:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"staking2.sol\":3005:3250  function fundRewards(uint amount) public... */\n    tag_25:\n        /* \"staking2.sol\":3073:3074  0 */\n      0x00\n        /* \"staking2.sol\":3065:3071  amount */\n      dup2\n        /* \"staking2.sol\":3065:3074  amount<=0 */\n      gt\n        /* \"staking2.sol\":3062:3160  if(amount<=0)... */\n      tag_70\n      jumpi\n        /* \"staking2.sol\":3096:3160  InsufficientBalance(\"You're supposed to enter a positive value\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking2.sol\":3062:3160  if(amount<=0)... */\n    tag_70:\n        /* \"staking2.sol\":3185:3242  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_73\n        /* \"staking2.sol\":3208:3218  msg.sender */\n      caller\n        /* \"staking2.sol\":3228:3232  this */\n      address\n        /* \"staking2.sol\":3235:3241  amount */\n      dup4\n        /* \"staking2.sol\":3185:3190  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking2.sol\":3185:3207  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_74\n      swap1\n        /* \"staking2.sol\":3185:3242  token.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"staking2.sol\":3005:3250  function fundRewards(uint amount) public... */\n      pop\n      jump\t// out\n        /* \"staking2.sol\":1082:1577  function stake(uint256 _amount) public... */\n    tag_28:\n        /* \"staking2.sol\":1151:1152  0 */\n      0x00\n        /* \"staking2.sol\":1140:1147  _amount */\n      dup2\n        /* \"staking2.sol\":1140:1152  _amount <= 0 */\n      gt\n        /* \"staking2.sol\":1137:1217  if(_amount <= 0)... */\n      tag_76\n      jumpi\n        /* \"staking2.sol\":1174:1217  InsufficientBalance(\"Insufficient Balance\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking2.sol\":1137:1217  if(_amount <= 0)... */\n    tag_76:\n        /* \"staking2.sol\":1264:1271  _amount */\n      dup1\n        /* \"staking2.sol\":1233:1238  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking2.sol\":1233:1248  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"staking2.sol\":1249:1259  msg.sender */\n      caller\n        /* \"staking2.sol\":1233:1260  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_82:\n        /* \"staking2.sol\":1233:1271  token.balanceOf(msg.sender) >= _amount */\n      lt\n        /* \"staking2.sol\":1230:1345  if(token.balanceOf(msg.sender) >= _amount)... */\n      tag_83\n      jumpi\n        /* \"staking2.sol\":1293:1345  InsufficientBalance(\"You don't have enough balance\") */\n      mload(0x40)\n      0x7979dc8700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"staking2.sol\":1230:1345  if(token.balanceOf(msg.sender) >= _amount)... */\n    tag_83:\n        /* \"staking2.sol\":1358:1416  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_86\n        /* \"staking2.sol\":1381:1391  msg.sender */\n      caller\n        /* \"staking2.sol\":1401:1405  this */\n      address\n        /* \"staking2.sol\":1408:1415  _amount */\n      dup4\n        /* \"staking2.sol\":1358:1363  token */\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n        /* \"staking2.sol\":1358:1380  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_74\n      swap1\n        /* \"staking2.sol\":1358:1416  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"staking2.sol\":1459:1466  _amount */\n      dup1\n        /* \"staking2.sol\":1429:1436  stakers */\n      0x00\n        /* \"staking2.sol\":1429:1448  stakers[msg.sender] */\n      dup1\n        /* \"staking2.sol\":1437:1447  msg.sender */\n      caller\n        /* \"staking2.sol\":1429:1448  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking2.sol\":1429:1455  stakers[msg.sender].amount */\n      0x00\n      add\n      0x00\n        /* \"staking2.sol\":1429:1466  stakers[msg.sender].amount += _amount */\n      dup3\n      dup3\n      sload\n      tag_87\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_87:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking2.sol\":1509:1524  block.timestamp */\n      timestamp\n        /* \"staking2.sol\":1477:1484  stakers */\n      0x00\n        /* \"staking2.sol\":1477:1496  stakers[msg.sender] */\n      dup1\n        /* \"staking2.sol\":1485:1495  msg.sender */\n      caller\n        /* \"staking2.sol\":1477:1496  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking2.sol\":1477:1506  stakers[msg.sender].timestamp */\n      0x01\n      add\n        /* \"staking2.sol\":1477:1524  stakers[msg.sender].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking2.sol\":1549:1559  msg.sender */\n      caller\n        /* \"staking2.sol\":1542:1569  Staked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"staking2.sol\":1561:1568  _amount */\n      dup3\n        /* \"staking2.sol\":1542:1569  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"staking2.sol\":1082:1577  function stake(uint256 _amount) public... */\n      pop\n      jump\t// out\n        /* \"staking2.sol\":328:357  IERC20 public immutable token */\n    tag_30:\n      immutable(\"0x887d510a66c2c5edb473d8bcaa91e9efa96aa179a0ec88f5292ca216a1999f71\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_100\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_116\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_115)\n    tag_116:\n      0x60\n      swap2\n      pop\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_121\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_123)\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_119)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_119:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_131:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_133:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_134:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_176\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_133\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_135:\n        /* \"#utility.yul\":641:665   */\n      tag_178\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_134\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_179:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_136:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_181\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_135\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_184\n      tag_131\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":917:1036   */\n    tag_183:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_185\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_136\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_137:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_138:\n        /* \"#utility.yul\":1346:1370   */\n      tag_188\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_16:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_190\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_138\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1943   */\n    tag_21:\n        /* \"#utility.yul\":1732:1736   */\n      0x00\n        /* \"#utility.yul\":1770:1772   */\n      0x40\n        /* \"#utility.yul\":1759:1768   */\n      dup3\n        /* \"#utility.yul\":1755:1773   */\n      add\n        /* \"#utility.yul\":1747:1773   */\n      swap1\n      pop\n        /* \"#utility.yul\":1783:1854   */\n      tag_192\n        /* \"#utility.yul\":1851:1852   */\n      0x00\n        /* \"#utility.yul\":1840:1849   */\n      dup4\n        /* \"#utility.yul\":1836:1853   */\n      add\n        /* \"#utility.yul\":1827:1833   */\n      dup6\n        /* \"#utility.yul\":1783:1854   */\n      tag_138\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1864:1936   */\n      tag_193\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup4\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1908:1914   */\n      dup5\n        /* \"#utility.yul\":1864:1936   */\n      tag_138\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1611:1943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2071   */\n    tag_139:\n        /* \"#utility.yul\":2022:2046   */\n      tag_195\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2022:2046   */\n      tag_137\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2015:2020   */\n      dup2\n        /* \"#utility.yul\":2012:2047   */\n      eq\n        /* \"#utility.yul\":2002:2065   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2061:2062   */\n      0x00\n        /* \"#utility.yul\":2058:2059   */\n      dup1\n        /* \"#utility.yul\":2051:2063   */\n      revert\n        /* \"#utility.yul\":2002:2065   */\n    tag_196:\n        /* \"#utility.yul\":1949:2071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2077:2216   */\n    tag_140:\n        /* \"#utility.yul\":2123:2128   */\n      0x00\n        /* \"#utility.yul\":2161:2167   */\n      dup2\n        /* \"#utility.yul\":2148:2168   */\n      calldataload\n        /* \"#utility.yul\":2139:2168   */\n      swap1\n      pop\n        /* \"#utility.yul\":2177:2210   */\n      tag_198\n        /* \"#utility.yul\":2204:2209   */\n      dup2\n        /* \"#utility.yul\":2177:2210   */\n      tag_139\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2077:2216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2222:2551   */\n    tag_24:\n        /* \"#utility.yul\":2281:2287   */\n      0x00\n        /* \"#utility.yul\":2330:2332   */\n      0x20\n        /* \"#utility.yul\":2318:2327   */\n      dup3\n        /* \"#utility.yul\":2309:2316   */\n      dup5\n        /* \"#utility.yul\":2305:2328   */\n      sub\n        /* \"#utility.yul\":2301:2333   */\n      slt\n        /* \"#utility.yul\":2298:2417   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2336:2415   */\n      tag_201\n      tag_131\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2298:2417   */\n    tag_200:\n        /* \"#utility.yul\":2456:2457   */\n      0x00\n        /* \"#utility.yul\":2481:2534   */\n      tag_202\n        /* \"#utility.yul\":2526:2533   */\n      dup5\n        /* \"#utility.yul\":2517:2523   */\n      dup3\n        /* \"#utility.yul\":2506:2515   */\n      dup6\n        /* \"#utility.yul\":2502:2524   */\n      add\n        /* \"#utility.yul\":2481:2534   */\n      tag_140\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2471:2534   */\n      swap2\n      pop\n        /* \"#utility.yul\":2427:2544   */\n      pop\n        /* \"#utility.yul\":2222:2551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2617   */\n    tag_141:\n        /* \"#utility.yul\":2585:2588   */\n      0x00\n        /* \"#utility.yul\":2606:2611   */\n      dup2\n        /* \"#utility.yul\":2599:2611   */\n      swap1\n      pop\n        /* \"#utility.yul\":2557:2617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2765   */\n    tag_142:\n        /* \"#utility.yul\":2673:2682   */\n      0x00\n        /* \"#utility.yul\":2706:2759   */\n      tag_205\n        /* \"#utility.yul\":2724:2758   */\n      tag_206\n        /* \"#utility.yul\":2733:2757   */\n      tag_207\n        /* \"#utility.yul\":2751:2756   */\n      dup5\n        /* \"#utility.yul\":2733:2757   */\n      tag_133\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2724:2758   */\n      tag_141\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2706:2759   */\n      tag_133\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2693:2759   */\n      swap1\n      pop\n        /* \"#utility.yul\":2623:2765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2771:2897   */\n    tag_143:\n        /* \"#utility.yul\":2821:2830   */\n      0x00\n        /* \"#utility.yul\":2854:2891   */\n      tag_209\n        /* \"#utility.yul\":2885:2890   */\n      dup3\n        /* \"#utility.yul\":2854:2891   */\n      tag_142\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2841:2891   */\n      swap1\n      pop\n        /* \"#utility.yul\":2771:2897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3042   */\n    tag_144:\n        /* \"#utility.yul\":2966:2975   */\n      0x00\n        /* \"#utility.yul\":2999:3036   */\n      tag_211\n        /* \"#utility.yul\":3030:3035   */\n      dup3\n        /* \"#utility.yul\":2999:3036   */\n      tag_143\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2986:3036   */\n      swap1\n      pop\n        /* \"#utility.yul\":2903:3042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3205   */\n    tag_145:\n        /* \"#utility.yul\":3148:3198   */\n      tag_213\n        /* \"#utility.yul\":3192:3197   */\n      dup2\n        /* \"#utility.yul\":3148:3198   */\n      tag_144\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3143:3146   */\n      dup3\n        /* \"#utility.yul\":3136:3199   */\n      mstore\n        /* \"#utility.yul\":3048:3205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3211:3459   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3452   */\n      tag_215\n        /* \"#utility.yul\":3449:3450   */\n      0x00\n        /* \"#utility.yul\":3438:3447   */\n      dup4\n        /* \"#utility.yul\":3434:3451   */\n      add\n        /* \"#utility.yul\":3425:3431   */\n      dup5\n        /* \"#utility.yul\":3368:3452   */\n      tag_145\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3211:3459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3465:3634   */\n    tag_146:\n        /* \"#utility.yul\":3549:3560   */\n      0x00\n        /* \"#utility.yul\":3583:3589   */\n      dup3\n        /* \"#utility.yul\":3578:3581   */\n      dup3\n        /* \"#utility.yul\":3571:3590   */\n      mstore\n        /* \"#utility.yul\":3623:3627   */\n      0x20\n        /* \"#utility.yul\":3618:3621   */\n      dup3\n        /* \"#utility.yul\":3614:3628   */\n      add\n        /* \"#utility.yul\":3599:3628   */\n      swap1\n      pop\n        /* \"#utility.yul\":3465:3634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3640:3806   */\n    tag_147:\n        /* \"#utility.yul\":3780:3798   */\n      0x4e6f20546f6b656e73205374616b656400000000000000000000000000000000\n        /* \"#utility.yul\":3776:3777   */\n      0x00\n        /* \"#utility.yul\":3768:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3778   */\n      add\n        /* \"#utility.yul\":3757:3799   */\n      mstore\n        /* \"#utility.yul\":3640:3806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:4178   */\n    tag_148:\n        /* \"#utility.yul\":3954:3957   */\n      0x00\n        /* \"#utility.yul\":3975:4042   */\n      tag_219\n        /* \"#utility.yul\":4039:4041   */\n      0x10\n        /* \"#utility.yul\":4034:4037   */\n      dup4\n        /* \"#utility.yul\":3975:4042   */\n      tag_146\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3968:4042   */\n      swap2\n      pop\n        /* \"#utility.yul\":4051:4144   */\n      tag_220\n        /* \"#utility.yul\":4140:4143   */\n      dup3\n        /* \"#utility.yul\":4051:4144   */\n      tag_147\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4169:4171   */\n      0x20\n        /* \"#utility.yul\":4164:4167   */\n      dup3\n        /* \"#utility.yul\":4160:4172   */\n      add\n        /* \"#utility.yul\":4153:4172   */\n      swap1\n      pop\n        /* \"#utility.yul\":3812:4178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4184:4603   */\n    tag_36:\n        /* \"#utility.yul\":4350:4354   */\n      0x00\n        /* \"#utility.yul\":4388:4390   */\n      0x20\n        /* \"#utility.yul\":4377:4386   */\n      dup3\n        /* \"#utility.yul\":4373:4391   */\n      add\n        /* \"#utility.yul\":4365:4391   */\n      swap1\n      pop\n        /* \"#utility.yul\":4437:4446   */\n      dup2\n        /* \"#utility.yul\":4431:4435   */\n      dup2\n        /* \"#utility.yul\":4427:4447   */\n      sub\n        /* \"#utility.yul\":4423:4424   */\n      0x00\n        /* \"#utility.yul\":4412:4421   */\n      dup4\n        /* \"#utility.yul\":4408:4425   */\n      add\n        /* \"#utility.yul\":4401:4448   */\n      mstore\n        /* \"#utility.yul\":4465:4596   */\n      tag_222\n        /* \"#utility.yul\":4591:4595   */\n      dup2\n        /* \"#utility.yul\":4465:4596   */\n      tag_148\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4457:4596   */\n      swap1\n      pop\n        /* \"#utility.yul\":4184:4603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4609:4789   */\n    tag_149:\n        /* \"#utility.yul\":4657:4734   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4654:4655   */\n      0x00\n        /* \"#utility.yul\":4647:4735   */\n      mstore\n        /* \"#utility.yul\":4754:4758   */\n      0x11\n        /* \"#utility.yul\":4751:4752   */\n      0x04\n        /* \"#utility.yul\":4744:4759   */\n      mstore\n        /* \"#utility.yul\":4778:4782   */\n      0x24\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4768:4783   */\n      revert\n        /* \"#utility.yul\":4795:4986   */\n    tag_38:\n        /* \"#utility.yul\":4835:4838   */\n      0x00\n        /* \"#utility.yul\":4854:4874   */\n      tag_225\n        /* \"#utility.yul\":4872:4873   */\n      dup3\n        /* \"#utility.yul\":4854:4874   */\n      tag_137\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4849:4874   */\n      swap2\n      pop\n        /* \"#utility.yul\":4888:4908   */\n      tag_226\n        /* \"#utility.yul\":4906:4907   */\n      dup4\n        /* \"#utility.yul\":4888:4908   */\n      tag_137\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4883:4908   */\n      swap3\n      pop\n        /* \"#utility.yul\":4931:4932   */\n      dup3\n        /* \"#utility.yul\":4928:4929   */\n      dup3\n        /* \"#utility.yul\":4924:4933   */\n      add\n        /* \"#utility.yul\":4917:4933   */\n      swap1\n      pop\n        /* \"#utility.yul\":4952:4955   */\n      dup1\n        /* \"#utility.yul\":4949:4950   */\n      dup3\n        /* \"#utility.yul\":4946:4956   */\n      gt\n        /* \"#utility.yul\":4943:4979   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":4959:4977   */\n      tag_228\n      tag_149\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4943:4979   */\n    tag_227:\n        /* \"#utility.yul\":4795:4986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4992:5174   */\n    tag_150:\n        /* \"#utility.yul\":5132:5166   */\n      0x596f752063616e2774207769746864726177206265666f7265203120686f7572\n        /* \"#utility.yul\":5128:5129   */\n      0x00\n        /* \"#utility.yul\":5120:5126   */\n      dup3\n        /* \"#utility.yul\":5116:5130   */\n      add\n        /* \"#utility.yul\":5109:5167   */\n      mstore\n        /* \"#utility.yul\":4992:5174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5180:5546   */\n    tag_151:\n        /* \"#utility.yul\":5322:5325   */\n      0x00\n        /* \"#utility.yul\":5343:5410   */\n      tag_231\n        /* \"#utility.yul\":5407:5409   */\n      0x20\n        /* \"#utility.yul\":5402:5405   */\n      dup4\n        /* \"#utility.yul\":5343:5410   */\n      tag_146\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5336:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5419:5512   */\n      tag_232\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5419:5512   */\n      tag_150\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5532:5535   */\n      dup3\n        /* \"#utility.yul\":5528:5540   */\n      add\n        /* \"#utility.yul\":5521:5540   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5552:5971   */\n    tag_41:\n        /* \"#utility.yul\":5718:5722   */\n      0x00\n        /* \"#utility.yul\":5756:5758   */\n      0x20\n        /* \"#utility.yul\":5745:5754   */\n      dup3\n        /* \"#utility.yul\":5741:5759   */\n      add\n        /* \"#utility.yul\":5733:5759   */\n      swap1\n      pop\n        /* \"#utility.yul\":5805:5814   */\n      dup2\n        /* \"#utility.yul\":5799:5803   */\n      dup2\n        /* \"#utility.yul\":5795:5815   */\n      sub\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5780:5789   */\n      dup4\n        /* \"#utility.yul\":5776:5793   */\n      add\n        /* \"#utility.yul\":5769:5816   */\n      mstore\n        /* \"#utility.yul\":5833:5964   */\n      tag_234\n        /* \"#utility.yul\":5959:5963   */\n      dup2\n        /* \"#utility.yul\":5833:5964   */\n      tag_151\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5825:5964   */\n      swap1\n      pop\n        /* \"#utility.yul\":5552:5971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5977:6171   */\n    tag_43:\n        /* \"#utility.yul\":6017:6021   */\n      0x00\n        /* \"#utility.yul\":6037:6057   */\n      tag_236\n        /* \"#utility.yul\":6055:6056   */\n      dup3\n        /* \"#utility.yul\":6037:6057   */\n      tag_137\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6032:6057   */\n      swap2\n      pop\n        /* \"#utility.yul\":6071:6091   */\n      tag_237\n        /* \"#utility.yul\":6089:6090   */\n      dup4\n        /* \"#utility.yul\":6071:6091   */\n      tag_137\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6066:6091   */\n      swap3\n      pop\n        /* \"#utility.yul\":6115:6116   */\n      dup3\n        /* \"#utility.yul\":6112:6113   */\n      dup3\n        /* \"#utility.yul\":6108:6117   */\n      sub\n        /* \"#utility.yul\":6100:6117   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6140   */\n      dup2\n        /* \"#utility.yul\":6133:6137   */\n      dup2\n        /* \"#utility.yul\":6130:6141   */\n      gt\n        /* \"#utility.yul\":6127:6164   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":6144:6162   */\n      tag_239\n      tag_149\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6127:6164   */\n    tag_238:\n        /* \"#utility.yul\":5977:6171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6177:6587   */\n    tag_45:\n        /* \"#utility.yul\":6217:6224   */\n      0x00\n        /* \"#utility.yul\":6240:6260   */\n      tag_241\n        /* \"#utility.yul\":6258:6259   */\n      dup3\n        /* \"#utility.yul\":6240:6260   */\n      tag_137\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6235:6260   */\n      swap2\n      pop\n        /* \"#utility.yul\":6274:6294   */\n      tag_242\n        /* \"#utility.yul\":6292:6293   */\n      dup4\n        /* \"#utility.yul\":6274:6294   */\n      tag_137\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6269:6294   */\n      swap3\n      pop\n        /* \"#utility.yul\":6329:6330   */\n      dup3\n        /* \"#utility.yul\":6326:6327   */\n      dup3\n        /* \"#utility.yul\":6322:6331   */\n      mul\n        /* \"#utility.yul\":6351:6381   */\n      tag_243\n        /* \"#utility.yul\":6369:6380   */\n      dup2\n        /* \"#utility.yul\":6351:6381   */\n      tag_137\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6340:6381   */\n      swap2\n      pop\n        /* \"#utility.yul\":6530:6531   */\n      dup3\n        /* \"#utility.yul\":6521:6528   */\n      dup3\n        /* \"#utility.yul\":6517:6532   */\n      div\n        /* \"#utility.yul\":6514:6515   */\n      dup5\n        /* \"#utility.yul\":6511:6533   */\n      eq\n        /* \"#utility.yul\":6491:6492   */\n      dup4\n        /* \"#utility.yul\":6484:6493   */\n      iszero\n        /* \"#utility.yul\":6464:6547   */\n      or\n        /* \"#utility.yul\":6441:6580   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6560:6578   */\n      tag_245\n      tag_149\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6441:6580   */\n    tag_244:\n        /* \"#utility.yul\":6225:6587   */\n      pop\n        /* \"#utility.yul\":6177:6587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6593:6773   */\n    tag_152:\n        /* \"#utility.yul\":6641:6718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6638:6639   */\n      0x00\n        /* \"#utility.yul\":6631:6719   */\n      mstore\n        /* \"#utility.yul\":6738:6742   */\n      0x12\n        /* \"#utility.yul\":6735:6736   */\n      0x04\n        /* \"#utility.yul\":6728:6743   */\n      mstore\n        /* \"#utility.yul\":6762:6766   */\n      0x24\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6752:6767   */\n      revert\n        /* \"#utility.yul\":6779:6964   */\n    tag_47:\n        /* \"#utility.yul\":6819:6820   */\n      0x00\n        /* \"#utility.yul\":6836:6856   */\n      tag_248\n        /* \"#utility.yul\":6854:6855   */\n      dup3\n        /* \"#utility.yul\":6836:6856   */\n      tag_137\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6831:6856   */\n      swap2\n      pop\n        /* \"#utility.yul\":6870:6890   */\n      tag_249\n        /* \"#utility.yul\":6888:6889   */\n      dup4\n        /* \"#utility.yul\":6870:6890   */\n      tag_137\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6865:6890   */\n      swap3\n      pop\n        /* \"#utility.yul\":6909:6910   */\n      dup3\n        /* \"#utility.yul\":6899:6934   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":6914:6932   */\n      tag_251\n      tag_152\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6899:6934   */\n    tag_250:\n        /* \"#utility.yul\":6956:6957   */\n      dup3\n        /* \"#utility.yul\":6953:6954   */\n      dup3\n        /* \"#utility.yul\":6949:6958   */\n      div\n        /* \"#utility.yul\":6944:6958   */\n      swap1\n      pop\n        /* \"#utility.yul\":6779:6964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6970:7088   */\n    tag_153:\n        /* \"#utility.yul\":7057:7081   */\n      tag_253\n        /* \"#utility.yul\":7075:7080   */\n      dup2\n        /* \"#utility.yul\":7057:7081   */\n      tag_134\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7052:7055   */\n      dup3\n        /* \"#utility.yul\":7045:7082   */\n      mstore\n        /* \"#utility.yul\":6970:7088   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7094:7316   */\n    tag_50:\n        /* \"#utility.yul\":7187:7191   */\n      0x00\n        /* \"#utility.yul\":7225:7227   */\n      0x20\n        /* \"#utility.yul\":7214:7223   */\n      dup3\n        /* \"#utility.yul\":7210:7228   */\n      add\n        /* \"#utility.yul\":7202:7228   */\n      swap1\n      pop\n        /* \"#utility.yul\":7238:7309   */\n      tag_255\n        /* \"#utility.yul\":7306:7307   */\n      0x00\n        /* \"#utility.yul\":7295:7304   */\n      dup4\n        /* \"#utility.yul\":7291:7308   */\n      add\n        /* \"#utility.yul\":7282:7288   */\n      dup5\n        /* \"#utility.yul\":7238:7309   */\n      tag_153\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7094:7316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7322:7465   */\n    tag_154:\n        /* \"#utility.yul\":7379:7384   */\n      0x00\n        /* \"#utility.yul\":7410:7416   */\n      dup2\n        /* \"#utility.yul\":7404:7417   */\n      mload\n        /* \"#utility.yul\":7395:7417   */\n      swap1\n      pop\n        /* \"#utility.yul\":7426:7459   */\n      tag_257\n        /* \"#utility.yul\":7453:7458   */\n      dup2\n        /* \"#utility.yul\":7426:7459   */\n      tag_139\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7322:7465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7471:7822   */\n    tag_54:\n        /* \"#utility.yul\":7541:7547   */\n      0x00\n        /* \"#utility.yul\":7590:7592   */\n      0x20\n        /* \"#utility.yul\":7578:7587   */\n      dup3\n        /* \"#utility.yul\":7569:7576   */\n      dup5\n        /* \"#utility.yul\":7565:7588   */\n      sub\n        /* \"#utility.yul\":7561:7593   */\n      slt\n        /* \"#utility.yul\":7558:7677   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":7596:7675   */\n      tag_260\n      tag_131\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7558:7677   */\n    tag_259:\n        /* \"#utility.yul\":7716:7717   */\n      0x00\n        /* \"#utility.yul\":7741:7805   */\n      tag_261\n        /* \"#utility.yul\":7797:7804   */\n      dup5\n        /* \"#utility.yul\":7788:7794   */\n      dup3\n        /* \"#utility.yul\":7777:7786   */\n      dup6\n        /* \"#utility.yul\":7773:7795   */\n      add\n        /* \"#utility.yul\":7741:7805   */\n      tag_154\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7731:7805   */\n      swap2\n      pop\n        /* \"#utility.yul\":7687:7815   */\n      pop\n        /* \"#utility.yul\":7471:7822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7828:8009   */\n    tag_155:\n        /* \"#utility.yul\":7968:8001   */\n      0x4e6f7420456e6f756768204d6f6e657920746f20676976652072657761726400\n        /* \"#utility.yul\":7964:7965   */\n      0x00\n        /* \"#utility.yul\":7956:7962   */\n      dup3\n        /* \"#utility.yul\":7952:7966   */\n      add\n        /* \"#utility.yul\":7945:8002   */\n      mstore\n        /* \"#utility.yul\":7828:8009   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8381   */\n    tag_156:\n        /* \"#utility.yul\":8157:8160   */\n      0x00\n        /* \"#utility.yul\":8178:8245   */\n      tag_264\n        /* \"#utility.yul\":8242:8244   */\n      0x1f\n        /* \"#utility.yul\":8237:8240   */\n      dup4\n        /* \"#utility.yul\":8178:8245   */\n      tag_146\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8171:8245   */\n      swap2\n      pop\n        /* \"#utility.yul\":8254:8347   */\n      tag_265\n        /* \"#utility.yul\":8343:8346   */\n      dup3\n        /* \"#utility.yul\":8254:8347   */\n      tag_155\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8372:8374   */\n      0x20\n        /* \"#utility.yul\":8367:8370   */\n      dup3\n        /* \"#utility.yul\":8363:8375   */\n      add\n        /* \"#utility.yul\":8356:8375   */\n      swap1\n      pop\n        /* \"#utility.yul\":8015:8381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8387:8806   */\n    tag_57:\n        /* \"#utility.yul\":8553:8557   */\n      0x00\n        /* \"#utility.yul\":8591:8593   */\n      0x20\n        /* \"#utility.yul\":8580:8589   */\n      dup3\n        /* \"#utility.yul\":8576:8594   */\n      add\n        /* \"#utility.yul\":8568:8594   */\n      swap1\n      pop\n        /* \"#utility.yul\":8640:8649   */\n      dup2\n        /* \"#utility.yul\":8634:8638   */\n      dup2\n        /* \"#utility.yul\":8630:8650   */\n      sub\n        /* \"#utility.yul\":8626:8627   */\n      0x00\n        /* \"#utility.yul\":8615:8624   */\n      dup4\n        /* \"#utility.yul\":8611:8628   */\n      add\n        /* \"#utility.yul\":8604:8651   */\n      mstore\n        /* \"#utility.yul\":8668:8799   */\n      tag_267\n        /* \"#utility.yul\":8794:8798   */\n      dup2\n        /* \"#utility.yul\":8668:8799   */\n      tag_156\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8660:8799   */\n      swap1\n      pop\n        /* \"#utility.yul\":8387:8806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8812:9040   */\n    tag_157:\n        /* \"#utility.yul\":8952:8986   */\n      0x596f7527726520737570706f73656420746f20656e746572206120706f736974\n        /* \"#utility.yul\":8948:8949   */\n      0x00\n        /* \"#utility.yul\":8940:8946   */\n      dup3\n        /* \"#utility.yul\":8936:8950   */\n      add\n        /* \"#utility.yul\":8929:8987   */\n      mstore\n        /* \"#utility.yul\":9021:9032   */\n      0x6976652076616c75650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9016:9018   */\n      0x20\n        /* \"#utility.yul\":9008:9014   */\n      dup3\n        /* \"#utility.yul\":9004:9019   */\n      add\n        /* \"#utility.yul\":8997:9033   */\n      mstore\n        /* \"#utility.yul\":8812:9040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9046:9412   */\n    tag_158:\n        /* \"#utility.yul\":9188:9191   */\n      0x00\n        /* \"#utility.yul\":9209:9276   */\n      tag_270\n        /* \"#utility.yul\":9273:9275   */\n      0x29\n        /* \"#utility.yul\":9268:9271   */\n      dup4\n        /* \"#utility.yul\":9209:9276   */\n      tag_146\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9202:9276   */\n      swap2\n      pop\n        /* \"#utility.yul\":9285:9378   */\n      tag_271\n        /* \"#utility.yul\":9374:9377   */\n      dup3\n        /* \"#utility.yul\":9285:9378   */\n      tag_157\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9403:9405   */\n      0x40\n        /* \"#utility.yul\":9398:9401   */\n      dup3\n        /* \"#utility.yul\":9394:9406   */\n      add\n        /* \"#utility.yul\":9387:9406   */\n      swap1\n      pop\n        /* \"#utility.yul\":9046:9412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9418:9837   */\n    tag_72:\n        /* \"#utility.yul\":9584:9588   */\n      0x00\n        /* \"#utility.yul\":9622:9624   */\n      0x20\n        /* \"#utility.yul\":9611:9620   */\n      dup3\n        /* \"#utility.yul\":9607:9625   */\n      add\n        /* \"#utility.yul\":9599:9625   */\n      swap1\n      pop\n        /* \"#utility.yul\":9671:9680   */\n      dup2\n        /* \"#utility.yul\":9665:9669   */\n      dup2\n        /* \"#utility.yul\":9661:9681   */\n      sub\n        /* \"#utility.yul\":9657:9658   */\n      0x00\n        /* \"#utility.yul\":9646:9655   */\n      dup4\n        /* \"#utility.yul\":9642:9659   */\n      add\n        /* \"#utility.yul\":9635:9682   */\n      mstore\n        /* \"#utility.yul\":9699:9830   */\n      tag_273\n        /* \"#utility.yul\":9825:9829   */\n      dup2\n        /* \"#utility.yul\":9699:9830   */\n      tag_158\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9691:9830   */\n      swap1\n      pop\n        /* \"#utility.yul\":9418:9837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9843:10013   */\n    tag_159:\n        /* \"#utility.yul\":9983:10005   */\n      0x496e73756666696369656e742042616c616e6365000000000000000000000000\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":9971:9977   */\n      dup3\n        /* \"#utility.yul\":9967:9981   */\n      add\n        /* \"#utility.yul\":9960:10006   */\n      mstore\n        /* \"#utility.yul\":9843:10013   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10019:10385   */\n    tag_160:\n        /* \"#utility.yul\":10161:10164   */\n      0x00\n        /* \"#utility.yul\":10182:10249   */\n      tag_276\n        /* \"#utility.yul\":10246:10248   */\n      0x14\n        /* \"#utility.yul\":10241:10244   */\n      dup4\n        /* \"#utility.yul\":10182:10249   */\n      tag_146\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10175:10249   */\n      swap2\n      pop\n        /* \"#utility.yul\":10258:10351   */\n      tag_277\n        /* \"#utility.yul\":10347:10350   */\n      dup3\n        /* \"#utility.yul\":10258:10351   */\n      tag_159\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10376:10378   */\n      0x20\n        /* \"#utility.yul\":10371:10374   */\n      dup3\n        /* \"#utility.yul\":10367:10379   */\n      add\n        /* \"#utility.yul\":10360:10379   */\n      swap1\n      pop\n        /* \"#utility.yul\":10019:10385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10810   */\n    tag_78:\n        /* \"#utility.yul\":10557:10561   */\n      0x00\n        /* \"#utility.yul\":10595:10597   */\n      0x20\n        /* \"#utility.yul\":10584:10593   */\n      dup3\n        /* \"#utility.yul\":10580:10598   */\n      add\n        /* \"#utility.yul\":10572:10598   */\n      swap1\n      pop\n        /* \"#utility.yul\":10644:10653   */\n      dup2\n        /* \"#utility.yul\":10638:10642   */\n      dup2\n        /* \"#utility.yul\":10634:10654   */\n      sub\n        /* \"#utility.yul\":10630:10631   */\n      0x00\n        /* \"#utility.yul\":10619:10628   */\n      dup4\n        /* \"#utility.yul\":10615:10632   */\n      add\n        /* \"#utility.yul\":10608:10655   */\n      mstore\n        /* \"#utility.yul\":10672:10803   */\n      tag_279\n        /* \"#utility.yul\":10798:10802   */\n      dup2\n        /* \"#utility.yul\":10672:10803   */\n      tag_160\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10664:10803   */\n      swap1\n      pop\n        /* \"#utility.yul\":10391:10810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10816:10995   */\n    tag_161:\n        /* \"#utility.yul\":10956:10987   */\n      0x596f7520646f6e2774206861766520656e6f7567682062616c616e6365000000\n        /* \"#utility.yul\":10952:10953   */\n      0x00\n        /* \"#utility.yul\":10944:10950   */\n      dup3\n        /* \"#utility.yul\":10940:10954   */\n      add\n        /* \"#utility.yul\":10933:10988   */\n      mstore\n        /* \"#utility.yul\":10816:10995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11001:11367   */\n    tag_162:\n        /* \"#utility.yul\":11143:11146   */\n      0x00\n        /* \"#utility.yul\":11164:11231   */\n      tag_282\n        /* \"#utility.yul\":11228:11230   */\n      0x1d\n        /* \"#utility.yul\":11223:11226   */\n      dup4\n        /* \"#utility.yul\":11164:11231   */\n      tag_146\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11157:11231   */\n      swap2\n      pop\n        /* \"#utility.yul\":11240:11333   */\n      tag_283\n        /* \"#utility.yul\":11329:11332   */\n      dup3\n        /* \"#utility.yul\":11240:11333   */\n      tag_161\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11358:11360   */\n      0x20\n        /* \"#utility.yul\":11353:11356   */\n      dup3\n        /* \"#utility.yul\":11349:11361   */\n      add\n        /* \"#utility.yul\":11342:11361   */\n      swap1\n      pop\n        /* \"#utility.yul\":11001:11367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11373:11792   */\n    tag_85:\n        /* \"#utility.yul\":11539:11543   */\n      0x00\n        /* \"#utility.yul\":11577:11579   */\n      0x20\n        /* \"#utility.yul\":11566:11575   */\n      dup3\n        /* \"#utility.yul\":11562:11580   */\n      add\n        /* \"#utility.yul\":11554:11580   */\n      swap1\n      pop\n        /* \"#utility.yul\":11626:11635   */\n      dup2\n        /* \"#utility.yul\":11620:11624   */\n      dup2\n        /* \"#utility.yul\":11616:11636   */\n      sub\n        /* \"#utility.yul\":11612:11613   */\n      0x00\n        /* \"#utility.yul\":11601:11610   */\n      dup4\n        /* \"#utility.yul\":11597:11614   */\n      add\n        /* \"#utility.yul\":11590:11637   */\n      mstore\n        /* \"#utility.yul\":11654:11785   */\n      tag_285\n        /* \"#utility.yul\":11780:11784   */\n      dup2\n        /* \"#utility.yul\":11654:11785   */\n      tag_162\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11646:11785   */\n      swap1\n      pop\n        /* \"#utility.yul\":11373:11792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11798:12130   */\n    tag_92:\n        /* \"#utility.yul\":11919:11923   */\n      0x00\n        /* \"#utility.yul\":11957:11959   */\n      0x40\n        /* \"#utility.yul\":11946:11955   */\n      dup3\n        /* \"#utility.yul\":11942:11960   */\n      add\n        /* \"#utility.yul\":11934:11960   */\n      swap1\n      pop\n        /* \"#utility.yul\":11970:12041   */\n      tag_287\n        /* \"#utility.yul\":12038:12039   */\n      0x00\n        /* \"#utility.yul\":12027:12036   */\n      dup4\n        /* \"#utility.yul\":12023:12040   */\n      add\n        /* \"#utility.yul\":12014:12020   */\n      dup6\n        /* \"#utility.yul\":11970:12041   */\n      tag_153\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12051:12123   */\n      tag_288\n        /* \"#utility.yul\":12119:12121   */\n      0x20\n        /* \"#utility.yul\":12108:12117   */\n      dup4\n        /* \"#utility.yul\":12104:12122   */\n      add\n        /* \"#utility.yul\":12095:12101   */\n      dup5\n        /* \"#utility.yul\":12051:12123   */\n      tag_138\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11798:12130   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12136:12578   */\n    tag_97:\n        /* \"#utility.yul\":12285:12289   */\n      0x00\n        /* \"#utility.yul\":12323:12325   */\n      0x60\n        /* \"#utility.yul\":12312:12321   */\n      dup3\n        /* \"#utility.yul\":12308:12326   */\n      add\n        /* \"#utility.yul\":12300:12326   */\n      swap1\n      pop\n        /* \"#utility.yul\":12336:12407   */\n      tag_290\n        /* \"#utility.yul\":12404:12405   */\n      0x00\n        /* \"#utility.yul\":12393:12402   */\n      dup4\n        /* \"#utility.yul\":12389:12406   */\n      add\n        /* \"#utility.yul\":12380:12386   */\n      dup7\n        /* \"#utility.yul\":12336:12407   */\n      tag_153\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12417:12489   */\n      tag_291\n        /* \"#utility.yul\":12485:12487   */\n      0x20\n        /* \"#utility.yul\":12474:12483   */\n      dup4\n        /* \"#utility.yul\":12470:12488   */\n      add\n        /* \"#utility.yul\":12461:12467   */\n      dup6\n        /* \"#utility.yul\":12417:12489   */\n      tag_153\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12499:12571   */\n      tag_292\n        /* \"#utility.yul\":12567:12569   */\n      0x40\n        /* \"#utility.yul\":12556:12565   */\n      dup4\n        /* \"#utility.yul\":12552:12570   */\n      add\n        /* \"#utility.yul\":12543:12549   */\n      dup5\n        /* \"#utility.yul\":12499:12571   */\n      tag_138\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":12136:12578   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12584:12674   */\n    tag_163:\n        /* \"#utility.yul\":12618:12625   */\n      0x00\n        /* \"#utility.yul\":12661:12666   */\n      dup2\n        /* \"#utility.yul\":12654:12667   */\n      iszero\n        /* \"#utility.yul\":12647:12668   */\n      iszero\n        /* \"#utility.yul\":12636:12668   */\n      swap1\n      pop\n        /* \"#utility.yul\":12584:12674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12680:12796   */\n    tag_164:\n        /* \"#utility.yul\":12750:12771   */\n      tag_295\n        /* \"#utility.yul\":12765:12770   */\n      dup2\n        /* \"#utility.yul\":12750:12771   */\n      tag_163\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":12743:12748   */\n      dup2\n        /* \"#utility.yul\":12740:12772   */\n      eq\n        /* \"#utility.yul\":12730:12790   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":12786:12787   */\n      0x00\n        /* \"#utility.yul\":12783:12784   */\n      dup1\n        /* \"#utility.yul\":12776:12788   */\n      revert\n        /* \"#utility.yul\":12730:12790   */\n    tag_296:\n        /* \"#utility.yul\":12680:12796   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12802:12939   */\n    tag_165:\n        /* \"#utility.yul\":12856:12861   */\n      0x00\n        /* \"#utility.yul\":12887:12893   */\n      dup2\n        /* \"#utility.yul\":12881:12894   */\n      mload\n        /* \"#utility.yul\":12872:12894   */\n      swap1\n      pop\n        /* \"#utility.yul\":12903:12933   */\n      tag_298\n        /* \"#utility.yul\":12927:12932   */\n      dup2\n        /* \"#utility.yul\":12903:12933   */\n      tag_164\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12802:12939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12945:13290   */\n    tag_103:\n        /* \"#utility.yul\":13012:13018   */\n      0x00\n        /* \"#utility.yul\":13061:13063   */\n      0x20\n        /* \"#utility.yul\":13049:13058   */\n      dup3\n        /* \"#utility.yul\":13040:13047   */\n      dup5\n        /* \"#utility.yul\":13036:13059   */\n      sub\n        /* \"#utility.yul\":13032:13064   */\n      slt\n        /* \"#utility.yul\":13029:13148   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":13067:13146   */\n      tag_301\n      tag_131\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":13029:13148   */\n    tag_300:\n        /* \"#utility.yul\":13187:13188   */\n      0x00\n        /* \"#utility.yul\":13212:13273   */\n      tag_302\n        /* \"#utility.yul\":13265:13272   */\n      dup5\n        /* \"#utility.yul\":13256:13262   */\n      dup3\n        /* \"#utility.yul\":13245:13254   */\n      dup6\n        /* \"#utility.yul\":13241:13263   */\n      add\n        /* \"#utility.yul\":13212:13273   */\n      tag_165\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":13202:13273   */\n      swap2\n      pop\n        /* \"#utility.yul\":13158:13283   */\n      pop\n        /* \"#utility.yul\":12945:13290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13296:13394   */\n    tag_166:\n        /* \"#utility.yul\":13347:13353   */\n      0x00\n        /* \"#utility.yul\":13381:13386   */\n      dup2\n        /* \"#utility.yul\":13375:13387   */\n      mload\n        /* \"#utility.yul\":13365:13387   */\n      swap1\n      pop\n        /* \"#utility.yul\":13296:13394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13400:13547   */\n    tag_167:\n        /* \"#utility.yul\":13501:13512   */\n      0x00\n        /* \"#utility.yul\":13538:13541   */\n      dup2\n        /* \"#utility.yul\":13523:13541   */\n      swap1\n      pop\n        /* \"#utility.yul\":13400:13547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13553:13799   */\n    tag_168:\n        /* \"#utility.yul\":13634:13635   */\n      0x00\n        /* \"#utility.yul\":13644:13757   */\n    tag_306:\n        /* \"#utility.yul\":13658:13664   */\n      dup4\n        /* \"#utility.yul\":13655:13656   */\n      dup2\n        /* \"#utility.yul\":13652:13665   */\n      lt\n        /* \"#utility.yul\":13644:13757   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":13743:13744   */\n      dup1\n        /* \"#utility.yul\":13738:13741   */\n      dup3\n        /* \"#utility.yul\":13734:13745   */\n      add\n        /* \"#utility.yul\":13728:13746   */\n      mload\n        /* \"#utility.yul\":13724:13725   */\n      dup2\n        /* \"#utility.yul\":13719:13722   */\n      dup5\n        /* \"#utility.yul\":13715:13726   */\n      add\n        /* \"#utility.yul\":13708:13747   */\n      mstore\n        /* \"#utility.yul\":13680:13682   */\n      0x20\n        /* \"#utility.yul\":13677:13678   */\n      dup2\n        /* \"#utility.yul\":13673:13683   */\n      add\n        /* \"#utility.yul\":13668:13683   */\n      swap1\n      pop\n        /* \"#utility.yul\":13644:13757   */\n      jump(tag_306)\n    tag_308:\n        /* \"#utility.yul\":13791:13792   */\n      0x00\n        /* \"#utility.yul\":13782:13788   */\n      dup5\n        /* \"#utility.yul\":13777:13780   */\n      dup5\n        /* \"#utility.yul\":13773:13789   */\n      add\n        /* \"#utility.yul\":13766:13793   */\n      mstore\n        /* \"#utility.yul\":13615:13799   */\n      pop\n        /* \"#utility.yul\":13553:13799   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13805:14191   */\n    tag_169:\n        /* \"#utility.yul\":13909:13912   */\n      0x00\n        /* \"#utility.yul\":13937:13975   */\n      tag_310\n        /* \"#utility.yul\":13969:13974   */\n      dup3\n        /* \"#utility.yul\":13937:13975   */\n      tag_166\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":13991:14079   */\n      tag_311\n        /* \"#utility.yul\":14072:14078   */\n      dup2\n        /* \"#utility.yul\":14067:14070   */\n      dup6\n        /* \"#utility.yul\":13991:14079   */\n      tag_167\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":13984:14079   */\n      swap4\n      pop\n        /* \"#utility.yul\":14088:14153   */\n      tag_312\n        /* \"#utility.yul\":14146:14152   */\n      dup2\n        /* \"#utility.yul\":14141:14144   */\n      dup6\n        /* \"#utility.yul\":14134:14138   */\n      0x20\n        /* \"#utility.yul\":14127:14132   */\n      dup7\n        /* \"#utility.yul\":14123:14139   */\n      add\n        /* \"#utility.yul\":14088:14153   */\n      tag_168\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":14178:14184   */\n      dup1\n        /* \"#utility.yul\":14173:14176   */\n      dup5\n        /* \"#utility.yul\":14169:14185   */\n      add\n        /* \"#utility.yul\":14162:14185   */\n      swap2\n      pop\n        /* \"#utility.yul\":13913:14191   */\n      pop\n        /* \"#utility.yul\":13805:14191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14197:14468   */\n    tag_113:\n        /* \"#utility.yul\":14327:14330   */\n      0x00\n        /* \"#utility.yul\":14349:14442   */\n      tag_314\n        /* \"#utility.yul\":14438:14441   */\n      dup3\n        /* \"#utility.yul\":14429:14435   */\n      dup5\n        /* \"#utility.yul\":14349:14442   */\n      tag_169\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":14342:14442   */\n      swap2\n      pop\n        /* \"#utility.yul\":14459:14462   */\n      dup2\n        /* \"#utility.yul\":14452:14462   */\n      swap1\n      pop\n        /* \"#utility.yul\":14197:14468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a59d0a87615c2244fcb0fbb7c7fe2c68df4bc406ec61ca08b65e5def1f7d70c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$77": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$77": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1392:5",
										"nodeType": "YulBlock",
										"src": "0:1392:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "626:51:5",
													"nodeType": "YulBlock",
													"src": "626:51:5",
													"statements": [
														{
															"nativeSrc": "636:35:5",
															"nodeType": "YulAssignment",
															"src": "636:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:5"
																},
																"nativeSrc": "647:24:5",
																"nodeType": "YulFunctionCall",
																"src": "647:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$77",
												"nativeSrc": "568:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:5",
														"nodeType": "YulTypedName",
														"src": "608:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:5",
														"nodeType": "YulTypedName",
														"src": "618:7:5",
														"type": ""
													}
												],
												"src": "568:109:5"
											},
											{
												"body": {
													"nativeSrc": "739:92:5",
													"nodeType": "YulBlock",
													"src": "739:92:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:5",
																"nodeType": "YulBlock",
																"src": "809:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:5",
																					"nodeType": "YulLiteral",
																					"src": "818:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "821:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:5"
																			},
																			"nativeSrc": "811:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:5"
																		},
																		"nativeSrc": "811:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$77",
																					"nativeSrc": "769:30:5",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:5"
																				},
																				"nativeSrc": "769:37:5",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:5"
																		},
																		"nativeSrc": "759:48:5",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:5"
																},
																"nativeSrc": "752:56:5",
																"nodeType": "YulFunctionCall",
																"src": "752:56:5"
															},
															"nativeSrc": "749:76:5",
															"nodeType": "YulIf",
															"src": "749:76:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$77",
												"nativeSrc": "683:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:5",
														"nodeType": "YulTypedName",
														"src": "732:5:5",
														"type": ""
													}
												],
												"src": "683:148:5"
											},
											{
												"body": {
													"nativeSrc": "913:93:5",
													"nodeType": "YulBlock",
													"src": "913:93:5",
													"statements": [
														{
															"nativeSrc": "923:22:5",
															"nodeType": "YulAssignment",
															"src": "923:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:5"
																},
																"nativeSrc": "932:13:5",
																"nodeType": "YulFunctionCall",
																"src": "932:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$77",
																	"nativeSrc": "954:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:5"
																},
																"nativeSrc": "954:46:5",
																"nodeType": "YulFunctionCall",
																"src": "954:46:5"
															},
															"nativeSrc": "954:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "837:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:5",
														"nodeType": "YulTypedName",
														"src": "891:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:5",
														"nodeType": "YulTypedName",
														"src": "899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:5",
														"nodeType": "YulTypedName",
														"src": "907:5:5",
														"type": ""
													}
												],
												"src": "837:169:5"
											},
											{
												"body": {
													"nativeSrc": "1102:287:5",
													"nodeType": "YulBlock",
													"src": "1102:287:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1148:83:5",
																"nodeType": "YulBlock",
																"src": "1148:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1150:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1150:77:5"
																			},
																			"nativeSrc": "1150:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:79:5"
																		},
																		"nativeSrc": "1150:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1123:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1119:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:5"
																		},
																		"nativeSrc": "1119:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1115:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:5"
																},
																"nativeSrc": "1115:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:5"
															},
															"nativeSrc": "1112:119:5",
															"nodeType": "YulIf",
															"src": "1112:119:5"
														},
														{
															"nativeSrc": "1241:141:5",
															"nodeType": "YulBlock",
															"src": "1241:141:5",
															"statements": [
																{
																	"nativeSrc": "1256:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1256:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1270:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1260:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1260:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1285:87:5",
																	"nodeType": "YulAssignment",
																	"src": "1285:87:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1344:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1344:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1355:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1340:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:5"
																				},
																				"nativeSrc": "1340:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1340:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1364:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
																			"nativeSrc": "1295:44:5",
																			"nodeType": "YulIdentifier",
																			"src": "1295:44:5"
																		},
																		"nativeSrc": "1295:77:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:77:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1285:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
												"nativeSrc": "1012:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:5",
														"nodeType": "YulTypedName",
														"src": "1072:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1083:7:5",
														"nodeType": "YulTypedName",
														"src": "1083:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1095:6:5",
														"nodeType": "YulTypedName",
														"src": "1095:6:5",
														"type": ""
													}
												],
												"src": "1012:377:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1478 CODESIZE SUB DUP1 PUSH3 0x1478 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0xE9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x119 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA0 DUP3 PUSH3 0x75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB3 DUP3 PUSH3 0x94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC5 DUP2 PUSH3 0xA7 JUMP JUMPDEST DUP2 EQ PUSH3 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xE3 DUP2 PUSH3 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x110 DUP5 DUP3 DUP6 ADD PUSH3 0xD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1323 PUSH3 0x155 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x25E ADD MSTORE DUP2 DUP2 PUSH2 0x34A ADD MSTORE DUP2 DUP2 PUSH2 0x5C5 ADD MSTORE DUP2 DUP2 PUSH2 0x652 ADD MSTORE DUP2 DUP2 PUSH2 0x730 ADD MSTORE PUSH2 0x860 ADD MSTORE PUSH2 0x1323 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x3E11F2E9 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x93707A19 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x107 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP3 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH32 0x30F1C21600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE10 DUP3 DUP5 PUSH0 ADD MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH0 ADD MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST LT ISZERO PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP1 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38E CALLER DUP3 DUP6 PUSH0 ADD MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCECCCF974394B5DFC20E8840042BBAA68E166EFF261BA930E076891582965D41 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0xE10 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x52A JUMPI PUSH0 SWAP2 POP POP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x3C TIMESTAMP PUSH2 0xE10 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60A CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x901 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST LT PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71F SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x775 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x901 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8FC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8B5 SWAP3 SWAP2 SWAP1 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x983 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x97D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x936 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x983 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9AD DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA18 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x1240 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA13 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA25 DUP4 DUP4 PUSH0 PUSH2 0xA2D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xA74 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xADB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xAEB DUP7 DUP4 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xB0B JUMPI PUSH2 0xB06 DUP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xB31 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB73 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xB95 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBF4 DUP3 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC04 DUP2 PUSH2 0xBEA JUMP JUMPDEST DUP2 EQ PUSH2 0xC0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC1F DUP2 PUSH2 0xBFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC47 DUP5 DUP3 DUP6 ADD PUSH2 0xC11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7B PUSH0 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC94 PUSH0 DUP4 ADD DUP6 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xCA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCB1 DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP2 EQ PUSH2 0xCBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCCC DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE6 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF4 DUP5 DUP3 DUP6 ADD PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD20 PUSH2 0xD1B PUSH2 0xD16 DUP5 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD31 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xD38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6B PUSH0 DUP4 ADD DUP5 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20546F6B656E73205374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDB5 PUSH1 0x10 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC0 DUP3 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDE2 DUP2 PUSH2 0xDA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE20 DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E2774207769746864726177206265666F7265203120686F7572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE7D PUSH1 0x20 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAA DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBB DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC6 DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDD PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEEE DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF07 DUP2 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF5C DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xF67 DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xF25 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xBEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE0 DUP5 DUP3 DUP6 ADD PUSH2 0xFAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F756768204D6F6E657920746F20676976652072657761726400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x101D PUSH1 0x1F DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1028 DUP3 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104A DUP2 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7527726520737570706F73656420746F20656E746572206120706F736974 PUSH0 DUP3 ADD MSTORE PUSH32 0x6976652076616C75650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10AB PUSH1 0x29 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B6 DUP3 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D8 DUP2 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1113 PUSH1 0x14 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x111E DUP3 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1140 DUP2 PUSH2 0x1107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206861766520656E6F7567682062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x117B PUSH1 0x1D DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 DUP3 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A8 DUP2 PUSH2 0x116F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11C2 PUSH0 DUP4 ADD DUP6 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x11CF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11E9 PUSH0 DUP4 ADD DUP7 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x11F6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x1203 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121F DUP2 PUSH2 0x120B JUMP JUMPDEST DUP2 EQ PUSH2 0x1229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x123A DUP2 PUSH2 0x1216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1262 DUP5 DUP3 DUP6 ADD PUSH2 0x122C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x129C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1281 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x12BB DUP2 DUP6 PUSH2 0x1275 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x127F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12E2 DUP3 DUP5 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x59D0A87615C2244FCB0FBB PUSH29 0x7FE2C68DF4BC406EC61CA08B65E5DEF1F7D70C64736F6C634300081800 CALLER ",
							"sourceMap": "264:3509:4:-:0;;;778:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;830:6;822:14;;;;;;;;;;778:66;264:3509;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;264:3509:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 2435,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 2947,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 2605,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 2584,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fundRewards_907": {
									"entryPoint": 1403,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_190": {
									"entryPoint": 2305,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 2178,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_774": {
									"entryPoint": 1549,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakers_701": {
									"entryPoint": 1372,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@timeUntilWithdrawable_945": {
									"entryPoint": 1195,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_667": {
									"entryPoint": 2142,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 2806,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_880": {
									"entryPoint": 293,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14471:5",
										"nodeType": "YulBlock",
										"src": "0:14471:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "907:263:5",
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:5",
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nativeSrc": "955:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nativeSrc": "955:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nativeSrc": "924:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nativeSrc": "920:32:5",
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nativeSrc": "917:119:5",
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nativeSrc": "1046:117:5",
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nativeSrc": "1061:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nativeSrc": "1100:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:5",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:5",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nativeSrc": "1221:32:5",
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nativeSrc": "1231:16:5",
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:5",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:5",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:5",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1481:124:5",
													"nodeType": "YulBlock",
													"src": "1481:124:5",
													"statements": [
														{
															"nativeSrc": "1491:26:5",
															"nodeType": "YulAssignment",
															"src": "1491:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:5"
																},
																"nativeSrc": "1499:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:5"
																		},
																		"nativeSrc": "1580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:5"
																},
																"nativeSrc": "1527:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:5"
															},
															"nativeSrc": "1527:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:5",
														"nodeType": "YulTypedName",
														"src": "1453:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:5",
														"nodeType": "YulTypedName",
														"src": "1465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:5",
														"nodeType": "YulTypedName",
														"src": "1476:4:5",
														"type": ""
													}
												],
												"src": "1383:222:5"
											},
											{
												"body": {
													"nativeSrc": "1737:206:5",
													"nodeType": "YulBlock",
													"src": "1737:206:5",
													"statements": [
														{
															"nativeSrc": "1747:26:5",
															"nodeType": "YulAssignment",
															"src": "1747:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1759:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1759:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1770:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1770:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1755:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:5"
																},
																"nativeSrc": "1755:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1755:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1747:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1747:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1827:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1851:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1851:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1836:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:5"
																		},
																		"nativeSrc": "1836:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1836:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1783:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1783:43:5"
																},
																"nativeSrc": "1783:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1783:71:5"
															},
															"nativeSrc": "1783:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1783:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1908:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1921:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1921:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1932:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1917:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:5"
																		},
																		"nativeSrc": "1917:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1917:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1864:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1864:43:5"
																},
																"nativeSrc": "1864:72:5",
																"nodeType": "YulFunctionCall",
																"src": "1864:72:5"
															},
															"nativeSrc": "1864:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "1864:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1611:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1701:9:5",
														"nodeType": "YulTypedName",
														"src": "1701:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1713:6:5",
														"nodeType": "YulTypedName",
														"src": "1713:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1721:6:5",
														"nodeType": "YulTypedName",
														"src": "1721:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1732:4:5",
														"nodeType": "YulTypedName",
														"src": "1732:4:5",
														"type": ""
													}
												],
												"src": "1611:332:5"
											},
											{
												"body": {
													"nativeSrc": "1992:79:5",
													"nodeType": "YulBlock",
													"src": "1992:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2049:16:5",
																"nodeType": "YulBlock",
																"src": "2049:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2058:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2058:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2051:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2051:6:5"
																			},
																			"nativeSrc": "2051:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2051:12:5"
																		},
																		"nativeSrc": "2051:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2051:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2015:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2015:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2040:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2040:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2022:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2022:17:5"
																				},
																				"nativeSrc": "2022:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2022:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2012:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2012:2:5"
																		},
																		"nativeSrc": "2012:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2012:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2005:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2005:6:5"
																},
																"nativeSrc": "2005:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2005:43:5"
															},
															"nativeSrc": "2002:63:5",
															"nodeType": "YulIf",
															"src": "2002:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1949:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1985:5:5",
														"nodeType": "YulTypedName",
														"src": "1985:5:5",
														"type": ""
													}
												],
												"src": "1949:122:5"
											},
											{
												"body": {
													"nativeSrc": "2129:87:5",
													"nodeType": "YulBlock",
													"src": "2129:87:5",
													"statements": [
														{
															"nativeSrc": "2139:29:5",
															"nodeType": "YulAssignment",
															"src": "2139:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2161:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2161:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2148:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2148:12:5"
																},
																"nativeSrc": "2148:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2148:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2139:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2139:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2204:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2204:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2177:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2177:26:5"
																},
																"nativeSrc": "2177:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2177:33:5"
															},
															"nativeSrc": "2177:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2177:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2077:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2107:6:5",
														"nodeType": "YulTypedName",
														"src": "2107:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2115:3:5",
														"nodeType": "YulTypedName",
														"src": "2115:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2123:5:5",
														"nodeType": "YulTypedName",
														"src": "2123:5:5",
														"type": ""
													}
												],
												"src": "2077:139:5"
											},
											{
												"body": {
													"nativeSrc": "2288:263:5",
													"nodeType": "YulBlock",
													"src": "2288:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2334:83:5",
																"nodeType": "YulBlock",
																"src": "2334:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2336:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2336:77:5"
																			},
																			"nativeSrc": "2336:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2336:79:5"
																		},
																		"nativeSrc": "2336:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2336:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2309:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2309:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2318:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2318:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2305:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:5"
																		},
																		"nativeSrc": "2305:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2305:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2301:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:5"
																},
																"nativeSrc": "2301:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2301:32:5"
															},
															"nativeSrc": "2298:119:5",
															"nodeType": "YulIf",
															"src": "2298:119:5"
														},
														{
															"nativeSrc": "2427:117:5",
															"nodeType": "YulBlock",
															"src": "2427:117:5",
															"statements": [
																{
																	"nativeSrc": "2442:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2442:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2456:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2456:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2446:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2446:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2471:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2471:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2506:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2506:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2517:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2517:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2502:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2502:3:5"
																				},
																				"nativeSrc": "2502:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2502:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2526:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2526:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2481:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2481:20:5"
																		},
																		"nativeSrc": "2481:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2471:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2471:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2222:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2258:9:5",
														"nodeType": "YulTypedName",
														"src": "2258:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2269:7:5",
														"nodeType": "YulTypedName",
														"src": "2269:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2281:6:5",
														"nodeType": "YulTypedName",
														"src": "2281:6:5",
														"type": ""
													}
												],
												"src": "2222:329:5"
											},
											{
												"body": {
													"nativeSrc": "2589:28:5",
													"nodeType": "YulBlock",
													"src": "2589:28:5",
													"statements": [
														{
															"nativeSrc": "2599:12:5",
															"nodeType": "YulAssignment",
															"src": "2599:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2606:5:5",
																"nodeType": "YulIdentifier",
																"src": "2606:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2599:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2599:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2557:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2575:5:5",
														"nodeType": "YulTypedName",
														"src": "2575:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2585:3:5",
														"nodeType": "YulTypedName",
														"src": "2585:3:5",
														"type": ""
													}
												],
												"src": "2557:60:5"
											},
											{
												"body": {
													"nativeSrc": "2683:82:5",
													"nodeType": "YulBlock",
													"src": "2683:82:5",
													"statements": [
														{
															"nativeSrc": "2693:66:5",
															"nodeType": "YulAssignment",
															"src": "2693:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2751:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2751:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2733:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2733:17:5"
																				},
																				"nativeSrc": "2733:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2733:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2724:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2724:8:5"
																		},
																		"nativeSrc": "2724:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2706:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2706:17:5"
																},
																"nativeSrc": "2706:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2706:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2693:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2693:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2623:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2663:5:5",
														"nodeType": "YulTypedName",
														"src": "2663:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2673:9:5",
														"nodeType": "YulTypedName",
														"src": "2673:9:5",
														"type": ""
													}
												],
												"src": "2623:142:5"
											},
											{
												"body": {
													"nativeSrc": "2831:66:5",
													"nodeType": "YulBlock",
													"src": "2831:66:5",
													"statements": [
														{
															"nativeSrc": "2841:50:5",
															"nodeType": "YulAssignment",
															"src": "2841:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2885:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2854:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2854:30:5"
																},
																"nativeSrc": "2854:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2854:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2841:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2841:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2771:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2811:5:5",
														"nodeType": "YulTypedName",
														"src": "2811:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2821:9:5",
														"nodeType": "YulTypedName",
														"src": "2821:9:5",
														"type": ""
													}
												],
												"src": "2771:126:5"
											},
											{
												"body": {
													"nativeSrc": "2976:66:5",
													"nodeType": "YulBlock",
													"src": "2976:66:5",
													"statements": [
														{
															"nativeSrc": "2986:50:5",
															"nodeType": "YulAssignment",
															"src": "2986:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3030:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2999:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2999:30:5"
																},
																"nativeSrc": "2999:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2999:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2986:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2986:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "2903:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2956:5:5",
														"nodeType": "YulTypedName",
														"src": "2956:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2966:9:5",
														"nodeType": "YulTypedName",
														"src": "2966:9:5",
														"type": ""
													}
												],
												"src": "2903:139:5"
											},
											{
												"body": {
													"nativeSrc": "3126:79:5",
													"nodeType": "YulBlock",
													"src": "3126:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3143:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3143:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3192:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3192:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "3148:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "3148:43:5"
																		},
																		"nativeSrc": "3148:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3148:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3136:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3136:6:5"
																},
																"nativeSrc": "3136:63:5",
																"nodeType": "YulFunctionCall",
																"src": "3136:63:5"
															},
															"nativeSrc": "3136:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "3136:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "3048:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3114:5:5",
														"nodeType": "YulTypedName",
														"src": "3114:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3121:3:5",
														"nodeType": "YulTypedName",
														"src": "3121:3:5",
														"type": ""
													}
												],
												"src": "3048:157:5"
											},
											{
												"body": {
													"nativeSrc": "3322:137:5",
													"nodeType": "YulBlock",
													"src": "3322:137:5",
													"statements": [
														{
															"nativeSrc": "3332:26:5",
															"nodeType": "YulAssignment",
															"src": "3332:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:5"
																},
																"nativeSrc": "3340:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3425:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3425:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3438:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3438:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3449:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3449:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3434:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3434:3:5"
																		},
																		"nativeSrc": "3434:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3434:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "3368:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "3368:56:5"
																},
																"nativeSrc": "3368:84:5",
																"nodeType": "YulFunctionCall",
																"src": "3368:84:5"
															},
															"nativeSrc": "3368:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "3368:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "3211:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:5",
														"nodeType": "YulTypedName",
														"src": "3294:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:5",
														"nodeType": "YulTypedName",
														"src": "3306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:5",
														"nodeType": "YulTypedName",
														"src": "3317:4:5",
														"type": ""
													}
												],
												"src": "3211:248:5"
											},
											{
												"body": {
													"nativeSrc": "3561:73:5",
													"nodeType": "YulBlock",
													"src": "3561:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3578:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3578:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3583:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3571:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3571:6:5"
																},
																"nativeSrc": "3571:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3571:19:5"
															},
															"nativeSrc": "3571:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3571:19:5"
														},
														{
															"nativeSrc": "3599:29:5",
															"nodeType": "YulAssignment",
															"src": "3599:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3618:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3618:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3623:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3623:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3614:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3614:3:5"
																},
																"nativeSrc": "3614:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3614:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3599:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3599:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3465:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3533:3:5",
														"nodeType": "YulTypedName",
														"src": "3533:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3538:6:5",
														"nodeType": "YulTypedName",
														"src": "3538:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3549:11:5",
														"nodeType": "YulTypedName",
														"src": "3549:11:5",
														"type": ""
													}
												],
												"src": "3465:169:5"
											},
											{
												"body": {
													"nativeSrc": "3746:60:5",
													"nodeType": "YulBlock",
													"src": "3746:60:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3768:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3768:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3776:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3776:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3764:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:5"
																		},
																		"nativeSrc": "3764:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3764:14:5"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e73205374616b6564",
																		"kind": "string",
																		"nativeSrc": "3780:18:5",
																		"nodeType": "YulLiteral",
																		"src": "3780:18:5",
																		"type": "",
																		"value": "No Tokens Staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3757:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:5"
																},
																"nativeSrc": "3757:42:5",
																"nodeType": "YulFunctionCall",
																"src": "3757:42:5"
															},
															"nativeSrc": "3757:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "3757:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
												"nativeSrc": "3640:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3738:6:5",
														"nodeType": "YulTypedName",
														"src": "3738:6:5",
														"type": ""
													}
												],
												"src": "3640:166:5"
											},
											{
												"body": {
													"nativeSrc": "3958:220:5",
													"nodeType": "YulBlock",
													"src": "3958:220:5",
													"statements": [
														{
															"nativeSrc": "3968:74:5",
															"nodeType": "YulAssignment",
															"src": "3968:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4034:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4034:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4039:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4039:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3975:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "3975:58:5"
																},
																"nativeSrc": "3975:67:5",
																"nodeType": "YulFunctionCall",
																"src": "3975:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3968:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3968:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4140:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4140:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
																	"nativeSrc": "4051:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4051:88:5"
																},
																"nativeSrc": "4051:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4051:93:5"
															},
															"nativeSrc": "4051:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4051:93:5"
														},
														{
															"nativeSrc": "4153:19:5",
															"nodeType": "YulAssignment",
															"src": "4153:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4164:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4169:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4169:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4160:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4160:3:5"
																},
																"nativeSrc": "4160:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4160:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4153:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4153:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3812:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3946:3:5",
														"nodeType": "YulTypedName",
														"src": "3946:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3954:3:5",
														"nodeType": "YulTypedName",
														"src": "3954:3:5",
														"type": ""
													}
												],
												"src": "3812:366:5"
											},
											{
												"body": {
													"nativeSrc": "4355:248:5",
													"nodeType": "YulBlock",
													"src": "4355:248:5",
													"statements": [
														{
															"nativeSrc": "4365:26:5",
															"nodeType": "YulAssignment",
															"src": "4365:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4377:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4377:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4388:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4388:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4373:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:5"
																},
																"nativeSrc": "4373:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4373:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4365:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4365:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4423:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4408:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4408:3:5"
																		},
																		"nativeSrc": "4408:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4408:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4431:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4431:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4437:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4437:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4427:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4427:3:5"
																		},
																		"nativeSrc": "4427:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4427:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4401:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:5"
																},
																"nativeSrc": "4401:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4401:47:5"
															},
															"nativeSrc": "4401:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4401:47:5"
														},
														{
															"nativeSrc": "4457:139:5",
															"nodeType": "YulAssignment",
															"src": "4457:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4591:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4591:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4465:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4465:124:5"
																},
																"nativeSrc": "4465:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4465:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4457:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4457:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4184:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4335:9:5",
														"nodeType": "YulTypedName",
														"src": "4335:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4350:4:5",
														"nodeType": "YulTypedName",
														"src": "4350:4:5",
														"type": ""
													}
												],
												"src": "4184:419:5"
											},
											{
												"body": {
													"nativeSrc": "4637:152:5",
													"nodeType": "YulBlock",
													"src": "4637:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4654:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4657:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4657:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4647:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:5"
																},
																"nativeSrc": "4647:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4647:88:5"
															},
															"nativeSrc": "4647:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4647:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4751:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4751:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4754:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4754:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4744:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:5"
																},
																"nativeSrc": "4744:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4744:15:5"
															},
															"nativeSrc": "4744:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4744:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4775:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4775:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4778:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4778:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4768:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4768:6:5"
																},
																"nativeSrc": "4768:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4768:15:5"
															},
															"nativeSrc": "4768:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4768:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4609:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4609:180:5"
											},
											{
												"body": {
													"nativeSrc": "4839:147:5",
													"nodeType": "YulBlock",
													"src": "4839:147:5",
													"statements": [
														{
															"nativeSrc": "4849:25:5",
															"nodeType": "YulAssignment",
															"src": "4849:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4872:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4872:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4854:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4854:17:5"
																},
																"nativeSrc": "4854:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4854:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4849:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4849:1:5"
																}
															]
														},
														{
															"nativeSrc": "4883:25:5",
															"nodeType": "YulAssignment",
															"src": "4883:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4906:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4906:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4888:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4888:17:5"
																},
																"nativeSrc": "4888:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4888:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4883:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4883:1:5"
																}
															]
														},
														{
															"nativeSrc": "4917:16:5",
															"nodeType": "YulAssignment",
															"src": "4917:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4928:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4928:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4931:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4931:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4924:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:5"
																},
																"nativeSrc": "4924:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4924:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4917:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4957:22:5",
																"nodeType": "YulBlock",
																"src": "4957:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4959:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4959:16:5"
																			},
																			"nativeSrc": "4959:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4959:18:5"
																		},
																		"nativeSrc": "4959:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4959:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4949:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4949:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4952:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4952:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4946:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4946:2:5"
																},
																"nativeSrc": "4946:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4946:10:5"
															},
															"nativeSrc": "4943:36:5",
															"nodeType": "YulIf",
															"src": "4943:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4795:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4826:1:5",
														"nodeType": "YulTypedName",
														"src": "4826:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4829:1:5",
														"nodeType": "YulTypedName",
														"src": "4829:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4835:3:5",
														"nodeType": "YulTypedName",
														"src": "4835:3:5",
														"type": ""
													}
												],
												"src": "4795:191:5"
											},
											{
												"body": {
													"nativeSrc": "5098:76:5",
													"nodeType": "YulBlock",
													"src": "5098:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5120:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5128:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5128:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5116:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:5"
																		},
																		"nativeSrc": "5116:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:14:5"
																	},
																	{
																		"hexValue": "596f752063616e2774207769746864726177206265666f7265203120686f7572",
																		"kind": "string",
																		"nativeSrc": "5132:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5132:34:5",
																		"type": "",
																		"value": "You can't withdraw before 1 hour"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5109:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:5"
																},
																"nativeSrc": "5109:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5109:58:5"
															},
															"nativeSrc": "5109:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5109:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
												"nativeSrc": "4992:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5090:6:5",
														"nodeType": "YulTypedName",
														"src": "5090:6:5",
														"type": ""
													}
												],
												"src": "4992:182:5"
											},
											{
												"body": {
													"nativeSrc": "5326:220:5",
													"nodeType": "YulBlock",
													"src": "5326:220:5",
													"statements": [
														{
															"nativeSrc": "5336:74:5",
															"nodeType": "YulAssignment",
															"src": "5336:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5402:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5402:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5407:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5407:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5343:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5343:58:5"
																},
																"nativeSrc": "5343:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5343:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5336:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5336:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5508:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
																	"nativeSrc": "5419:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5419:88:5"
																},
																"nativeSrc": "5419:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5419:93:5"
															},
															"nativeSrc": "5419:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5419:93:5"
														},
														{
															"nativeSrc": "5521:19:5",
															"nodeType": "YulAssignment",
															"src": "5521:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5532:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5532:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5528:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:5"
																},
																"nativeSrc": "5528:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5528:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5521:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5180:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5314:3:5",
														"nodeType": "YulTypedName",
														"src": "5314:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5322:3:5",
														"nodeType": "YulTypedName",
														"src": "5322:3:5",
														"type": ""
													}
												],
												"src": "5180:366:5"
											},
											{
												"body": {
													"nativeSrc": "5723:248:5",
													"nodeType": "YulBlock",
													"src": "5723:248:5",
													"statements": [
														{
															"nativeSrc": "5733:26:5",
															"nodeType": "YulAssignment",
															"src": "5733:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5745:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5745:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5756:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5756:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5741:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:5"
																},
																"nativeSrc": "5741:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5741:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5733:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5733:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5780:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5791:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5791:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5776:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:5"
																		},
																		"nativeSrc": "5776:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5776:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5799:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5799:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5805:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5805:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5795:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:5"
																		},
																		"nativeSrc": "5795:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5769:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:5"
																},
																"nativeSrc": "5769:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5769:47:5"
															},
															"nativeSrc": "5769:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5769:47:5"
														},
														{
															"nativeSrc": "5825:139:5",
															"nodeType": "YulAssignment",
															"src": "5825:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5959:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5959:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5833:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5833:124:5"
																},
																"nativeSrc": "5833:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5833:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5825:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5825:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5552:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5703:9:5",
														"nodeType": "YulTypedName",
														"src": "5703:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5718:4:5",
														"nodeType": "YulTypedName",
														"src": "5718:4:5",
														"type": ""
													}
												],
												"src": "5552:419:5"
											},
											{
												"body": {
													"nativeSrc": "6022:149:5",
													"nodeType": "YulBlock",
													"src": "6022:149:5",
													"statements": [
														{
															"nativeSrc": "6032:25:5",
															"nodeType": "YulAssignment",
															"src": "6032:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6055:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6055:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6037:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6037:17:5"
																},
																"nativeSrc": "6037:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6037:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6032:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6032:1:5"
																}
															]
														},
														{
															"nativeSrc": "6066:25:5",
															"nodeType": "YulAssignment",
															"src": "6066:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6089:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6089:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6071:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6071:17:5"
																},
																"nativeSrc": "6071:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6071:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6066:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6066:1:5"
																}
															]
														},
														{
															"nativeSrc": "6100:17:5",
															"nodeType": "YulAssignment",
															"src": "6100:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6112:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6112:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6115:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6115:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6108:3:5"
																},
																"nativeSrc": "6108:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6108:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6100:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6100:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6142:22:5",
																"nodeType": "YulBlock",
																"src": "6142:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6144:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6144:16:5"
																			},
																			"nativeSrc": "6144:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6144:18:5"
																		},
																		"nativeSrc": "6144:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6133:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6133:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6130:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6130:2:5"
																},
																"nativeSrc": "6130:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6130:11:5"
															},
															"nativeSrc": "6127:37:5",
															"nodeType": "YulIf",
															"src": "6127:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5977:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6008:1:5",
														"nodeType": "YulTypedName",
														"src": "6008:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6011:1:5",
														"nodeType": "YulTypedName",
														"src": "6011:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6017:4:5",
														"nodeType": "YulTypedName",
														"src": "6017:4:5",
														"type": ""
													}
												],
												"src": "5977:194:5"
											},
											{
												"body": {
													"nativeSrc": "6225:362:5",
													"nodeType": "YulBlock",
													"src": "6225:362:5",
													"statements": [
														{
															"nativeSrc": "6235:25:5",
															"nodeType": "YulAssignment",
															"src": "6235:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6258:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6258:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6240:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6240:17:5"
																},
																"nativeSrc": "6240:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6240:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6235:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6235:1:5"
																}
															]
														},
														{
															"nativeSrc": "6269:25:5",
															"nodeType": "YulAssignment",
															"src": "6269:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6292:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6292:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6274:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6274:17:5"
																},
																"nativeSrc": "6274:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6274:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6269:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6269:1:5"
																}
															]
														},
														{
															"nativeSrc": "6303:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6303:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6326:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6326:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6329:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6329:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6322:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6322:3:5"
																},
																"nativeSrc": "6322:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6322:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6307:11:5",
																	"nodeType": "YulTypedName",
																	"src": "6307:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6340:41:5",
															"nodeType": "YulAssignment",
															"src": "6340:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6369:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "6369:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6351:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6351:17:5"
																},
																"nativeSrc": "6351:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6351:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6340:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "6340:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6558:22:5",
																"nodeType": "YulBlock",
																"src": "6558:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6560:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6560:16:5"
																			},
																			"nativeSrc": "6560:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6560:18:5"
																		},
																		"nativeSrc": "6560:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6560:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6491:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6491:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6484:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6484:6:5"
																				},
																				"nativeSrc": "6484:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6484:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6514:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6514:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6521:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "6521:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6530:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "6530:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6517:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6517:3:5"
																						},
																						"nativeSrc": "6517:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6517:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6511:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6511:2:5"
																				},
																				"nativeSrc": "6511:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6511:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6464:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6464:2:5"
																		},
																		"nativeSrc": "6464:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6464:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6444:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:5"
																},
																"nativeSrc": "6444:113:5",
																"nodeType": "YulFunctionCall",
																"src": "6444:113:5"
															},
															"nativeSrc": "6441:139:5",
															"nodeType": "YulIf",
															"src": "6441:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6177:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6208:1:5",
														"nodeType": "YulTypedName",
														"src": "6208:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6211:1:5",
														"nodeType": "YulTypedName",
														"src": "6211:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6217:7:5",
														"nodeType": "YulTypedName",
														"src": "6217:7:5",
														"type": ""
													}
												],
												"src": "6177:410:5"
											},
											{
												"body": {
													"nativeSrc": "6621:152:5",
													"nodeType": "YulBlock",
													"src": "6621:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6638:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6638:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6641:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6641:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6631:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6631:6:5"
																},
																"nativeSrc": "6631:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6631:88:5"
															},
															"nativeSrc": "6631:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6631:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6735:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6735:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6738:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6738:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6728:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6728:6:5"
																},
																"nativeSrc": "6728:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6728:15:5"
															},
															"nativeSrc": "6728:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6728:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6759:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6762:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6752:6:5"
																},
																"nativeSrc": "6752:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6752:15:5"
															},
															"nativeSrc": "6752:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6752:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6593:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6593:180:5"
											},
											{
												"body": {
													"nativeSrc": "6821:143:5",
													"nodeType": "YulBlock",
													"src": "6821:143:5",
													"statements": [
														{
															"nativeSrc": "6831:25:5",
															"nodeType": "YulAssignment",
															"src": "6831:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6854:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6836:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6836:17:5"
																},
																"nativeSrc": "6836:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6836:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6831:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6831:1:5"
																}
															]
														},
														{
															"nativeSrc": "6865:25:5",
															"nodeType": "YulAssignment",
															"src": "6865:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6888:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6888:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6870:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6870:17:5"
																},
																"nativeSrc": "6870:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6870:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6865:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6865:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6912:22:5",
																"nodeType": "YulBlock",
																"src": "6912:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6914:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6914:16:5"
																			},
																			"nativeSrc": "6914:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:18:5"
																		},
																		"nativeSrc": "6914:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6914:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6909:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6909:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6902:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6902:6:5"
																},
																"nativeSrc": "6902:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6902:9:5"
															},
															"nativeSrc": "6899:35:5",
															"nodeType": "YulIf",
															"src": "6899:35:5"
														},
														{
															"nativeSrc": "6944:14:5",
															"nodeType": "YulAssignment",
															"src": "6944:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6953:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6953:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6956:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6956:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6949:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:5"
																},
																"nativeSrc": "6949:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6949:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6944:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6944:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6779:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6810:1:5",
														"nodeType": "YulTypedName",
														"src": "6810:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6813:1:5",
														"nodeType": "YulTypedName",
														"src": "6813:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6819:1:5",
														"nodeType": "YulTypedName",
														"src": "6819:1:5",
														"type": ""
													}
												],
												"src": "6779:185:5"
											},
											{
												"body": {
													"nativeSrc": "7035:53:5",
													"nodeType": "YulBlock",
													"src": "7035:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7052:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7052:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7075:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7075:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7057:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "7057:17:5"
																		},
																		"nativeSrc": "7057:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7057:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7045:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7045:6:5"
																},
																"nativeSrc": "7045:37:5",
																"nodeType": "YulFunctionCall",
																"src": "7045:37:5"
															},
															"nativeSrc": "7045:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "7045:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6970:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7023:5:5",
														"nodeType": "YulTypedName",
														"src": "7023:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7030:3:5",
														"nodeType": "YulTypedName",
														"src": "7030:3:5",
														"type": ""
													}
												],
												"src": "6970:118:5"
											},
											{
												"body": {
													"nativeSrc": "7192:124:5",
													"nodeType": "YulBlock",
													"src": "7192:124:5",
													"statements": [
														{
															"nativeSrc": "7202:26:5",
															"nodeType": "YulAssignment",
															"src": "7202:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7214:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7214:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7225:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7225:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7210:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:5"
																},
																"nativeSrc": "7210:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7210:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7202:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7202:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7282:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7282:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7295:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7295:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7306:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7306:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7291:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7291:3:5"
																		},
																		"nativeSrc": "7291:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7291:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7238:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7238:43:5"
																},
																"nativeSrc": "7238:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7238:71:5"
															},
															"nativeSrc": "7238:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7238:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7094:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7164:9:5",
														"nodeType": "YulTypedName",
														"src": "7164:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7176:6:5",
														"nodeType": "YulTypedName",
														"src": "7176:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7187:4:5",
														"nodeType": "YulTypedName",
														"src": "7187:4:5",
														"type": ""
													}
												],
												"src": "7094:222:5"
											},
											{
												"body": {
													"nativeSrc": "7385:80:5",
													"nodeType": "YulBlock",
													"src": "7385:80:5",
													"statements": [
														{
															"nativeSrc": "7395:22:5",
															"nodeType": "YulAssignment",
															"src": "7395:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7410:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7410:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7404:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7404:5:5"
																},
																"nativeSrc": "7404:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7404:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7395:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7395:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7453:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7453:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7426:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "7426:26:5"
																},
																"nativeSrc": "7426:33:5",
																"nodeType": "YulFunctionCall",
																"src": "7426:33:5"
															},
															"nativeSrc": "7426:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "7426:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7322:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7363:6:5",
														"nodeType": "YulTypedName",
														"src": "7363:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7371:3:5",
														"nodeType": "YulTypedName",
														"src": "7371:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7379:5:5",
														"nodeType": "YulTypedName",
														"src": "7379:5:5",
														"type": ""
													}
												],
												"src": "7322:143:5"
											},
											{
												"body": {
													"nativeSrc": "7548:274:5",
													"nodeType": "YulBlock",
													"src": "7548:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7594:83:5",
																"nodeType": "YulBlock",
																"src": "7594:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7596:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7596:77:5"
																			},
																			"nativeSrc": "7596:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7596:79:5"
																		},
																		"nativeSrc": "7596:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7596:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7569:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7569:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7578:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7578:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7565:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7565:3:5"
																		},
																		"nativeSrc": "7565:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7565:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7590:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7590:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7561:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7561:3:5"
																},
																"nativeSrc": "7561:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7561:32:5"
															},
															"nativeSrc": "7558:119:5",
															"nodeType": "YulIf",
															"src": "7558:119:5"
														},
														{
															"nativeSrc": "7687:128:5",
															"nodeType": "YulBlock",
															"src": "7687:128:5",
															"statements": [
																{
																	"nativeSrc": "7702:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7702:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7716:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7716:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7706:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7706:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7731:74:5",
																	"nodeType": "YulAssignment",
																	"src": "7731:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7777:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7777:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7788:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7788:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7773:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7773:3:5"
																				},
																				"nativeSrc": "7773:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7773:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7797:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7797:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7741:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "7741:31:5"
																		},
																		"nativeSrc": "7741:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7741:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7731:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7731:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7471:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7518:9:5",
														"nodeType": "YulTypedName",
														"src": "7518:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7529:7:5",
														"nodeType": "YulTypedName",
														"src": "7529:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7541:6:5",
														"nodeType": "YulTypedName",
														"src": "7541:6:5",
														"type": ""
													}
												],
												"src": "7471:351:5"
											},
											{
												"body": {
													"nativeSrc": "7934:75:5",
													"nodeType": "YulBlock",
													"src": "7934:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7956:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7956:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7964:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7964:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7952:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7952:3:5"
																		},
																		"nativeSrc": "7952:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7952:14:5"
																	},
																	{
																		"hexValue": "4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264",
																		"kind": "string",
																		"nativeSrc": "7968:33:5",
																		"nodeType": "YulLiteral",
																		"src": "7968:33:5",
																		"type": "",
																		"value": "Not Enough Money to give reward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7945:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7945:6:5"
																},
																"nativeSrc": "7945:57:5",
																"nodeType": "YulFunctionCall",
																"src": "7945:57:5"
															},
															"nativeSrc": "7945:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "7945:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
												"nativeSrc": "7828:181:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7926:6:5",
														"nodeType": "YulTypedName",
														"src": "7926:6:5",
														"type": ""
													}
												],
												"src": "7828:181:5"
											},
											{
												"body": {
													"nativeSrc": "8161:220:5",
													"nodeType": "YulBlock",
													"src": "8161:220:5",
													"statements": [
														{
															"nativeSrc": "8171:74:5",
															"nodeType": "YulAssignment",
															"src": "8171:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8237:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8237:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8242:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8178:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8178:58:5"
																},
																"nativeSrc": "8178:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8178:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8171:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8171:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8343:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8343:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
																	"nativeSrc": "8254:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8254:88:5"
																},
																"nativeSrc": "8254:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8254:93:5"
															},
															"nativeSrc": "8254:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8254:93:5"
														},
														{
															"nativeSrc": "8356:19:5",
															"nodeType": "YulAssignment",
															"src": "8356:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8367:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8367:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8372:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8372:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8363:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8363:3:5"
																},
																"nativeSrc": "8363:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8363:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8356:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8356:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8015:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8149:3:5",
														"nodeType": "YulTypedName",
														"src": "8149:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8157:3:5",
														"nodeType": "YulTypedName",
														"src": "8157:3:5",
														"type": ""
													}
												],
												"src": "8015:366:5"
											},
											{
												"body": {
													"nativeSrc": "8558:248:5",
													"nodeType": "YulBlock",
													"src": "8558:248:5",
													"statements": [
														{
															"nativeSrc": "8568:26:5",
															"nodeType": "YulAssignment",
															"src": "8568:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8580:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8580:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8591:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8591:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8576:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8576:3:5"
																},
																"nativeSrc": "8576:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8576:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8568:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8568:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8615:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8615:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8626:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8626:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8611:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8611:3:5"
																		},
																		"nativeSrc": "8611:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8611:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8634:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8634:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8640:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8640:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8630:3:5"
																		},
																		"nativeSrc": "8630:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8630:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8604:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8604:6:5"
																},
																"nativeSrc": "8604:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8604:47:5"
															},
															"nativeSrc": "8604:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8604:47:5"
														},
														{
															"nativeSrc": "8660:139:5",
															"nodeType": "YulAssignment",
															"src": "8660:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8794:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8794:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8668:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8668:124:5"
																},
																"nativeSrc": "8668:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8668:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8660:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8660:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8387:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8538:9:5",
														"nodeType": "YulTypedName",
														"src": "8538:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8553:4:5",
														"nodeType": "YulTypedName",
														"src": "8553:4:5",
														"type": ""
													}
												],
												"src": "8387:419:5"
											},
											{
												"body": {
													"nativeSrc": "8918:122:5",
													"nodeType": "YulBlock",
													"src": "8918:122:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8940:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8940:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8948:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8948:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8936:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8936:3:5"
																		},
																		"nativeSrc": "8936:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8936:14:5"
																	},
																	{
																		"hexValue": "596f7527726520737570706f73656420746f20656e746572206120706f736974",
																		"kind": "string",
																		"nativeSrc": "8952:34:5",
																		"nodeType": "YulLiteral",
																		"src": "8952:34:5",
																		"type": "",
																		"value": "You're supposed to enter a posit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8929:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8929:6:5"
																},
																"nativeSrc": "8929:58:5",
																"nodeType": "YulFunctionCall",
																"src": "8929:58:5"
															},
															"nativeSrc": "8929:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "8929:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9008:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9008:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9016:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9016:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9004:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9004:3:5"
																		},
																		"nativeSrc": "9004:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9004:15:5"
																	},
																	{
																		"hexValue": "6976652076616c7565",
																		"kind": "string",
																		"nativeSrc": "9021:11:5",
																		"nodeType": "YulLiteral",
																		"src": "9021:11:5",
																		"type": "",
																		"value": "ive value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8997:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:5"
																},
																"nativeSrc": "8997:36:5",
																"nodeType": "YulFunctionCall",
																"src": "8997:36:5"
															},
															"nativeSrc": "8997:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "8997:36:5"
														}
													]
												},
												"name": "store_literal_in_memory_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4",
												"nativeSrc": "8812:228:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8910:6:5",
														"nodeType": "YulTypedName",
														"src": "8910:6:5",
														"type": ""
													}
												],
												"src": "8812:228:5"
											},
											{
												"body": {
													"nativeSrc": "9192:220:5",
													"nodeType": "YulBlock",
													"src": "9192:220:5",
													"statements": [
														{
															"nativeSrc": "9202:74:5",
															"nodeType": "YulAssignment",
															"src": "9202:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9268:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9268:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9273:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9273:2:5",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9209:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9209:58:5"
																},
																"nativeSrc": "9209:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9209:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9202:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9202:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9374:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9374:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4",
																	"nativeSrc": "9285:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9285:88:5"
																},
																"nativeSrc": "9285:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9285:93:5"
															},
															"nativeSrc": "9285:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9285:93:5"
														},
														{
															"nativeSrc": "9387:19:5",
															"nodeType": "YulAssignment",
															"src": "9387:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9398:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9398:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9403:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9403:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9394:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9394:3:5"
																},
																"nativeSrc": "9394:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9394:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9387:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9046:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9180:3:5",
														"nodeType": "YulTypedName",
														"src": "9180:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9188:3:5",
														"nodeType": "YulTypedName",
														"src": "9188:3:5",
														"type": ""
													}
												],
												"src": "9046:366:5"
											},
											{
												"body": {
													"nativeSrc": "9589:248:5",
													"nodeType": "YulBlock",
													"src": "9589:248:5",
													"statements": [
														{
															"nativeSrc": "9599:26:5",
															"nodeType": "YulAssignment",
															"src": "9599:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9611:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9611:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9622:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9622:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9607:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:5"
																},
																"nativeSrc": "9607:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9607:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9599:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9599:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9646:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9646:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9657:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9657:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9642:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:5"
																		},
																		"nativeSrc": "9642:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9642:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9665:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9665:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9671:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9671:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9661:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9661:3:5"
																		},
																		"nativeSrc": "9661:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9661:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9635:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9635:6:5"
																},
																"nativeSrc": "9635:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9635:47:5"
															},
															"nativeSrc": "9635:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9635:47:5"
														},
														{
															"nativeSrc": "9691:139:5",
															"nodeType": "YulAssignment",
															"src": "9691:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9825:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9825:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9699:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9699:124:5"
																},
																"nativeSrc": "9699:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9699:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9691:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9691:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9418:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9569:9:5",
														"nodeType": "YulTypedName",
														"src": "9569:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9584:4:5",
														"nodeType": "YulTypedName",
														"src": "9584:4:5",
														"type": ""
													}
												],
												"src": "9418:419:5"
											},
											{
												"body": {
													"nativeSrc": "9949:64:5",
													"nodeType": "YulBlock",
													"src": "9949:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9971:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9971:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9979:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9979:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9967:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9967:3:5"
																		},
																		"nativeSrc": "9967:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9967:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9983:22:5",
																		"nodeType": "YulLiteral",
																		"src": "9983:22:5",
																		"type": "",
																		"value": "Insufficient Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9960:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9960:6:5"
																},
																"nativeSrc": "9960:46:5",
																"nodeType": "YulFunctionCall",
																"src": "9960:46:5"
															},
															"nativeSrc": "9960:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "9960:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
												"nativeSrc": "9843:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9941:6:5",
														"nodeType": "YulTypedName",
														"src": "9941:6:5",
														"type": ""
													}
												],
												"src": "9843:170:5"
											},
											{
												"body": {
													"nativeSrc": "10165:220:5",
													"nodeType": "YulBlock",
													"src": "10165:220:5",
													"statements": [
														{
															"nativeSrc": "10175:74:5",
															"nodeType": "YulAssignment",
															"src": "10175:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10241:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10241:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10246:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10246:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10182:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10182:58:5"
																},
																"nativeSrc": "10182:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10182:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10175:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10175:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10347:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10347:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"nativeSrc": "10258:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10258:88:5"
																},
																"nativeSrc": "10258:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10258:93:5"
															},
															"nativeSrc": "10258:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10258:93:5"
														},
														{
															"nativeSrc": "10360:19:5",
															"nodeType": "YulAssignment",
															"src": "10360:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10371:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10371:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10376:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10376:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10367:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:5"
																},
																"nativeSrc": "10367:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10367:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10360:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10360:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10019:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10153:3:5",
														"nodeType": "YulTypedName",
														"src": "10153:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10161:3:5",
														"nodeType": "YulTypedName",
														"src": "10161:3:5",
														"type": ""
													}
												],
												"src": "10019:366:5"
											},
											{
												"body": {
													"nativeSrc": "10562:248:5",
													"nodeType": "YulBlock",
													"src": "10562:248:5",
													"statements": [
														{
															"nativeSrc": "10572:26:5",
															"nodeType": "YulAssignment",
															"src": "10572:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10584:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10584:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10595:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10595:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10580:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10580:3:5"
																},
																"nativeSrc": "10580:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10580:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10572:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10572:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10619:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10619:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10630:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10630:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10615:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10615:3:5"
																		},
																		"nativeSrc": "10615:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10615:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10638:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10638:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10644:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10644:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10634:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10634:3:5"
																		},
																		"nativeSrc": "10634:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10608:6:5"
																},
																"nativeSrc": "10608:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10608:47:5"
															},
															"nativeSrc": "10608:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10608:47:5"
														},
														{
															"nativeSrc": "10664:139:5",
															"nodeType": "YulAssignment",
															"src": "10664:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10798:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10798:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10672:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10672:124:5"
																},
																"nativeSrc": "10672:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10672:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10664:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10664:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10391:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10542:9:5",
														"nodeType": "YulTypedName",
														"src": "10542:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10557:4:5",
														"nodeType": "YulTypedName",
														"src": "10557:4:5",
														"type": ""
													}
												],
												"src": "10391:419:5"
											},
											{
												"body": {
													"nativeSrc": "10922:73:5",
													"nodeType": "YulBlock",
													"src": "10922:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10944:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10944:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10952:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10952:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10940:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10940:3:5"
																		},
																		"nativeSrc": "10940:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10940:14:5"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "10956:31:5",
																		"nodeType": "YulLiteral",
																		"src": "10956:31:5",
																		"type": "",
																		"value": "You don't have enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10933:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10933:6:5"
																},
																"nativeSrc": "10933:55:5",
																"nodeType": "YulFunctionCall",
																"src": "10933:55:5"
															},
															"nativeSrc": "10933:55:5",
															"nodeType": "YulExpressionStatement",
															"src": "10933:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12",
												"nativeSrc": "10816:179:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10914:6:5",
														"nodeType": "YulTypedName",
														"src": "10914:6:5",
														"type": ""
													}
												],
												"src": "10816:179:5"
											},
											{
												"body": {
													"nativeSrc": "11147:220:5",
													"nodeType": "YulBlock",
													"src": "11147:220:5",
													"statements": [
														{
															"nativeSrc": "11157:74:5",
															"nodeType": "YulAssignment",
															"src": "11157:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11223:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11223:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11228:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11228:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11164:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "11164:58:5"
																},
																"nativeSrc": "11164:67:5",
																"nodeType": "YulFunctionCall",
																"src": "11164:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11157:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11157:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11329:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11329:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12",
																	"nativeSrc": "11240:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "11240:88:5"
																},
																"nativeSrc": "11240:93:5",
																"nodeType": "YulFunctionCall",
																"src": "11240:93:5"
															},
															"nativeSrc": "11240:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "11240:93:5"
														},
														{
															"nativeSrc": "11342:19:5",
															"nodeType": "YulAssignment",
															"src": "11342:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11353:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11353:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11358:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11358:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11349:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11349:3:5"
																},
																"nativeSrc": "11349:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11349:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11342:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11342:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11001:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11135:3:5",
														"nodeType": "YulTypedName",
														"src": "11135:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11143:3:5",
														"nodeType": "YulTypedName",
														"src": "11143:3:5",
														"type": ""
													}
												],
												"src": "11001:366:5"
											},
											{
												"body": {
													"nativeSrc": "11544:248:5",
													"nodeType": "YulBlock",
													"src": "11544:248:5",
													"statements": [
														{
															"nativeSrc": "11554:26:5",
															"nodeType": "YulAssignment",
															"src": "11554:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11566:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11566:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11577:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11577:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11562:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:5"
																},
																"nativeSrc": "11562:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11562:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11554:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11554:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11601:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11601:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11612:1:5",
																				"nodeType": "YulLiteral",
																				"src": "11612:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11597:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11597:3:5"
																		},
																		"nativeSrc": "11597:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11597:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11620:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "11620:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11626:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11626:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11616:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11616:3:5"
																		},
																		"nativeSrc": "11616:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11616:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11590:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11590:6:5"
																},
																"nativeSrc": "11590:47:5",
																"nodeType": "YulFunctionCall",
																"src": "11590:47:5"
															},
															"nativeSrc": "11590:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "11590:47:5"
														},
														{
															"nativeSrc": "11646:139:5",
															"nodeType": "YulAssignment",
															"src": "11646:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11780:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11780:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11654:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "11654:124:5"
																},
																"nativeSrc": "11654:131:5",
																"nodeType": "YulFunctionCall",
																"src": "11654:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11646:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11646:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11373:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11524:9:5",
														"nodeType": "YulTypedName",
														"src": "11524:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11539:4:5",
														"nodeType": "YulTypedName",
														"src": "11539:4:5",
														"type": ""
													}
												],
												"src": "11373:419:5"
											},
											{
												"body": {
													"nativeSrc": "11924:206:5",
													"nodeType": "YulBlock",
													"src": "11924:206:5",
													"statements": [
														{
															"nativeSrc": "11934:26:5",
															"nodeType": "YulAssignment",
															"src": "11934:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11946:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11946:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11957:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11957:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11942:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11942:3:5"
																},
																"nativeSrc": "11942:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11942:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11934:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11934:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12014:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12014:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12027:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12027:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12038:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12038:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12023:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12023:3:5"
																		},
																		"nativeSrc": "12023:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12023:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11970:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "11970:43:5"
																},
																"nativeSrc": "11970:71:5",
																"nodeType": "YulFunctionCall",
																"src": "11970:71:5"
															},
															"nativeSrc": "11970:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "11970:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12095:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12095:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12108:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12108:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12119:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12119:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12104:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12104:3:5"
																		},
																		"nativeSrc": "12104:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12104:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12051:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12051:43:5"
																},
																"nativeSrc": "12051:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12051:72:5"
															},
															"nativeSrc": "12051:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12051:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11798:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11888:9:5",
														"nodeType": "YulTypedName",
														"src": "11888:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11900:6:5",
														"nodeType": "YulTypedName",
														"src": "11900:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11908:6:5",
														"nodeType": "YulTypedName",
														"src": "11908:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11919:4:5",
														"nodeType": "YulTypedName",
														"src": "11919:4:5",
														"type": ""
													}
												],
												"src": "11798:332:5"
											},
											{
												"body": {
													"nativeSrc": "12290:288:5",
													"nodeType": "YulBlock",
													"src": "12290:288:5",
													"statements": [
														{
															"nativeSrc": "12300:26:5",
															"nodeType": "YulAssignment",
															"src": "12300:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12312:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12312:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12323:2:5",
																		"nodeType": "YulLiteral",
																		"src": "12323:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12308:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12308:3:5"
																},
																"nativeSrc": "12308:18:5",
																"nodeType": "YulFunctionCall",
																"src": "12308:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12300:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12300:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12380:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12380:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12393:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12393:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12404:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12404:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12389:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12389:3:5"
																		},
																		"nativeSrc": "12389:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12389:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12336:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12336:43:5"
																},
																"nativeSrc": "12336:71:5",
																"nodeType": "YulFunctionCall",
																"src": "12336:71:5"
															},
															"nativeSrc": "12336:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "12336:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12461:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12461:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12474:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12474:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12485:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12485:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12470:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12470:3:5"
																		},
																		"nativeSrc": "12470:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12470:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12417:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12417:43:5"
																},
																"nativeSrc": "12417:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12417:72:5"
															},
															"nativeSrc": "12417:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12417:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12543:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12543:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12556:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12556:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12567:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12567:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12552:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12552:3:5"
																		},
																		"nativeSrc": "12552:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12552:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12499:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12499:43:5"
																},
																"nativeSrc": "12499:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12499:72:5"
															},
															"nativeSrc": "12499:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12499:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12136:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12246:9:5",
														"nodeType": "YulTypedName",
														"src": "12246:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12258:6:5",
														"nodeType": "YulTypedName",
														"src": "12258:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12266:6:5",
														"nodeType": "YulTypedName",
														"src": "12266:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12274:6:5",
														"nodeType": "YulTypedName",
														"src": "12274:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12285:4:5",
														"nodeType": "YulTypedName",
														"src": "12285:4:5",
														"type": ""
													}
												],
												"src": "12136:442:5"
											},
											{
												"body": {
													"nativeSrc": "12626:48:5",
													"nodeType": "YulBlock",
													"src": "12626:48:5",
													"statements": [
														{
															"nativeSrc": "12636:32:5",
															"nodeType": "YulAssignment",
															"src": "12636:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12661:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12661:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "12654:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "12654:6:5"
																		},
																		"nativeSrc": "12654:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12654:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12647:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12647:6:5"
																},
																"nativeSrc": "12647:21:5",
																"nodeType": "YulFunctionCall",
																"src": "12647:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12636:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "12636:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "12584:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12608:5:5",
														"nodeType": "YulTypedName",
														"src": "12608:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12618:7:5",
														"nodeType": "YulTypedName",
														"src": "12618:7:5",
														"type": ""
													}
												],
												"src": "12584:90:5"
											},
											{
												"body": {
													"nativeSrc": "12720:76:5",
													"nodeType": "YulBlock",
													"src": "12720:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "12774:16:5",
																"nodeType": "YulBlock",
																"src": "12774:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12783:1:5",
																					"nodeType": "YulLiteral",
																					"src": "12783:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12786:1:5",
																					"nodeType": "YulLiteral",
																					"src": "12786:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12776:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12776:6:5"
																			},
																			"nativeSrc": "12776:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "12776:12:5"
																		},
																		"nativeSrc": "12776:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "12776:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12743:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12743:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12765:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "12765:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12750:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "12750:14:5"
																				},
																				"nativeSrc": "12750:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "12750:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12740:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "12740:2:5"
																		},
																		"nativeSrc": "12740:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12740:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12733:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12733:6:5"
																},
																"nativeSrc": "12733:40:5",
																"nodeType": "YulFunctionCall",
																"src": "12733:40:5"
															},
															"nativeSrc": "12730:60:5",
															"nodeType": "YulIf",
															"src": "12730:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12680:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12713:5:5",
														"nodeType": "YulTypedName",
														"src": "12713:5:5",
														"type": ""
													}
												],
												"src": "12680:116:5"
											},
											{
												"body": {
													"nativeSrc": "12862:77:5",
													"nodeType": "YulBlock",
													"src": "12862:77:5",
													"statements": [
														{
															"nativeSrc": "12872:22:5",
															"nodeType": "YulAssignment",
															"src": "12872:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12887:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12887:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12881:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12881:5:5"
																},
																"nativeSrc": "12881:13:5",
																"nodeType": "YulFunctionCall",
																"src": "12881:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12872:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12872:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12927:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12927:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12903:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "12903:23:5"
																},
																"nativeSrc": "12903:30:5",
																"nodeType": "YulFunctionCall",
																"src": "12903:30:5"
															},
															"nativeSrc": "12903:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "12903:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12802:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12840:6:5",
														"nodeType": "YulTypedName",
														"src": "12840:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12848:3:5",
														"nodeType": "YulTypedName",
														"src": "12848:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12856:5:5",
														"nodeType": "YulTypedName",
														"src": "12856:5:5",
														"type": ""
													}
												],
												"src": "12802:137:5"
											},
											{
												"body": {
													"nativeSrc": "13019:271:5",
													"nodeType": "YulBlock",
													"src": "13019:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "13065:83:5",
																"nodeType": "YulBlock",
																"src": "13065:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13067:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "13067:77:5"
																			},
																			"nativeSrc": "13067:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13067:79:5"
																		},
																		"nativeSrc": "13067:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "13067:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13040:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "13040:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13049:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13049:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13036:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13036:3:5"
																		},
																		"nativeSrc": "13036:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13036:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13061:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13061:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13032:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13032:3:5"
																},
																"nativeSrc": "13032:32:5",
																"nodeType": "YulFunctionCall",
																"src": "13032:32:5"
															},
															"nativeSrc": "13029:119:5",
															"nodeType": "YulIf",
															"src": "13029:119:5"
														},
														{
															"nativeSrc": "13158:125:5",
															"nodeType": "YulBlock",
															"src": "13158:125:5",
															"statements": [
																{
																	"nativeSrc": "13173:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13173:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13187:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13187:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13177:6:5",
																			"nodeType": "YulTypedName",
																			"src": "13177:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13202:71:5",
																	"nodeType": "YulAssignment",
																	"src": "13202:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13245:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "13245:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13256:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "13256:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13241:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "13241:3:5"
																				},
																				"nativeSrc": "13241:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "13241:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13265:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "13265:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13212:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "13212:28:5"
																		},
																		"nativeSrc": "13212:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13212:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13202:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "13202:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12945:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12989:9:5",
														"nodeType": "YulTypedName",
														"src": "12989:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13000:7:5",
														"nodeType": "YulTypedName",
														"src": "13000:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13012:6:5",
														"nodeType": "YulTypedName",
														"src": "13012:6:5",
														"type": ""
													}
												],
												"src": "12945:345:5"
											},
											{
												"body": {
													"nativeSrc": "13354:40:5",
													"nodeType": "YulBlock",
													"src": "13354:40:5",
													"statements": [
														{
															"nativeSrc": "13365:22:5",
															"nodeType": "YulAssignment",
															"src": "13365:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13381:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13381:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13375:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13375:5:5"
																},
																"nativeSrc": "13375:12:5",
																"nodeType": "YulFunctionCall",
																"src": "13375:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13365:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13365:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "13296:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13337:5:5",
														"nodeType": "YulTypedName",
														"src": "13337:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13347:6:5",
														"nodeType": "YulTypedName",
														"src": "13347:6:5",
														"type": ""
													}
												],
												"src": "13296:98:5"
											},
											{
												"body": {
													"nativeSrc": "13513:34:5",
													"nodeType": "YulBlock",
													"src": "13513:34:5",
													"statements": [
														{
															"nativeSrc": "13523:18:5",
															"nodeType": "YulAssignment",
															"src": "13523:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "13538:3:5",
																"nodeType": "YulIdentifier",
																"src": "13538:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13523:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "13523:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13400:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13485:3:5",
														"nodeType": "YulTypedName",
														"src": "13485:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13490:6:5",
														"nodeType": "YulTypedName",
														"src": "13490:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13501:11:5",
														"nodeType": "YulTypedName",
														"src": "13501:11:5",
														"type": ""
													}
												],
												"src": "13400:147:5"
											},
											{
												"body": {
													"nativeSrc": "13615:184:5",
													"nodeType": "YulBlock",
													"src": "13615:184:5",
													"statements": [
														{
															"nativeSrc": "13625:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13625:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "13634:1:5",
																"nodeType": "YulLiteral",
																"src": "13634:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "13629:1:5",
																	"nodeType": "YulTypedName",
																	"src": "13629:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13694:63:5",
																"nodeType": "YulBlock",
																"src": "13694:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "13719:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "13719:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "13724:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "13724:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13715:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "13715:3:5"
																					},
																					"nativeSrc": "13715:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "13715:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "13738:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "13738:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "13743:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "13743:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13734:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "13734:3:5"
																							},
																							"nativeSrc": "13734:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "13734:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "13728:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "13728:5:5"
																					},
																					"nativeSrc": "13728:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "13728:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13708:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13708:6:5"
																			},
																			"nativeSrc": "13708:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13708:39:5"
																		},
																		"nativeSrc": "13708:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "13708:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13655:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "13655:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13658:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13658:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13652:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "13652:2:5"
																},
																"nativeSrc": "13652:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13652:13:5"
															},
															"nativeSrc": "13644:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13666:19:5",
																"nodeType": "YulBlock",
																"src": "13666:19:5",
																"statements": [
																	{
																		"nativeSrc": "13668:15:5",
																		"nodeType": "YulAssignment",
																		"src": "13668:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13677:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "13677:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13680:2:5",
																					"nodeType": "YulLiteral",
																					"src": "13680:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13673:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "13673:3:5"
																			},
																			"nativeSrc": "13673:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13673:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13668:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "13668:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13648:3:5",
																"nodeType": "YulBlock",
																"src": "13648:3:5",
																"statements": []
															},
															"src": "13644:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13777:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "13777:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13782:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13782:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13773:3:5"
																		},
																		"nativeSrc": "13773:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13773:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13791:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13791:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13766:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13766:6:5"
																},
																"nativeSrc": "13766:27:5",
																"nodeType": "YulFunctionCall",
																"src": "13766:27:5"
															},
															"nativeSrc": "13766:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "13766:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "13553:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13597:3:5",
														"nodeType": "YulTypedName",
														"src": "13597:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13602:3:5",
														"nodeType": "YulTypedName",
														"src": "13602:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13607:6:5",
														"nodeType": "YulTypedName",
														"src": "13607:6:5",
														"type": ""
													}
												],
												"src": "13553:246:5"
											},
											{
												"body": {
													"nativeSrc": "13913:278:5",
													"nodeType": "YulBlock",
													"src": "13913:278:5",
													"statements": [
														{
															"nativeSrc": "13923:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13923:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13969:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13969:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13937:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "13937:31:5"
																},
																"nativeSrc": "13937:38:5",
																"nodeType": "YulFunctionCall",
																"src": "13937:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13927:6:5",
																	"nodeType": "YulTypedName",
																	"src": "13927:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13984:95:5",
															"nodeType": "YulAssignment",
															"src": "13984:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14067:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14067:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14072:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14072:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13991:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "13991:75:5"
																},
																"nativeSrc": "13991:88:5",
																"nodeType": "YulFunctionCall",
																"src": "13991:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13984:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13984:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14127:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "14127:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14134:4:5",
																				"nodeType": "YulLiteral",
																				"src": "14134:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14123:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14123:3:5"
																		},
																		"nativeSrc": "14123:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14123:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14141:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14141:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14146:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14146:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14088:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "14088:34:5"
																},
																"nativeSrc": "14088:65:5",
																"nodeType": "YulFunctionCall",
																"src": "14088:65:5"
															},
															"nativeSrc": "14088:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "14088:65:5"
														},
														{
															"nativeSrc": "14162:23:5",
															"nodeType": "YulAssignment",
															"src": "14162:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14173:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14173:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14178:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14178:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14169:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14169:3:5"
																},
																"nativeSrc": "14169:16:5",
																"nodeType": "YulFunctionCall",
																"src": "14169:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14162:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14162:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13805:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13894:5:5",
														"nodeType": "YulTypedName",
														"src": "13894:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13901:3:5",
														"nodeType": "YulTypedName",
														"src": "13901:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13909:3:5",
														"nodeType": "YulTypedName",
														"src": "13909:3:5",
														"type": ""
													}
												],
												"src": "13805:386:5"
											},
											{
												"body": {
													"nativeSrc": "14331:137:5",
													"nodeType": "YulBlock",
													"src": "14331:137:5",
													"statements": [
														{
															"nativeSrc": "14342:100:5",
															"nodeType": "YulAssignment",
															"src": "14342:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14429:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14429:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14438:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14438:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14349:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "14349:79:5"
																},
																"nativeSrc": "14349:93:5",
																"nodeType": "YulFunctionCall",
																"src": "14349:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14342:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14342:3:5"
																}
															]
														},
														{
															"nativeSrc": "14452:10:5",
															"nodeType": "YulAssignment",
															"src": "14452:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "14459:3:5",
																"nodeType": "YulIdentifier",
																"src": "14459:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14452:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14452:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14197:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14310:3:5",
														"nodeType": "YulTypedName",
														"src": "14310:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14316:6:5",
														"nodeType": "YulTypedName",
														"src": "14316:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14327:3:5",
														"nodeType": "YulTypedName",
														"src": "14327:3:5",
														"type": ""
													}
												],
												"src": "14197:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Tokens Staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw before 1 hour\")\n\n    }\n\n    function abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Enough Money to give reward\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4(memPtr) {\n\n        mstore(add(memPtr, 0), \"You're supposed to enter a posit\")\n\n        mstore(add(memPtr, 32), \"ive value\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"667": [
									{
										"length": 32,
										"start": 606
									},
									{
										"length": 32,
										"start": 842
									},
									{
										"length": 32,
										"start": 1477
									},
									{
										"length": 32,
										"start": 1618
									},
									{
										"length": 32,
										"start": 1840
									},
									{
										"length": 32,
										"start": 2144
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80633ccfd60b146100645780633e11f2e91461006e5780639168ae721461009e57806393707a19146100cf578063a694fc3a146100eb578063fc0c546a14610107575b5f80fd5b61006c610125565b005b61008860048036038101906100839190610c25565b6104ab565b6040516100959190610c68565b60405180910390f35b6100b860048036038101906100b39190610c25565b61055c565b6040516100c6929190610c81565b60405180910390f35b6100e960048036038101906100e49190610cd2565b61057b565b005b61010560048036038101906101009190610cd2565b61060d565b005b61010f61085e565b60405161011c9190610d58565b60405180910390f35b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f820154815260200160018201548152505090505f815f015110156101c8576040517f7979dc870000000000000000000000000000000000000000000000000000000081526004016101bf90610dcb565b60405180910390fd5b610e1081602001516101da9190610e16565b421161021b576040517f30f1c21600000000000000000000000000000000000000000000000000000000815260040161021290610e93565b60405180910390fd5b5f81602001514261022c9190610eb1565b90505f610e1082845f01516102419190610ee4565b61024b9190610f52565b905080835f015161025c9190610e16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b59190610f91565b602060405180830381865afa1580156102d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102f49190610fbe565b1015610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90611033565b60405180910390fd5b61038e3382855f01516103489190610e16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108829092919063ffffffff16565b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc98260405161045b9190610c68565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167fcecccf974394b5dfc20e8840042bbaa68e166eff261ba930e076891582965d4160405160405180910390a2505050565b5f805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015481526020016001820154815250509050610e10816020015161051b9190610e16565b421061052a575f915050610557565b603c42610e10836020015161053f9190610e16565b6105499190610eb1565b6105539190610f52565b9150505b919050565b5f602052805f5260405f205f91509050805f0154908060010154905082565b5f81116105bd576040517f7979dc870000000000000000000000000000000000000000000000000000000081526004016105b4906110c1565b60405180910390fd5b61060a3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610901909392919063ffffffff16565b50565b5f811161064f576040517f7979dc8700000000000000000000000000000000000000000000000000000000815260040161064690611129565b60405180910390fd5b807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106a99190610f91565b602060405180830381865afa1580156106c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e89190610fbe565b10610728576040517f7979dc8700000000000000000000000000000000000000000000000000000000815260040161071f90611191565b60405180910390fd5b6107753330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610901909392919063ffffffff16565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107c29190610e16565b92505081905550425f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516108539190610c68565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6108fc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016108b59291906111af565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610983565b505050565b61097d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610936939291906111d6565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610983565b50505050565b5f6109ad828473ffffffffffffffffffffffffffffffffffffffff16610a1890919063ffffffff16565b90505f8151141580156109d15750808060200190518101906109cf9190611240565b155b15610a1357826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610a0a9190610f91565b60405180910390fd5b505050565b6060610a2583835f610a2d565b905092915050565b606081471015610a7457306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610a6b9190610f91565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610a9c91906112d7565b5f6040518083038185875af1925050503d805f8114610ad6576040519150601f19603f3d011682016040523d82523d5f602084013e610adb565b606091505b5091509150610aeb868383610af6565b925050509392505050565b606082610b0b57610b0682610b83565b610b7b565b5f8251148015610b3157505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b7357836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610b6a9190610f91565b60405180910390fd5b819050610b7c565b5b9392505050565b5f81511115610b955780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bf482610bcb565b9050919050565b610c0481610bea565b8114610c0e575f80fd5b50565b5f81359050610c1f81610bfb565b92915050565b5f60208284031215610c3a57610c39610bc7565b5b5f610c4784828501610c11565b91505092915050565b5f819050919050565b610c6281610c50565b82525050565b5f602082019050610c7b5f830184610c59565b92915050565b5f604082019050610c945f830185610c59565b610ca16020830184610c59565b9392505050565b610cb181610c50565b8114610cbb575f80fd5b50565b5f81359050610ccc81610ca8565b92915050565b5f60208284031215610ce757610ce6610bc7565b5b5f610cf484828501610cbe565b91505092915050565b5f819050919050565b5f610d20610d1b610d1684610bcb565b610cfd565b610bcb565b9050919050565b5f610d3182610d06565b9050919050565b5f610d4282610d27565b9050919050565b610d5281610d38565b82525050565b5f602082019050610d6b5f830184610d49565b92915050565b5f82825260208201905092915050565b7f4e6f20546f6b656e73205374616b6564000000000000000000000000000000005f82015250565b5f610db5601083610d71565b9150610dc082610d81565b602082019050919050565b5f6020820190508181035f830152610de281610da9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e2082610c50565b9150610e2b83610c50565b9250828201905080821115610e4357610e42610de9565b5b92915050565b7f596f752063616e2774207769746864726177206265666f7265203120686f75725f82015250565b5f610e7d602083610d71565b9150610e8882610e49565b602082019050919050565b5f6020820190508181035f830152610eaa81610e71565b9050919050565b5f610ebb82610c50565b9150610ec683610c50565b9250828203905081811115610ede57610edd610de9565b5b92915050565b5f610eee82610c50565b9150610ef983610c50565b9250828202610f0781610c50565b91508282048414831517610f1e57610f1d610de9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f5c82610c50565b9150610f6783610c50565b925082610f7757610f76610f25565b5b828204905092915050565b610f8b81610bea565b82525050565b5f602082019050610fa45f830184610f82565b92915050565b5f81519050610fb881610ca8565b92915050565b5f60208284031215610fd357610fd2610bc7565b5b5f610fe084828501610faa565b91505092915050565b7f4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264005f82015250565b5f61101d601f83610d71565b915061102882610fe9565b602082019050919050565b5f6020820190508181035f83015261104a81611011565b9050919050565b7f596f7527726520737570706f73656420746f20656e746572206120706f7369745f8201527f6976652076616c75650000000000000000000000000000000000000000000000602082015250565b5f6110ab602983610d71565b91506110b682611051565b604082019050919050565b5f6020820190508181035f8301526110d88161109f565b9050919050565b7f496e73756666696369656e742042616c616e63650000000000000000000000005f82015250565b5f611113601483610d71565b915061111e826110df565b602082019050919050565b5f6020820190508181035f83015261114081611107565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682062616c616e63650000005f82015250565b5f61117b601d83610d71565b915061118682611147565b602082019050919050565b5f6020820190508181035f8301526111a88161116f565b9050919050565b5f6040820190506111c25f830185610f82565b6111cf6020830184610c59565b9392505050565b5f6060820190506111e95f830186610f82565b6111f66020830185610f82565b6112036040830184610c59565b949350505050565b5f8115159050919050565b61121f8161120b565b8114611229575f80fd5b50565b5f8151905061123a81611216565b92915050565b5f6020828403121561125557611254610bc7565b5b5f6112628482850161122c565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b8381101561129c578082015181840152602081019050611281565b5f8484015250505050565b5f6112b18261126b565b6112bb8185611275565b93506112cb81856020860161127f565b80840191505092915050565b5f6112e282846112a7565b91508190509291505056fea26469706673582212206a59d0a87615c2244fcb0fbb7c7fe2c68df4bc406ec61ca08b65e5def1f7d70c64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x3E11F2E9 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x93707A19 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x107 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP3 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH32 0x30F1C21600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE10 DUP3 DUP5 PUSH0 ADD MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH0 ADD MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST LT ISZERO PUSH2 0x335 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP1 PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38E CALLER DUP3 DUP6 PUSH0 ADD MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCECCCF974394B5DFC20E8840042BBAA68E166EFF261BA930E076891582965D41 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0xE10 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x52A JUMPI PUSH0 SWAP2 POP POP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x3C TIMESTAMP PUSH2 0xE10 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60A CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x901 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST LT PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7979DC8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71F SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x775 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x901 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xC68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8FC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8B5 SWAP3 SWAP2 SWAP1 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x983 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x97D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x936 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x983 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9AD DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA18 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x1240 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA13 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA25 DUP4 DUP4 PUSH0 PUSH2 0xA2D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xA74 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xADB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xAEB DUP7 DUP4 DUP4 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xB0B JUMPI PUSH2 0xB06 DUP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xB31 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB73 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xB95 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBF4 DUP3 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC04 DUP2 PUSH2 0xBEA JUMP JUMPDEST DUP2 EQ PUSH2 0xC0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC1F DUP2 PUSH2 0xBFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC47 DUP5 DUP3 DUP6 ADD PUSH2 0xC11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7B PUSH0 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC94 PUSH0 DUP4 ADD DUP6 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xCA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCB1 DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP2 EQ PUSH2 0xCBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCCC DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE6 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF4 DUP5 DUP3 DUP6 ADD PUSH2 0xCBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD20 PUSH2 0xD1B PUSH2 0xD16 DUP5 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD31 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD42 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xD38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6B PUSH0 DUP4 ADD DUP5 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20546F6B656E73205374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDB5 PUSH1 0x10 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC0 DUP3 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDE2 DUP2 PUSH2 0xDA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE20 DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E2774207769746864726177206265666F7265203120686F7572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE7D PUSH1 0x20 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAA DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBB DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC6 DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDD PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEEE DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF07 DUP2 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xDE9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF5C DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP2 POP PUSH2 0xF67 DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xF25 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xBEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xCA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE0 DUP5 DUP3 DUP6 ADD PUSH2 0xFAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420456E6F756768204D6F6E657920746F20676976652072657761726400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x101D PUSH1 0x1F DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1028 DUP3 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104A DUP2 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7527726520737570706F73656420746F20656E746572206120706F736974 PUSH0 DUP3 ADD MSTORE PUSH32 0x6976652076616C75650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10AB PUSH1 0x29 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B6 DUP3 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D8 DUP2 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1113 PUSH1 0x14 DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x111E DUP3 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1140 DUP2 PUSH2 0x1107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206861766520656E6F7567682062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x117B PUSH1 0x1D DUP4 PUSH2 0xD71 JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 DUP3 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A8 DUP2 PUSH2 0x116F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11C2 PUSH0 DUP4 ADD DUP6 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x11CF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11E9 PUSH0 DUP4 ADD DUP7 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x11F6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x1203 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121F DUP2 PUSH2 0x120B JUMP JUMPDEST DUP2 EQ PUSH2 0x1229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x123A DUP2 PUSH2 0x1216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0xBC7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1262 DUP5 DUP3 DUP6 ADD PUSH2 0x122C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x129C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1281 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x12BB DUP2 DUP6 PUSH2 0x1275 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x127F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12E2 DUP3 DUP5 PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x59D0A87615C2244FCB0FBB PUSH29 0x7FE2C68DF4BC406EC61CA08B65E5DEF1F7D70C64736F6C634300081800 CALLER ",
							"sourceMap": "264:3509:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:964;;;:::i;:::-;;3466:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3005:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1082:495;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;328:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1780:964;1824:17;1844:7;:19;1852:10;1844:19;;;;;;;;;;;;;;;1824:39;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:1;1877:4;:11;;;:15;1874:102;;;1925:39;;;;;;;;;;:::i;:::-;;;;;;;;1874:102;2025:7;2008:4;:14;;;:24;;;;:::i;:::-;1989:15;:43;1986:120;;2054:52;;;;;;;;;;:::i;:::-;;;;;;;;1986:120;2117:14;2152:4;:14;;;2134:15;:32;;;;:::i;:::-;2117:49;;2177:11;2217:4;2205:9;2191:4;:11;;;:23;;;;:::i;:::-;:30;;;;:::i;:::-;2177:44;;2380:6;2366:4;:11;;;:20;;;;:::i;:::-;2332:5;:15;;;2356:4;2332:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;2324:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2491:52;2510:10;2536:6;2522:4;:11;;;:20;;;;:::i;:::-;2491:5;:18;;;;:52;;;;;:::i;:::-;2609:1;2580:7;:19;2588:10;2580:19;;;;;;;;;;;;;;;:26;;:30;;;;2653:1;2621:7;:19;2629:10;2621:19;;;;;;;;;;;;;;;:29;;:33;;;;2679:10;2672:26;;;2691:6;2672:26;;;;;;:::i;:::-;;;;;;;;2725:10;2714:22;;;;;;;;;;;;1813:931;;;1780:964::o;3466:304::-;3533:7;3558:17;3578:7;:14;3586:5;3578:14;;;;;;;;;;;;;;;3558:34;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:7;3628:4;:14;;;:24;;;;:::i;:::-;3609:15;:43;3605:157;;3674:1;3667:8;;;;;3605:157;3760:2;3741:15;3730:7;3713:4;:14;;;:24;;;;:::i;:::-;3712:44;;;;:::i;:::-;3711:51;;;;:::i;:::-;3704:58;;;3466:304;;;;:::o;729:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3005:245::-;3073:1;3065:6;:9;3062:98;;3096:64;;;;;;;;;;:::i;:::-;;;;;;;;3062:98;3185:57;3208:10;3228:4;3235:6;3185:5;:22;;;;:57;;;;;;:::i;:::-;3005:245;:::o;1082:495::-;1151:1;1140:7;:12;1137:80;;1174:43;;;;;;;;;;:::i;:::-;;;;;;;;1137:80;1264:7;1233:5;:15;;;1249:10;1233:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;1230:115;;1293:52;;;;;;;;;;:::i;:::-;;;;;;;;1230:115;1358:58;1381:10;1401:4;1408:7;1358:5;:22;;;;:58;;;;;;:::i;:::-;1459:7;1429;:19;1437:10;1429:19;;;;;;;;;;;;;;;:26;;;:37;;;;;;;:::i;:::-;;;;;;;;1509:15;1477:7;:19;1485:10;1477:19;;;;;;;;;;;;;;;:29;;:47;;;;1549:10;1542:27;;;1561:7;1542:27;;;;;;:::i;:::-;;;;;;;;1082:495;:::o;328:29::-;;;:::o;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1702:188::-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:332::-;1732:4;1770:2;1759:9;1755:18;1747:26;;1783:71;1851:1;1840:9;1836:17;1827:6;1783:71;:::i;:::-;1864:72;1932:2;1921:9;1917:18;1908:6;1864:72;:::i;:::-;1611:332;;;;;:::o;1949:122::-;2022:24;2040:5;2022:24;:::i;:::-;2015:5;2012:35;2002:63;;2061:1;2058;2051:12;2002:63;1949:122;:::o;2077:139::-;2123:5;2161:6;2148:20;2139:29;;2177:33;2204:5;2177:33;:::i;:::-;2077:139;;;;:::o;2222:329::-;2281:6;2330:2;2318:9;2309:7;2305:23;2301:32;2298:119;;;2336:79;;:::i;:::-;2298:119;2456:1;2481:53;2526:7;2517:6;2506:9;2502:22;2481:53;:::i;:::-;2471:63;;2427:117;2222:329;;;;:::o;2557:60::-;2585:3;2606:5;2599:12;;2557:60;;;:::o;2623:142::-;2673:9;2706:53;2724:34;2733:24;2751:5;2733:24;:::i;:::-;2724:34;:::i;:::-;2706:53;:::i;:::-;2693:66;;2623:142;;;:::o;2771:126::-;2821:9;2854:37;2885:5;2854:37;:::i;:::-;2841:50;;2771:126;;;:::o;2903:139::-;2966:9;2999:37;3030:5;2999:37;:::i;:::-;2986:50;;2903:139;;;:::o;3048:157::-;3148:50;3192:5;3148:50;:::i;:::-;3143:3;3136:63;3048:157;;:::o;3211:248::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:84;3449:1;3438:9;3434:17;3425:6;3368:84;:::i;:::-;3211:248;;;;:::o;3465:169::-;3549:11;3583:6;3578:3;3571:19;3623:4;3618:3;3614:14;3599:29;;3465:169;;;;:::o;3640:166::-;3780:18;3776:1;3768:6;3764:14;3757:42;3640:166;:::o;3812:366::-;3954:3;3975:67;4039:2;4034:3;3975:67;:::i;:::-;3968:74;;4051:93;4140:3;4051:93;:::i;:::-;4169:2;4164:3;4160:12;4153:19;;3812:366;;;:::o;4184:419::-;4350:4;4388:2;4377:9;4373:18;4365:26;;4437:9;4431:4;4427:20;4423:1;4412:9;4408:17;4401:47;4465:131;4591:4;4465:131;:::i;:::-;4457:139;;4184:419;;;:::o;4609:180::-;4657:77;4654:1;4647:88;4754:4;4751:1;4744:15;4778:4;4775:1;4768:15;4795:191;4835:3;4854:20;4872:1;4854:20;:::i;:::-;4849:25;;4888:20;4906:1;4888:20;:::i;:::-;4883:25;;4931:1;4928;4924:9;4917:16;;4952:3;4949:1;4946:10;4943:36;;;4959:18;;:::i;:::-;4943:36;4795:191;;;;:::o;4992:182::-;5132:34;5128:1;5120:6;5116:14;5109:58;4992:182;:::o;5180:366::-;5322:3;5343:67;5407:2;5402:3;5343:67;:::i;:::-;5336:74;;5419:93;5508:3;5419:93;:::i;:::-;5537:2;5532:3;5528:12;5521:19;;5180:366;;;:::o;5552:419::-;5718:4;5756:2;5745:9;5741:18;5733:26;;5805:9;5799:4;5795:20;5791:1;5780:9;5776:17;5769:47;5833:131;5959:4;5833:131;:::i;:::-;5825:139;;5552:419;;;:::o;5977:194::-;6017:4;6037:20;6055:1;6037:20;:::i;:::-;6032:25;;6071:20;6089:1;6071:20;:::i;:::-;6066:25;;6115:1;6112;6108:9;6100:17;;6139:1;6133:4;6130:11;6127:37;;;6144:18;;:::i;:::-;6127:37;5977:194;;;;:::o;6177:410::-;6217:7;6240:20;6258:1;6240:20;:::i;:::-;6235:25;;6274:20;6292:1;6274:20;:::i;:::-;6269:25;;6329:1;6326;6322:9;6351:30;6369:11;6351:30;:::i;:::-;6340:41;;6530:1;6521:7;6517:15;6514:1;6511:22;6491:1;6484:9;6464:83;6441:139;;6560:18;;:::i;:::-;6441:139;6225:362;6177:410;;;;:::o;6593:180::-;6641:77;6638:1;6631:88;6738:4;6735:1;6728:15;6762:4;6759:1;6752:15;6779:185;6819:1;6836:20;6854:1;6836:20;:::i;:::-;6831:25;;6870:20;6888:1;6870:20;:::i;:::-;6865:25;;6909:1;6899:35;;6914:18;;:::i;:::-;6899:35;6956:1;6953;6949:9;6944:14;;6779:185;;;;:::o;6970:118::-;7057:24;7075:5;7057:24;:::i;:::-;7052:3;7045:37;6970:118;;:::o;7094:222::-;7187:4;7225:2;7214:9;7210:18;7202:26;;7238:71;7306:1;7295:9;7291:17;7282:6;7238:71;:::i;:::-;7094:222;;;;:::o;7322:143::-;7379:5;7410:6;7404:13;7395:22;;7426:33;7453:5;7426:33;:::i;:::-;7322:143;;;;:::o;7471:351::-;7541:6;7590:2;7578:9;7569:7;7565:23;7561:32;7558:119;;;7596:79;;:::i;:::-;7558:119;7716:1;7741:64;7797:7;7788:6;7777:9;7773:22;7741:64;:::i;:::-;7731:74;;7687:128;7471:351;;;;:::o;7828:181::-;7968:33;7964:1;7956:6;7952:14;7945:57;7828:181;:::o;8015:366::-;8157:3;8178:67;8242:2;8237:3;8178:67;:::i;:::-;8171:74;;8254:93;8343:3;8254:93;:::i;:::-;8372:2;8367:3;8363:12;8356:19;;8015:366;;;:::o;8387:419::-;8553:4;8591:2;8580:9;8576:18;8568:26;;8640:9;8634:4;8630:20;8626:1;8615:9;8611:17;8604:47;8668:131;8794:4;8668:131;:::i;:::-;8660:139;;8387:419;;;:::o;8812:228::-;8952:34;8948:1;8940:6;8936:14;8929:58;9021:11;9016:2;9008:6;9004:15;8997:36;8812:228;:::o;9046:366::-;9188:3;9209:67;9273:2;9268:3;9209:67;:::i;:::-;9202:74;;9285:93;9374:3;9285:93;:::i;:::-;9403:2;9398:3;9394:12;9387:19;;9046:366;;;:::o;9418:419::-;9584:4;9622:2;9611:9;9607:18;9599:26;;9671:9;9665:4;9661:20;9657:1;9646:9;9642:17;9635:47;9699:131;9825:4;9699:131;:::i;:::-;9691:139;;9418:419;;;:::o;9843:170::-;9983:22;9979:1;9971:6;9967:14;9960:46;9843:170;:::o;10019:366::-;10161:3;10182:67;10246:2;10241:3;10182:67;:::i;:::-;10175:74;;10258:93;10347:3;10258:93;:::i;:::-;10376:2;10371:3;10367:12;10360:19;;10019:366;;;:::o;10391:419::-;10557:4;10595:2;10584:9;10580:18;10572:26;;10644:9;10638:4;10634:20;10630:1;10619:9;10615:17;10608:47;10672:131;10798:4;10672:131;:::i;:::-;10664:139;;10391:419;;;:::o;10816:179::-;10956:31;10952:1;10944:6;10940:14;10933:55;10816:179;:::o;11001:366::-;11143:3;11164:67;11228:2;11223:3;11164:67;:::i;:::-;11157:74;;11240:93;11329:3;11240:93;:::i;:::-;11358:2;11353:3;11349:12;11342:19;;11001:366;;;:::o;11373:419::-;11539:4;11577:2;11566:9;11562:18;11554:26;;11626:9;11620:4;11616:20;11612:1;11601:9;11597:17;11590:47;11654:131;11780:4;11654:131;:::i;:::-;11646:139;;11373:419;;;:::o;11798:332::-;11919:4;11957:2;11946:9;11942:18;11934:26;;11970:71;12038:1;12027:9;12023:17;12014:6;11970:71;:::i;:::-;12051:72;12119:2;12108:9;12104:18;12095:6;12051:72;:::i;:::-;11798:332;;;;;:::o;12136:442::-;12285:4;12323:2;12312:9;12308:18;12300:26;;12336:71;12404:1;12393:9;12389:17;12380:6;12336:71;:::i;:::-;12417:72;12485:2;12474:9;12470:18;12461:6;12417:72;:::i;:::-;12499;12567:2;12556:9;12552:18;12543:6;12499:72;:::i;:::-;12136:442;;;;;;:::o;12584:90::-;12618:7;12661:5;12654:13;12647:21;12636:32;;12584:90;;;:::o;12680:116::-;12750:21;12765:5;12750:21;:::i;:::-;12743:5;12740:32;12730:60;;12786:1;12783;12776:12;12730:60;12680:116;:::o;12802:137::-;12856:5;12887:6;12881:13;12872:22;;12903:30;12927:5;12903:30;:::i;:::-;12802:137;;;;:::o;12945:345::-;13012:6;13061:2;13049:9;13040:7;13036:23;13032:32;13029:119;;;13067:79;;:::i;:::-;13029:119;13187:1;13212:61;13265:7;13256:6;13245:9;13241:22;13212:61;:::i;:::-;13202:71;;13158:125;12945:345;;;;:::o;13296:98::-;13347:6;13381:5;13375:12;13365:22;;13296:98;;;:::o;13400:147::-;13501:11;13538:3;13523:18;;13400:147;;;;:::o;13553:246::-;13634:1;13644:113;13658:6;13655:1;13652:13;13644:113;;;13743:1;13738:3;13734:11;13728:18;13724:1;13719:3;13715:11;13708:39;13680:2;13677:1;13673:10;13668:15;;13644:113;;;13791:1;13782:6;13777:3;13773:16;13766:27;13615:184;13553:246;;;:::o;13805:386::-;13909:3;13937:38;13969:5;13937:38;:::i;:::-;13991:88;14072:6;14067:3;13991:88;:::i;:::-;13984:95;;14088:65;14146:6;14141:3;14134:4;14127:5;14123:16;14088:65;:::i;:::-;14178:6;14173:3;14169:16;14162:23;;13913:278;13805:386;;;;:::o;14197:271::-;14327:3;14349:93;14438:3;14429:6;14349:93;:::i;:::-;14342:100;;14459:3;14452:10;;14197:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "979800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"fundRewards(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakers(address)": "infinite",
								"timeUntilWithdrawable(address)": "infinite",
								"token()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 778,
									"end": 844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 778,
									"end": 844,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 830,
									"end": 836,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 822,
									"end": 836,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 822,
									"end": 836,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 822,
									"end": 836,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 822,
									"end": 836,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 778,
									"end": 844,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1101,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1141,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1142,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1147,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1150,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1364,
									"end": 1371,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1353,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1340,
									"end": 1362,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1295,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1382,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "667"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3773,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a59d0a87615c2244fcb0fbb7c7fe2c68df4bc406ec61ca08b65e5def1f7d70c64736f6c63430008180033",
									".code": [
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "3E11F2E9"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "9168AE72"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "93707A19"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "FC0C546A"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 264,
											"end": 3773,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1780,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3466,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3466,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3466,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 729,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 729,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 729,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3005,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3005,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1082,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1082,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1780,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1862,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1863,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1881,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1888,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1892,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1874,
											"end": 1976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1925,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1976,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1874,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 2008,
											"end": 2012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2008,
											"end": 2032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2008,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2008,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2032,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1986,
											"end": 2106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH",
											"source": 4,
											"value": "30F1C21600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2054,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2106,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1986,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2149,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2134,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2221,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 2205,
											"end": 2214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2191,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2377,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2366,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2366,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2356,
											"end": 2360,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2332,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2332,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2324,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2324,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2533,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2533,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2522,
											"end": 2542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2522,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2522,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2491,
											"end": 2509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2491,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2598,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2610,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2639,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2654,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2689,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH",
											"source": 4,
											"value": "619CAAFABDD75649B302BA8419E48CCCF64F37F1983AC4727CFB38B57703FFC9"
										},
										{
											"begin": 2691,
											"end": 2697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2672,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2735,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "CECCCF974394B5DFC20E8840042BBAA68E166EFF261BA930E076891582965D41"
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2736,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 2744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 2744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 2744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3592,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 3628,
											"end": 3632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3628,
											"end": 3652,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3628,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3628,
											"end": 3652,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3628,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3652,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3605,
											"end": 3762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3667,
											"end": 3675,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3762,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3605,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 4,
											"value": "3C"
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 3713,
											"end": 3717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3713,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3713,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3712,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3712,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3711,
											"end": 3762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3711,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3762,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3711,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3466,
											"end": 3770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 729,
											"end": 769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 729,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3062,
											"end": 3160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3096,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3160,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3062,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3208,
											"end": 3218,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 3185,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3185,
											"end": 3207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1152,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1137,
											"end": 1217,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1174,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1217,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1217,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1137,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1271,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1238,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1248,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1249,
											"end": 1259,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1233,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1233,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1233,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1271,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1230,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "7979DC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1293,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1345,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1230,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1405,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 1358,
											"end": 1380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1358,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1358,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1447,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1448,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1429,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1506,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1477,
											"end": 1506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1524,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1559,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 4,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1542,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1542,
											"end": 1569,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "667"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 1773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1783,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1783,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1864,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1864,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2071,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1949,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2022,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2046,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2022,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2047,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2002,
											"end": 2065,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2002,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 2071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2216,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2077,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2168,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2177,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2216,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2551,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2222,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2305,
											"end": 2328,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2417,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2298,
											"end": 2417,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2336,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2336,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2415,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2336,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2417,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2298,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2526,
											"end": 2533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2502,
											"end": 2524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2481,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2534,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2481,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2534,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2551,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2733,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2724,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2724,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2706,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2706,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2854,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2854,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2999,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2999,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3205,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3048,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3148,
											"end": 3198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3198,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3148,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3211,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3434,
											"end": 3451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3431,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3368,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3452,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3368,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3459,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3634,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3465,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 3628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3628,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3634,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3634,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3806,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3640,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F20546F6B656E73205374616B656400000000000000000000000000000000"
										},
										{
											"begin": 3776,
											"end": 3777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 4178,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3812,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4039,
											"end": 4041,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3975,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3975,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4140,
											"end": 4143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4051,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4051,
											"end": 4144,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4051,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 4178,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 4178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 4178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 4178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4603,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4184,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4591,
											"end": 4595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4465,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4465,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4789,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4609,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4657,
											"end": 4734,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4754,
											"end": 4758,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4782,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4986,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4795,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4835,
											"end": 4838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4854,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4874,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4854,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4888,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4888,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4952,
											"end": 4955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4946,
											"end": 4956,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4979,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4943,
											"end": 4979,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4959,
											"end": 4977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 4979,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4943,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4986,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4795,
											"end": 4986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5174,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4992,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "PUSH",
											"source": 5,
											"value": "596F752063616E2774207769746864726177206265666F7265203120686F7572"
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5109,
											"end": 5167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5180,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5343,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5410,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5343,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5419,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5419,
											"end": 5512,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5419,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5971,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5552,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5745,
											"end": 5754,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5833,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5964,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5833,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5825,
											"end": 5964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6171,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5977,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6037,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6037,
											"end": 6057,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6037,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6057,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6089,
											"end": 6090,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6071,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 6071,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6091,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6108,
											"end": 6117,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6139,
											"end": 6140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6141,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6164,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6127,
											"end": 6164,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6144,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6164,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6127,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6171,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6171,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6587,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6177,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6240,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6260,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6240,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6274,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6274,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6294,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6329,
											"end": 6330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6326,
											"end": 6327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6369,
											"end": 6380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6351,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6381,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6351,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6530,
											"end": 6531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6532,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6533,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6547,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6441,
											"end": 6580,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6560,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6580,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6441,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6593,
											"end": 6773,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6593,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6718,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6719,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6762,
											"end": 6766,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6767,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6964,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 6779,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6819,
											"end": 6820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6836,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6836,
											"end": 6856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6836,
											"end": 6856,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6836,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6870,
											"end": 6890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6890,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6870,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6865,
											"end": 6890,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6865,
											"end": 6890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6899,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 6899,
											"end": 6934,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6914,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6899,
											"end": 6934,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 6899,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6954,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6958,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6958,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6964,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 7088,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6970,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7075,
											"end": 7080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7057,
											"end": 7081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7052,
											"end": 7055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 7088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7316,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 7094,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7191,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7214,
											"end": 7223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7202,
											"end": 7228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7202,
											"end": 7228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7308,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7288,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7238,
											"end": 7309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7309,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7238,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7316,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7465,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7322,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7404,
											"end": 7417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7426,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7453,
											"end": 7458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7426,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7426,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7426,
											"end": 7459,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7426,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7465,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7322,
											"end": 7465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7822,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 7471,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7592,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7578,
											"end": 7587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7576,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7565,
											"end": 7588,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7561,
											"end": 7593,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7558,
											"end": 7677,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7558,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7558,
											"end": 7677,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7596,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7596,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7596,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7596,
											"end": 7675,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7596,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7558,
											"end": 7677,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7558,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7741,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7797,
											"end": 7804,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7786,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7773,
											"end": 7795,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7741,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7805,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7741,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7822,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8009,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7828,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7968,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420456E6F756768204D6F6E657920746F20676976652072657761726400"
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7952,
											"end": 7966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 8002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 8009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8381,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8015,
											"end": 8381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8242,
											"end": 8244,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8237,
											"end": 8240,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 8178,
											"end": 8245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8245,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8178,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8254,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8343,
											"end": 8346,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8254,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8254,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8254,
											"end": 8347,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8254,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8374,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8367,
											"end": 8370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8363,
											"end": 8375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8356,
											"end": 8375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8806,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 8387,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8580,
											"end": 8589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8568,
											"end": 8594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8568,
											"end": 8594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8640,
											"end": 8649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8634,
											"end": 8638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8650,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8626,
											"end": 8627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8615,
											"end": 8624,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8611,
											"end": 8628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8604,
											"end": 8651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8668,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8794,
											"end": 8798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8668,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8668,
											"end": 8799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8668,
											"end": 8799,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8668,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8387,
											"end": 8806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 9040,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8812,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8952,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "596F7527726520737570706F73656420746F20656E746572206120706F736974"
										},
										{
											"begin": 8948,
											"end": 8949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8936,
											"end": 8950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8929,
											"end": 8987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9021,
											"end": 9032,
											"name": "PUSH",
											"source": 5,
											"value": "6976652076616C75650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 9040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 9040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9412,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9046,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9188,
											"end": 9191,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 9273,
											"end": 9275,
											"name": "PUSH",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 9268,
											"end": 9271,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 9209,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9276,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 9209,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9374,
											"end": 9377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 9285,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9378,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9285,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9398,
											"end": 9401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9394,
											"end": 9406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9837,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 9418,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9584,
											"end": 9588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9599,
											"end": 9625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9599,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9671,
											"end": 9680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9665,
											"end": 9669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9661,
											"end": 9681,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9657,
											"end": 9658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9635,
											"end": 9682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9699,
											"end": 9830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9830,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9699,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9691,
											"end": 9830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9691,
											"end": 9830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 10013,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 9843,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742042616C616E6365000000000000000000000000"
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 9977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9967,
											"end": 9981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9960,
											"end": 10006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 10013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9843,
											"end": 10013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10019,
											"end": 10385,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10019,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10161,
											"end": 10164,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10246,
											"end": 10248,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 10241,
											"end": 10244,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 10182,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10249,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10182,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10175,
											"end": 10249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10175,
											"end": 10249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 10258,
											"end": 10351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10376,
											"end": 10378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10367,
											"end": 10379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10019,
											"end": 10385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10019,
											"end": 10385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10019,
											"end": 10385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10019,
											"end": 10385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10391,
											"end": 10810,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 10391,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10584,
											"end": 10593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 10642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10615,
											"end": 10632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10608,
											"end": 10655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10798,
											"end": 10802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10672,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10803,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 10672,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10664,
											"end": 10803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10664,
											"end": 10803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10391,
											"end": 10810,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10391,
											"end": 10810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10391,
											"end": 10810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10391,
											"end": 10810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10995,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 10816,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "PUSH",
											"source": 5,
											"value": "596F7520646F6E2774206861766520656E6F7567682062616C616E6365000000"
										},
										{
											"begin": 10952,
											"end": 10953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10944,
											"end": 10950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10940,
											"end": 10954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 10988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11367,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 11001,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11143,
											"end": 11146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 11228,
											"end": 11230,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 11223,
											"end": 11226,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 11164,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11231,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 11164,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11157,
											"end": 11231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11157,
											"end": 11231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11329,
											"end": 11332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 11240,
											"end": 11333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11333,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11240,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11358,
											"end": 11360,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11353,
											"end": 11356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11342,
											"end": 11361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11342,
											"end": 11361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11792,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 11373,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11539,
											"end": 11543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11554,
											"end": 11580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11554,
											"end": 11580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11626,
											"end": 11635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11616,
											"end": 11636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11612,
											"end": 11613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11601,
											"end": 11610,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11597,
											"end": 11614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11590,
											"end": 11637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11654,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11780,
											"end": 11784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11654,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 11654,
											"end": 11785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11654,
											"end": 11785,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11654,
											"end": 11785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 11785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11646,
											"end": 11785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11373,
											"end": 11792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11919,
											"end": 11923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 11959,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11946,
											"end": 11955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11934,
											"end": 11960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11934,
											"end": 11960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11970,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 12038,
											"end": 12039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12023,
											"end": 12040,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12014,
											"end": 12020,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11970,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 11970,
											"end": 12041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11970,
											"end": 12041,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11970,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 12119,
											"end": 12121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12117,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12104,
											"end": 12122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12095,
											"end": 12101,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 12051,
											"end": 12123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12123,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 12051,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11798,
											"end": 12130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12323,
											"end": 12325,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12312,
											"end": 12321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12308,
											"end": 12326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12300,
											"end": 12326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12300,
											"end": 12326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12336,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 12404,
											"end": 12405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12393,
											"end": 12402,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12389,
											"end": 12406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12380,
											"end": 12386,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 12336,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 12336,
											"end": 12407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12336,
											"end": 12407,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 12336,
											"end": 12407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12485,
											"end": 12487,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12474,
											"end": 12483,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12470,
											"end": 12488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12461,
											"end": 12467,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 12417,
											"end": 12489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 12567,
											"end": 12569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12556,
											"end": 12565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12552,
											"end": 12570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12549,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 12499,
											"end": 12571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12571,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 12499,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12674,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 12584,
											"end": 12674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12654,
											"end": 12667,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12647,
											"end": 12668,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12636,
											"end": 12668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12636,
											"end": 12668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12680,
											"end": 12796,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 12680,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12750,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12765,
											"end": 12770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12750,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 12750,
											"end": 12771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12750,
											"end": 12771,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12750,
											"end": 12771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12743,
											"end": 12748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12740,
											"end": 12772,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12730,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 12730,
											"end": 12790,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12786,
											"end": 12787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12776,
											"end": 12788,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12730,
											"end": 12790,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 12730,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12680,
											"end": 12796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12680,
											"end": 12796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12802,
											"end": 12939,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 12802,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12856,
											"end": 12861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12881,
											"end": 12894,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12872,
											"end": 12894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12872,
											"end": 12894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 12927,
											"end": 12932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 12903,
											"end": 12933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12903,
											"end": 12933,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 12903,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12802,
											"end": 12939,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12802,
											"end": 12939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12802,
											"end": 12939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12802,
											"end": 12939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12802,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 13290,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 12945,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13012,
											"end": 13018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13049,
											"end": 13058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13040,
											"end": 13047,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13036,
											"end": 13059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13032,
											"end": 13064,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13029,
											"end": 13148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13067,
											"end": 13146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 13067,
											"end": 13146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 13067,
											"end": 13146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13067,
											"end": 13146,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 13067,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13148,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13029,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13187,
											"end": 13188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13212,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 13265,
											"end": 13272,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13256,
											"end": 13262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13245,
											"end": 13254,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13241,
											"end": 13263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13212,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 13212,
											"end": 13273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13212,
											"end": 13273,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 13212,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13202,
											"end": 13273,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13202,
											"end": 13273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13158,
											"end": 13283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 13290,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 13290,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 13290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 13290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12945,
											"end": 13290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13394,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 13296,
											"end": 13394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13347,
											"end": 13353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13375,
											"end": 13387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13365,
											"end": 13387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13547,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 13400,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13501,
											"end": 13512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13523,
											"end": 13541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13523,
											"end": 13541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13547,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13799,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 13553,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13634,
											"end": 13635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13658,
											"end": 13664,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13652,
											"end": 13665,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13743,
											"end": 13744,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13738,
											"end": 13741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13734,
											"end": 13745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13728,
											"end": 13746,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13724,
											"end": 13725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13719,
											"end": 13722,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13715,
											"end": 13726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13708,
											"end": 13747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13682,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13677,
											"end": 13678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13673,
											"end": 13683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13668,
											"end": 13683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13668,
											"end": 13683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 13644,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13791,
											"end": 13792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13782,
											"end": 13788,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13773,
											"end": 13789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13766,
											"end": 13793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13615,
											"end": 13799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13805,
											"end": 14191,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 13805,
											"end": 14191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13909,
											"end": 13912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13937,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 13969,
											"end": 13974,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13937,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 13937,
											"end": 13975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13937,
											"end": 13975,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 13937,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13991,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 14072,
											"end": 14078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14067,
											"end": 14070,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13991,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 13991,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13991,
											"end": 14079,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 13991,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13984,
											"end": 14079,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13984,
											"end": 14079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14088,
											"end": 14153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 14146,
											"end": 14152,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14141,
											"end": 14144,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14134,
											"end": 14138,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14127,
											"end": 14132,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14123,
											"end": 14139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14088,
											"end": 14153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 14088,
											"end": 14153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14088,
											"end": 14153,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 14088,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14178,
											"end": 14184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14173,
											"end": 14176,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14169,
											"end": 14185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13913,
											"end": 14191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13805,
											"end": 14191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13805,
											"end": 14191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13805,
											"end": 14191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13805,
											"end": 14191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13805,
											"end": 14191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 14468,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 14197,
											"end": 14468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14327,
											"end": 14330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14349,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 14438,
											"end": 14441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14429,
											"end": 14435,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 14349,
											"end": 14442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14442,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 14349,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14342,
											"end": 14442,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14342,
											"end": 14442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14459,
											"end": 14462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14452,
											"end": 14462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14452,
											"end": 14462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 14468,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 14468,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 14468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 14468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14197,
											"end": 14468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"staking2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"fundRewards(uint256)": "93707a19",
							"stake(uint256)": "a694fc3a",
							"stakers(address)": "9168ae72",
							"timeUntilWithdrawable(address)": "3e11f2e9",
							"token()": "fc0c546a",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TimeNotCompleted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Withdrawed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"timeUntilWithdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tushar Arora\",\"details\":\"uses SafeERC20\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"fundRewards(uint256)\":{\"custom:important\":\"This function should only be called by the person who desires to give his fund to this contract.\",\"params\":{\"amount\":\"The amount you want to fund this contract with, so that this contract can give rewards.\"}},\"stake(uint256)\":{\"details\":\"Sets the value for {_amount}\",\"params\":{\"_amount\":\"Value a user want to stake.\"}},\"timeUntilWithdrawable(address)\":{\"params\":{\"_user\":\"Address of the user inquiring about the remaining wait time before withdrawal.  It tells the user how much time left before he can withdraw his balance.\"}}},\"title\":\"A contract to allow people to stake coins and get rewards.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"stake(uint256)\":{\"notice\":\"It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake.\"},\"withdraw()\":{\"notice\":\"It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account. It will take out all the amount from their account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking2.sol\":\"StakingTokens\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"staking2.sol\":{\"keccak256\":\"0x61c73e95b4b3805f92caeee908782d97943e49f30b85fa35b7b798108e3beea1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9be41c70295e1949dc51764cc82052265e564dd3a646e7f356233467ca8e6a15\",\"dweb:/ipfs/QmNcdFj6idwWpdJqG9dXDrXiMev4YtMz8FxLmbAm4B8De3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 701,
								"contract": "staking2.sol:StakingTokens",
								"label": "stakers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Stake)696_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)696_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingTokens.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)696_storage"
							},
							"t_struct(Stake)696_storage": {
								"encoding": "inplace",
								"label": "struct StakingTokens.Stake",
								"members": [
									{
										"astId": 693,
										"contract": "staking2.sol:StakingTokens",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 695,
										"contract": "staking2.sol:StakingTokens",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"stake(uint256)": {
								"notice": "It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake."
							},
							"withdraw()": {
								"notice": "It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account. It will take out all the amount from their account."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"staking2.sol": {
				"ast": {
					"absolutePath": "staking2.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						],
						"StakingTokens": [
							946
						]
					},
					"id": 947,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 947,
							"sourceUnit": 404,
							"src": "66:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingTokens",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 660,
								"nodeType": "StructuredDocumentation",
								"src": "135:127:4",
								"text": " @author Tushar Arora\n @title A contract to allow people to stake coins and get rewards.\n @dev uses SafeERC20"
							},
							"fullyImplemented": true,
							"id": 946,
							"linearizedBaseContracts": [
								946
							],
							"name": "StakingTokens",
							"nameLocation": "273:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"301:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "301:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "295:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"315:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "315:6:4"
										},
										"referencedDeclaration": 77,
										"src": "315:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 667,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "352:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 946,
									"src": "328:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 666,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 665,
											"name": "IERC20",
											"nameLocations": [
												"328:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "328:6:4"
										},
										"referencedDeclaration": 77,
										"src": "328:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 673,
									"name": "Staked",
									"nameLocation": "372:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "395:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "379:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "406:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "401:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "401:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:35:4"
									},
									"src": "366:48:4"
								},
								{
									"anonymous": false,
									"eventSelector": "619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9",
									"id": 679,
									"name": "Reward",
									"nameLocation": "426:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "449:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "433:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "460:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "455:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "455:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:35:4"
									},
									"src": "420:48:4"
								},
								{
									"anonymous": false,
									"eventSelector": "cecccf974394b5dfc20e8840042bbaa68e166eff261ba930e076891582965d41",
									"id": 683,
									"name": "Withdrawed",
									"nameLocation": "480:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "507:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "491:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:22:4"
									},
									"src": "474:39:4"
								},
								{
									"errorSelector": "7979dc87",
									"id": 687,
									"name": "InsufficientBalance",
									"nameLocation": "531:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "558:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "551:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "551:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:16:4"
									},
									"src": "525:42:4"
								},
								{
									"errorSelector": "30f1c216",
									"id": 691,
									"name": "TimeNotCompleted",
									"nameLocation": "579:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "603:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "596:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:16:4"
									},
									"src": "573:39:4"
								},
								{
									"canonicalName": "StakingTokens.Stake",
									"id": 696,
									"members": [
										{
											"constant": false,
											"id": 693,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "679:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 696,
											"src": "671:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 692,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "671:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "704:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 696,
											"src": "696:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 694,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "648:5:4",
									"nodeType": "StructDefinition",
									"scope": 946,
									"src": "641:80:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 701,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "762:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 946,
									"src": "729:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
										"typeString": "mapping(address => struct StakingTokens.Stake)"
									},
									"typeName": {
										"id": 700,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 697,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "737:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "729:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
											"typeString": "mapping(address => struct StakingTokens.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 699,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 698,
												"name": "Stake",
												"nameLocations": [
													"748:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "748:5:4"
											},
											"referencedDeclaration": 696,
											"src": "748:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$696_storage_ptr",
												"typeString": "struct StakingTokens.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "811:33:4",
										"statements": [
											{
												"expression": {
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 707,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "822:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 708,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "830:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "822:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "822:14:4"
											}
										]
									},
									"id": 712,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "797:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "790:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 702,
														"name": "IERC20",
														"nameLocations": [
															"790:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "790:6:4"
													},
													"referencedDeclaration": 77,
													"src": "790:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:15:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:4"
									},
									"scope": 946,
									"src": "778:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "1126:451:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "1140:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1140:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "1137:80:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "496e73756666696369656e742042616c616e6365",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1194:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"typeString": "literal_string \"Insufficient Balance\""
																},
																"value": "Insufficient Balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
																	"typeString": "literal_string \"Insufficient Balance\""
																}
															],
															"id": 721,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "1174:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1174:43:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 724,
													"nodeType": "RevertStatement",
													"src": "1167:50:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 728,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1249:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1253:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1249:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 726,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1233:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1239:9:4",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "1233:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1233:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 731,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "1264:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1233:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "1230:115:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "596f7520646f6e2774206861766520656e6f7567682062616c616e6365",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1313:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12",
																	"typeString": "literal_string \"You don't have enough balance\""
																},
																"value": "You don't have enough balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_05e9403d3c612fc2485ac03090fd7cb4a4bc9d261b66ec8eef0c14d09fb73b12",
																	"typeString": "literal_string \"You don't have enough balance\""
																}
															],
															"id": 733,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "1293:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1293:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 736,
													"nodeType": "RevertStatement",
													"src": "1286:59:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 741,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1381:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1385:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1381:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 745,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1401:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingTokens_$946",
																		"typeString": "contract StakingTokens"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingTokens_$946",
																		"typeString": "contract StakingTokens"
																	}
																],
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1393:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 743,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1393:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1393:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1408:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 738,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1358:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1364:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1358:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "1358:58:4"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 750,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "1429:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.Stake storage ref)"
																}
															},
															"id": 753,
															"indexExpression": {
																"expression": {
																	"id": 751,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1437:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1441:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1437:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1429:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_storage",
																"typeString": "struct StakingTokens.Stake storage ref"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1449:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "1429:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 755,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "1459:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1429:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1429:37:4"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 758,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "1477:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.Stake storage ref)"
																}
															},
															"id": 761,
															"indexExpression": {
																"expression": {
																	"id": 759,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1485:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1489:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1485:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1477:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_storage",
																"typeString": "struct StakingTokens.Stake storage ref"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1497:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 695,
														"src": "1477:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 763,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1509:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1515:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1509:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1477:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "1477:47:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 768,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1549:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1553:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1549:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1561:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1542:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "EmitStatement",
												"src": "1537:32:4"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "852:224:4",
										"text": " It allows a user to stake tokens but the amount can't be 0 and checks if they have sufficient balance to stake.\n @dev Sets the value for {_amount}\n @param _amount Value a user want to stake."
									},
									"functionSelector": "a694fc3a",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1091:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1105:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1097:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:17:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:4"
									},
									"scope": 946,
									"src": "1082:495:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "1813:931:4",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1837:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "1824:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
															"typeString": "struct StakingTokens.Stake"
														},
														"typeName": {
															"id": 779,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 778,
																"name": "Stake",
																"nameLocations": [
																	"1824:5:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 696,
																"src": "1824:5:4"
															},
															"referencedDeclaration": 696,
															"src": "1824:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_storage_ptr",
																"typeString": "struct StakingTokens.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"baseExpression": {
														"id": 781,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1844:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
															"typeString": "mapping(address => struct StakingTokens.Stake storage ref)"
														}
													},
													"id": 784,
													"indexExpression": {
														"expression": {
															"id": 782,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1852:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1856:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1852:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1844:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$696_storage",
														"typeString": "struct StakingTokens.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1824:39:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 786,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "1877:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																"typeString": "struct StakingTokens.Stake memory"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1882:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "1877:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1891:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1877:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 795,
												"nodeType": "IfStatement",
												"src": "1874:102:4",
												"trueBody": {
													"id": 794,
													"nodeType": "Block",
													"src": "1903:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4e6f20546f6b656e73205374616b6564",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1945:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
																			"typeString": "literal_string \"No Tokens Staked\""
																		},
																		"value": "No Tokens Staked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f6cfcb541dc92c964c64de3d41e68d5273b1050b242b6455ff04559f3d5cff28",
																			"typeString": "literal_string \"No Tokens Staked\""
																		}
																	],
																	"id": 790,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "1925:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 793,
															"nodeType": "RevertStatement",
															"src": "1918:46:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 796,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1989:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1995:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1989:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 798,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2008:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																	"typeString": "struct StakingTokens.Stake memory"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2013:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "2008:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2025:7:4",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3600_by_1",
																"typeString": "int_const 3600"
															},
															"value": "1"
														},
														"src": "2008:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1989:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 807,
												"nodeType": "IfStatement",
												"src": "1986:120:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "596f752063616e2774207769746864726177206265666f7265203120686f7572",
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2071:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
																	"typeString": "literal_string \"You can't withdraw before 1 hour\""
																},
																"value": "You can't withdraw before 1 hour"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_75dd5947b3278862084819241bb49f707432ba63fbeaca2cdb92d351ba94f583",
																	"typeString": "literal_string \"You can't withdraw before 1 hour\""
																}
															],
															"id": 803,
															"name": "TimeNotCompleted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2054:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2054:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 806,
													"nodeType": "RevertStatement",
													"src": "2047:59:4"
												}
											},
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "stakeTime",
														"nameLocation": "2122:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2117:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 808,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 810,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2140:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2134:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 812,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "2152:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																"typeString": "struct StakingTokens.Stake memory"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2157:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 695,
														"src": "2152:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2134:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2117:49:4"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2182:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2177:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2177:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 818,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2191:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																	"typeString": "struct StakingTokens.Stake memory"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2196:6:4",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 693,
															"src": "2191:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 820,
															"name": "stakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "2205:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2191:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33363030",
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2217:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "2191:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 830,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2356:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingTokens_$946",
																					"typeString": "contract StakingTokens"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingTokens_$946",
																					"typeString": "contract StakingTokens"
																				}
																			],
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2348:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 828,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2348:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2348:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 826,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "2332:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2338:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "2332:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2332:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 833,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "2366:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																			"typeString": "struct StakingTokens.Stake memory"
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2371:6:4",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 693,
																	"src": "2366:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 835,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "2380:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2366:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2332:54:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420456e6f756768204d6f6e657920746f206769766520726577617264",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2388:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
																"typeString": "literal_string \"Not Enough Money to give reward\""
															},
															"value": "Not Enough Money to give reward"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee69140390908ba625bc3e1e48271439241862cb9ccd0fb52146062e64c90917",
																"typeString": "literal_string \"Not Enough Money to give reward\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:98:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2324:98:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 844,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2510:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2514:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2510:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 846,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2522:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																		"typeString": "struct StakingTokens.Stake memory"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2527:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 693,
																"src": "2522:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 848,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "2536:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2522:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 841,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "2491:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2497:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "2491:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2491:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2491:52:4"
											},
											{
												"expression": {
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 852,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "2580:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.Stake storage ref)"
																}
															},
															"id": 855,
															"indexExpression": {
																"expression": {
																	"id": 853,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2588:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2592:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2588:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2580:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_storage",
																"typeString": "struct StakingTokens.Stake storage ref"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2600:6:4",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "2580:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2609:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2580:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "2580:30:4"
											},
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 860,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "2621:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
																	"typeString": "mapping(address => struct StakingTokens.Stake storage ref)"
																}
															},
															"id": 863,
															"indexExpression": {
																"expression": {
																	"id": 861,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2629:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2633:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2629:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2621:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_storage",
																"typeString": "struct StakingTokens.Stake storage ref"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2641:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 695,
														"src": "2621:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2653:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2621:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "2621:33:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 869,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2679:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2683:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2679:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "2691:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 868,
														"name": "Reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "2672:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "EmitStatement",
												"src": "2667:31:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 875,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2725:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2729:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2725:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 874,
														"name": "Withdrawed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "2714:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2714:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "2709:27:4"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "1585:189:4",
										"text": " It allows user to withdraw only after 1 hour and also checks if they have non-zero balance in their account.\n It will take out all the amount from their account."
									},
									"functionSelector": "3ccfd60b",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1789:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:4"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1813:0:4"
									},
									"scope": 946,
									"src": "1780:964:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "3051:199:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "3065:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3073:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3065:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "3062:98:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "596f7527726520737570706f73656420746f20656e746572206120706f7369746976652076616c7565",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3116:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4",
																	"typeString": "literal_string \"You're supposed to enter a positive value\""
																},
																"value": "You're supposed to enter a positive value"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_5a9025cea14f41bd36c22f587ff332fdd2bdbc6c01ac83f94a1772700b6f1dc4",
																	"typeString": "literal_string \"You're supposed to enter a positive value\""
																}
															],
															"id": 889,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3096:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3096:64:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 892,
													"nodeType": "RevertStatement",
													"src": "3089:71:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 897,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3208:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3212:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3208:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 901,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3228:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingTokens_$946",
																		"typeString": "contract StakingTokens"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingTokens_$946",
																		"typeString": "contract StakingTokens"
																	}
																],
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3220:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 899,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3220:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3220:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3235:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 894,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3185:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3191:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "3185:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "3185:57:4"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "2752:245:4",
										"text": " @param amount The amount you want to fund this contract with, so that this contract can give rewards.\n @custom:important This function should only be called by the person who desires to give his fund to this contract."
									},
									"functionSelector": "93707a19",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fundRewards",
									"nameLocation": "3014:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3031:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3026:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3026:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3025:13:4"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3051:0:4"
									},
									"scope": 946,
									"src": "3005:245:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3547:223:4",
										"statements": [
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3571:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "3558:17:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
															"typeString": "struct StakingTokens.Stake"
														},
														"typeName": {
															"id": 916,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 915,
																"name": "Stake",
																"nameLocations": [
																	"3558:5:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 696,
																"src": "3558:5:4"
															},
															"referencedDeclaration": 696,
															"src": "3558:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$696_storage_ptr",
																"typeString": "struct StakingTokens.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"baseExpression": {
														"id": 918,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3578:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$696_storage_$",
															"typeString": "mapping(address => struct StakingTokens.Stake storage ref)"
														}
													},
													"id": 920,
													"indexExpression": {
														"id": 919,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "3586:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3578:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$696_storage",
														"typeString": "struct StakingTokens.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3558:34:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 922,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3609:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3615:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3609:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 924,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "3628:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																	"typeString": "struct StakingTokens.Stake memory"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3633:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "3628:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3645:7:4",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3600_by_1",
																"typeString": "int_const 3600"
															},
															"value": "1"
														},
														"src": "3628:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 931,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 917,
																						"src": "3713:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$696_memory_ptr",
																							"typeString": "struct StakingTokens.Stake memory"
																						}
																					},
																					"id": 932,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3718:9:4",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 695,
																					"src": "3713:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3730:7:4",
																					"subdenomination": "hours",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3600_by_1",
																						"typeString": "int_const 3600"
																					},
																					"value": "1"
																				},
																				"src": "3713:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 935,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3712:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 936,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3741:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3747:9:4",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3741:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3712:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 939,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3711:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3630",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3760:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "3711:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 914,
													"id": 942,
													"nodeType": "Return",
													"src": "3704:58:4"
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "3605:157:4",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3674:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 914,
													"id": 930,
													"nodeType": "Return",
													"src": "3667:8:4"
												}
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "3258:202:4",
										"text": " @param _user Address of the user inquiring about the remaining wait time before withdrawal.\n \n It tells the user how much time left before he can withdraw his balance."
									},
									"functionSelector": "3e11f2e9",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeUntilWithdrawable",
									"nameLocation": "3475:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3505:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3497:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3496:15:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3533:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:9:4"
									},
									"scope": 946,
									"src": "3466:304:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 947,
							"src": "264:3509:4",
							"usedErrors": [
								130,
								411,
								416,
								419,
								687,
								691
							],
							"usedEvents": [
								673,
								679,
								683
							]
						}
					],
					"src": "39:3736:4"
				},
				"id": 4
			}
		}
	}
}